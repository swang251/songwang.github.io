{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/favicon.ico","path":"favicon.ico","modified":0,"renderable":0},{"_id":"source/images/20181108/paraview_fluctuation.png","path":"images/20181108/paraview_fluctuation.png","modified":0,"renderable":0},{"_id":"themes/maupassant/source/css/default.css","path":"css/default.css","modified":0,"renderable":1},{"_id":"themes/maupassant/source/css/donate.css","path":"css/donate.css","modified":0,"renderable":1},{"_id":"themes/maupassant/source/donate/index.html","path":"donate/index.html","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/codeblock-resizer.js","path":"js/codeblock-resizer.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/css/style.scss","path":"css/style.scss","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/donate.js","path":"js/donate.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/fancybox.js","path":"js/fancybox.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/share.js","path":"js/share.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/smartresize.js","path":"js/smartresize.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/totop.js","path":"js/totop.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/img/AliPayQR.png","path":"img/AliPayQR.png","modified":0,"renderable":1},{"_id":"themes/maupassant/source/img/BTCQR.png","path":"img/BTCQR.png","modified":0,"renderable":1},{"_id":"themes/maupassant/source/img/alipay.svg","path":"img/alipay.svg","modified":0,"renderable":1},{"_id":"themes/maupassant/source/img/WeChatQR.png","path":"img/WeChatQR.png","modified":0,"renderable":1},{"_id":"themes/maupassant/source/img/bitcoin.svg","path":"img/bitcoin.svg","modified":0,"renderable":1},{"_id":"themes/maupassant/source/img/github.svg","path":"img/github.svg","modified":0,"renderable":1},{"_id":"themes/maupassant/source/img/like.svg","path":"img/like.svg","modified":0,"renderable":1},{"_id":"themes/maupassant/source/img/paypal.svg","path":"img/paypal.svg","modified":0,"renderable":1},{"_id":"themes/maupassant/source/img/wechat.svg","path":"img/wechat.svg","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/gitment.browser.js","path":"js/gitment.browser.js","modified":0,"renderable":1},{"_id":"source/images/20181229/google_calendar_add.png","path":"images/20181229/google_calendar_add.png","modified":1,"renderable":0}],"Cache":[{"_id":"source/.DS_Store","hash":"5bff01340a41de2e31791e5d3f5e9d1444e27cf5","modified":1537074172000},{"_id":"source/favicon.ico","hash":"f6a9be485423a8cc37953fb6ff8e54f67feaa904","modified":1537073989000},{"_id":"themes/maupassant/.DS_Store","hash":"61d4653525ee800306d888d998f91174144e6d64","modified":1529704485000},{"_id":"themes/maupassant/.travis.yml","hash":"0339959f29deddc365e8fe8bd85da524410b9a23","modified":1529704485000},{"_id":"themes/maupassant/README.md","hash":"b3fd2d71642ee922678038e6813e6c39638fb33c","modified":1529704485000},{"_id":"themes/maupassant/LICENSE","hash":"f0ac2f92770650c9835183f79010c0d307b34acd","modified":1529704485000},{"_id":"themes/maupassant/_config.yml","hash":"6917e8d5cdefece94a18c6996ce1f3c20e4d7001","modified":1537239988000},{"_id":"themes/maupassant/package.json","hash":"81fb4e2ac051ecfb9a93f37b28910291b939771a","modified":1529704485000},{"_id":"source/publications/index.md~","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1529704485000},{"_id":"source/_posts/3D-Printer.md","hash":"70328a3fe92125d85ee5d6c4e215a25470e58372","modified":1539631669000},{"_id":"source/_posts/Calculating-Fluctuation-in-Paraview.md","hash":"7aaf3fc47213bb704b740784391ccb514251aeae","modified":1541717067000},{"_id":"source/About/index.md","hash":"cfaaea482bd79dfb0c1365531aba355c1fa784c2","modified":1537240696000},{"_id":"source/_posts/DSPFirst-AppendixA.md","hash":"20fe705e3bf38bcbb79a6b047ab3282b19a5061a","modified":1546132360000},{"_id":"source/_posts/DSPFirst-Ch1.md","hash":"b9832b089888bbc34f10e80db54d8105cd295bcb","modified":1546132352000},{"_id":"source/_posts/DSPFirst-Ch2.md","hash":"24a8d0cdb21f00075b6c2f155bbf295d26db5b85","modified":1546132121000},{"_id":"source/_posts/GoogleCalendarOnMac.md","hash":"367917134ce4a9e81b3eea2bf4bb4213d1f517ca","modified":1546192428000},{"_id":"source/_posts/Emacs-Tutorial-short-version.md","hash":"0d91eef5c0581073266c0f379deaab33fc0c2dc6","modified":1529704485000},{"_id":"source/_posts/Emacs-Tutorial-short-version.md~","hash":"3b59ab43cbe8d0f15b103209fca95409e64afc13","modified":1529704485000},{"_id":"source/_posts/LBM-based-Solver.md","hash":"33b4d1b36cb0d0232c658c3b7cd4f99a8981dc7e","modified":1537222301000},{"_id":"source/About/index.md~","hash":"71ce50a2dea3f85aaf6e7b2830b53e234cdc850d","modified":1529704485000},{"_id":"source/_posts/On-the-Art-of-Singing-19.md","hash":"c380d5176af1674d449ae0bda02370a1eb0fd922","modified":1530674359000},{"_id":"source/_posts/On-the-Art-of-Singing-28.md","hash":"dce001b277a37db559bda9e8b0f1f8f4a3d4d3f2","modified":1530556528000},{"_id":"source/_posts/On-the-Art-of-Singing-6.md","hash":"d4f2c72765bfc615fd87515b3f1e57550e394fe6","modified":1530499921000},{"_id":"source/_posts/On-the-Art-of-Singing-I-1-Imagery-and-the-Teaching-of-Singing.md","hash":"73bf9bacc6cc63030f28660ffd2a746e58e3b8ab","modified":1530046309000},{"_id":"source/_posts/On-the-Art-of-Singing-I-12-What-you-Need-Is-More-Support.md","hash":"fbb048a132579c0c13118b88444aae32db1886b7","modified":1530278576000},{"_id":"source/_posts/Passwordless-SSH-connection-to-a-Cluster.md","hash":"b72e7ea881555b25615aad5c3bd4e1eb48066d23","modified":1541866492000},{"_id":"source/_posts/On-the-Art-of-Singing-I-3-Covering-in-the-Singing-Voice.md","hash":"450d2e5bf8fba903c229d02b8f2a991f83f37906","modified":1537218395000},{"_id":"source/_posts/Palabos-Descriptor-External-Field.md","hash":"b71491a34e4c1d6cbbbaa2dc573bb7a67acb1fde","modified":1539637387000},{"_id":"source/_posts/Palabos-Dynamics-Calling-Relationships.md","hash":"4bfeddc50488c0553a3d62c95dd1c79131d1deb9","modified":1536611426000},{"_id":"source/_posts/Practical-Vocal-Acoustics-Ch1-p5-Mode-of-Phonation.md","hash":"4f658b37b0dbb3f3ae6a3381a94bd30c5383a84d","modified":1534047672000},{"_id":"source/_posts/Practical-Vocal-Acoustics-Ch3-Vocal-Resonance.md","hash":"f982a12cf98769284def898382d3f8dea839143d","modified":1534081054000},{"_id":"source/_posts/Readings-of-the-book-the-theory-of-sound.md~","hash":"45f067683406180b0e23f0996ee9ef68efdc1826","modified":1529704485000},{"_id":"source/_posts/Reflection-at-Discontinuities.md","hash":"f240b3af8824eabc9c3015725df4169ddfcdc307","modified":1540236482000},{"_id":"source/_posts/Selective-Filter-2D-Palabos.md","hash":"e0fc5976ee97c936185356dd3cc727e63c0787cc","modified":1537073557000},{"_id":"source/_posts/first-post.md","hash":"c14bca377d217055c5ac188921bf607778cf58f9","modified":1529704485000},{"_id":"source/_posts/The-guide-for-the-Data-Processor-structure-of-Palabos.md","hash":"84a277e1aca3045f536f686a979892ee74bdaa6b","modified":1535516439000},{"_id":"source/_posts/daqplot-windowsxp-caml.md","hash":"4c0728498399088b2d99b317b0feb43d39168093","modified":1536955534000},{"_id":"source/_posts/hello-world.md","hash":"8a02477044e2b77f1b262da2c48c01429e4a32e4","modified":1529704485000},{"_id":"source/contact/index.md","hash":"12bf88b7b04ea1ce35eb3a4e3aa29cc148e6f890","modified":1529704485000},{"_id":"source/contact/index.md~","hash":"d9143378a98294dd3cccedfd77580b1c2f66af96","modified":1529704485000},{"_id":"source/publications/index.md","hash":"2033c244061673d02f9fd36101492d73d592485f","modified":1537240738000},{"_id":"themes/maupassant/.git/config","hash":"037345b11c41abb3dbbbd6e0242ced24979a7097","modified":1529704485000},{"_id":"themes/maupassant/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1529704485000},{"_id":"themes/maupassant/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1529704485000},{"_id":"themes/maupassant/.git/index","hash":"612f766b84a8df56ab144b84a50f7d47684a7191","modified":1545539925000},{"_id":"themes/maupassant/.git/packed-refs","hash":"27f3e163e9986f818aef299ae081f595a1334ab6","modified":1529704485000},{"_id":"themes/maupassant/languages/de-DE.yml","hash":"5d3556a885e355a8c2da65ef3e7b3ee36a628bfa","modified":1529704485000},{"_id":"themes/maupassant/languages/fr-FR.yml","hash":"b47906ec0abf867fb3e3360bc046b7afb68aee25","modified":1529704485000},{"_id":"themes/maupassant/languages/en.yml","hash":"9dc51349f64e882433957c00dc757366229e0269","modified":1529704485000},{"_id":"themes/maupassant/languages/es-ES.yml","hash":"58e1d04bcd1834fa9d2960e18e027abbbccbedc9","modified":1529704485000},{"_id":"themes/maupassant/languages/ko.yml","hash":"909a33e0befa6978e8e72157c6b415b48551ee31","modified":1529704485000},{"_id":"themes/maupassant/languages/ru.yml","hash":"2476a631f4d3c668de04af85a6c2c97ba2a57e96","modified":1529704485000},{"_id":"themes/maupassant/languages/zh-CN.yml","hash":"ffce5df2448a80dbad71da115c84b81f42a42778","modified":1529704485000},{"_id":"themes/maupassant/languages/zh-TW.yml","hash":"bf3ab970f2ab3f29ddeb9f59bf98163be635e284","modified":1529704485000},{"_id":"themes/maupassant/source/.DS_Store","hash":"ef0d76fcafe41bbced9642cbd2a0e4ca4d7f9a88","modified":1529704485000},{"_id":"themes/maupassant/layout/.DS_Store","hash":"fc5a428fe40854a0ba66b4cea196c6700a57cae7","modified":1529704485000},{"_id":"themes/maupassant/layout/archive.jade","hash":"0050c883b4f202add71c8664d65e6072179e7190","modified":1529704485000},{"_id":"themes/maupassant/layout/base-without-sidebar.jade","hash":"60b5a70f7c61c91aca9fbf813bde26096ef4028f","modified":1529704485000},{"_id":"themes/maupassant/layout/base.jade","hash":"41f3a0f5e3c5b722de9d058c458822e5122384e1","modified":1529704485000},{"_id":"themes/maupassant/layout/index.jade","hash":"66d90f71435d1632b783479c091fffba206289bc","modified":1529704485000},{"_id":"themes/maupassant/layout/page.jade","hash":"afc27b4a6478a804ded47aa9f38290c7a9b75abe","modified":1529704485000},{"_id":"themes/maupassant/layout/post.jade","hash":"2075d3626490a10534caef90fac09103e77a1926","modified":1529704485000},{"_id":"themes/maupassant/layout/single-column.jade","hash":"c35fff4d9b331a41af5bc10f4278ec3d9da503db","modified":1529704485000},{"_id":"themes/maupassant/layout/timeline.jade","hash":"649281ace58d7ff08a6ecb10606799ae2f77bb38","modified":1529704485000},{"_id":"themes/maupassant/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1529704485000},{"_id":"themes/maupassant/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1529704485000},{"_id":"themes/maupassant/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1529704485000},{"_id":"themes/maupassant/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1529704485000},{"_id":"themes/maupassant/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1529704485000},{"_id":"themes/maupassant/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1529704485000},{"_id":"themes/maupassant/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1529704485000},{"_id":"themes/maupassant/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1529704485000},{"_id":"themes/maupassant/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1529704485000},{"_id":"themes/maupassant/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1529704485000},{"_id":"themes/maupassant/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1529704485000},{"_id":"themes/maupassant/.git/logs/HEAD","hash":"8f6e3ad7703c646034d8ebae4f73ba31e3f9e4f5","modified":1529704485000},{"_id":"source/images/20181108/paraview_fluctuation.png","hash":"8477e0c22356aab4cf2e3df5d062174f682c0438","modified":1541712453000},{"_id":"themes/maupassant/source/css/default.css","hash":"ba6abfe78a2795500f0f7efc0f5126037577fd2e","modified":1529704485000},{"_id":"themes/maupassant/source/css/donate.css","hash":"d0079ba8202d925a93ab1cb44f2087b81f476755","modified":1529704485000},{"_id":"themes/maupassant/source/donate/index.html","hash":"58260d8d8b5cfa3f46705914e6df164d9f08d9dd","modified":1529704485000},{"_id":"themes/maupassant/source/js/codeblock-resizer.js","hash":"5d0b786d60bf225d9eabcc9cece2719ff4d9b6cd","modified":1529704485000},{"_id":"themes/maupassant/source/css/style.scss","hash":"c58b7c70273c6ede9229a231112184e73d614d08","modified":1529704485000},{"_id":"themes/maupassant/source/js/donate.js","hash":"780beaaf44b1e6c057752bdbc085b1048937e5e7","modified":1529704485000},{"_id":"themes/maupassant/source/js/fancybox.js","hash":"13c4781570339f4fba76a3d7f202e442817dd605","modified":1529704485000},{"_id":"themes/maupassant/source/js/search.js","hash":"0c0630e2ef213701d393b041f10572e951a27985","modified":1529704485000},{"_id":"themes/maupassant/source/js/share.js","hash":"a2f9de374523dc7f2ddb90ed5f24b668c20d9272","modified":1529704485000},{"_id":"themes/maupassant/source/js/smartresize.js","hash":"3ef157fd877167e3290f42c67a624ea375a46c24","modified":1529704485000},{"_id":"themes/maupassant/source/js/totop.js","hash":"7dbf8fcf582a4fb6eb9b2c60d6de9f9c2091ec4c","modified":1529704485000},{"_id":"themes/maupassant/source/img/AliPayQR.png","hash":"7787b5d91cbf0e19a1260df24f7d949771c7d45b","modified":1529704485000},{"_id":"themes/maupassant/source/img/BTCQR.png","hash":"7d1c80f953bfb6f0a37d432b04c936ea165bfd97","modified":1529704485000},{"_id":"themes/maupassant/source/img/alipay.svg","hash":"46cc0552a9f6d700d618db3fcad25e1b8e697e36","modified":1529704485000},{"_id":"themes/maupassant/source/img/WeChatQR.png","hash":"8c41aca7883e5ff714c56556f5fff8e7e7c38093","modified":1529704485000},{"_id":"themes/maupassant/source/img/bitcoin.svg","hash":"635f7cca5e675d192be2717788175c7a2146013a","modified":1529704485000},{"_id":"themes/maupassant/source/img/github.svg","hash":"90ba9a3b0dc19e70e742a39b014194f801e00f97","modified":1529704485000},{"_id":"themes/maupassant/source/img/like.svg","hash":"22a2754dc454d7b0321b70914fb2936b8d2ea8ab","modified":1529704485000},{"_id":"themes/maupassant/source/img/paypal.svg","hash":"92f3bc495f20a0190d3041be03345c46d6238c25","modified":1529704485000},{"_id":"themes/maupassant/source/img/wechat.svg","hash":"330496ad42446a29f37a2b97fc388ebd77a8cb9f","modified":1529704485000},{"_id":"themes/maupassant/layout/_partial/after_footer.jade","hash":"4e42048a688aa10301e5691331dffa019a082846","modified":1529704485000},{"_id":"themes/maupassant/layout/_partial/comments.jade","hash":"17c01ff0bae9e9e33750af1c0920536a2cbcbffa","modified":1529704485000},{"_id":"themes/maupassant/layout/_partial/footer.jade","hash":"650781b5bc8c632658ad6880ba663b1e3bfb5798","modified":1529704485000},{"_id":"themes/maupassant/layout/_partial/head.jade","hash":"25d271612a40a9105bf47804cc979728ae57e1a9","modified":1529704485000},{"_id":"themes/maupassant/layout/_partial/helpers.jade","hash":"acdf9e2d52ee86c831fa15ce1570930c5779bc78","modified":1529704485000},{"_id":"themes/maupassant/layout/_partial/mathjax.jade","hash":"ba6ca92bf70cad49f91eed7e6d2e3407d08c060b","modified":1545540137000},{"_id":"themes/maupassant/layout/_partial/mathjax2.jade","hash":"d6ac5dc4e9c7a1b866f1f92d88988cfb35aded4c","modified":1529704485000},{"_id":"themes/maupassant/layout/_partial/paginator.jade","hash":"53f9cb77448e84a98da5eb688e2e12b173c555bb","modified":1529704485000},{"_id":"themes/maupassant/layout/_partial/post_nav.jade","hash":"a2d698c84bb6da08195fe870dbd7215f65388d3f","modified":1529704485000},{"_id":"themes/maupassant/layout/_partial/tag.jade","hash":"0f0e6770e9d5dd8040e330d71bbbfadd2df36a28","modified":1529704485000},{"_id":"themes/maupassant/layout/_partial/totop.jade","hash":"8225bbc3cdb9648bc2e6872e5c616a9a1e4def4f","modified":1529704485000},{"_id":"themes/maupassant/layout/_widget/links.jade","hash":"f57a0c76d243882b2b77330132bdb43bc648948b","modified":1529704485000},{"_id":"themes/maupassant/layout/_widget/recent_comments.jade","hash":"e119c5afa85abc60d139e2da99b0bfcd7a6530f8","modified":1529704485000},{"_id":"themes/maupassant/layout/_widget/category.jade","hash":"7c6aed762934ca51aa2669b886254da24b77bc14","modified":1529704485000},{"_id":"themes/maupassant/layout/_widget/recent_posts.jade","hash":"19431336d724d2118e46da43683bce9063176541","modified":1529704485000},{"_id":"themes/maupassant/layout/_widget/search.jade","hash":"193546282908e499813534f86d27ef6e0a1357b3","modified":1529704485000},{"_id":"themes/maupassant/layout/_widget/tag.jade","hash":"132f049ce677d0e38f50073174c4ee4b825d4a06","modified":1529704485000},{"_id":"themes/maupassant/.git/refs/heads/master","hash":"c882961fa59b2d9f0c5c8b1a062a5d829b97a0f9","modified":1529704485000},{"_id":"themes/maupassant/.git/objects/pack/pack-7de43898cbcb0b6ec9a2c65e965b81f29a5b64c5.idx","hash":"1a8b1d7c6552b993ebceab4ece909b2f0c1e7440","modified":1529704485000},{"_id":"themes/maupassant/source/js/gitment.browser.js","hash":"376446d9c5930576016f97dd63e5e6616c94d8d4","modified":1529704485000},{"_id":"themes/maupassant/.git/logs/refs/heads/master","hash":"8f6e3ad7703c646034d8ebae4f73ba31e3f9e4f5","modified":1529704485000},{"_id":"themes/maupassant/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1529704485000},{"_id":"themes/maupassant/.git/logs/refs/remotes/origin/HEAD","hash":"8f6e3ad7703c646034d8ebae4f73ba31e3f9e4f5","modified":1529704485000},{"_id":"themes/maupassant/.git/objects/pack/pack-7de43898cbcb0b6ec9a2c65e965b81f29a5b64c5.pack","hash":"93f29a31299f484e8a1c0ff33db03c6a2e03f102","modified":1529704485000},{"_id":"public/atom.xml","hash":"8ca37fb9a3a38397a1cc5013d3de3826e1873773","modified":1546827591335},{"_id":"public/About/index.html","hash":"a81c6ccc16974e39aad644ab5798ab1c8c65dca4","modified":1546827591354},{"_id":"public/contact/index.html","hash":"8064e6bafcb3fd962ce0a0934c0d3d4554c5f787","modified":1546827591354},{"_id":"public/publications/index.html","hash":"02d64175f10c3880bc69c1ff4bdd150c63720dc2","modified":1546827591354},{"_id":"public/2018/11/08/Calculating-Fluctuation-in-Paraview/index.html","hash":"f5180154153a4acb0d0e4670334f1a4be7d1a20a","modified":1546827591354},{"_id":"public/2018/10/21/Reflection-at-Discontinuities/index.html","hash":"8b1452e2c3a5f2be93c3fb1507c92a264985738e","modified":1546827591355},{"_id":"public/2018/12/17/DSPFirst-Ch1/index.html","hash":"f159f7f6be9a91f895038198caed3e0d543b29b2","modified":1546827591354},{"_id":"public/2018/09/17/LBM-based-Solver/index.html","hash":"a713b01750f402ccaa660f6e8bc916368e3da6ba","modified":1546827591355},{"_id":"public/2018/09/15/Selective-Filter-2D-Palabos/index.html","hash":"933428e2f90bf8e583e0446a8eabe9a05d4337b0","modified":1546827591355},{"_id":"public/2018/10/04/Passwordless-SSH-connection-to-a-Cluster/index.html","hash":"34c030a5c463736b7f93290fa8fa4eaac0cd0444","modified":1546827591355},{"_id":"public/2018/08/12/Practical-Vocal-Acoustics-Ch3-Vocal-Resonance/index.html","hash":"aac39d48664ffd498c4501f3a666287ef8b17c8e","modified":1546827591355},{"_id":"public/2018/09/11/daqplot-windowsxp-caml/index.html","hash":"14476e6471ad203f59f334d9a5ed05ad22f35be1","modified":1546827591355},{"_id":"public/2018/08/11/Practical-Vocal-Acoustics-Ch1-p5-Mode-of-Phonation/index.html","hash":"f9eb52982a4f5f5ccaa9d769f296885eb2e593ee","modified":1546827591355},{"_id":"public/2018/07/01/On-the-Art-of-Singing-6/index.html","hash":"b60c92e396c7f851cb36fff67b83ab6fc8637443","modified":1546827591355},{"_id":"public/2018/09/10/Palabos-Dynamics-Calling-Relationships/index.html","hash":"bb2e2dc852a7f12650ff62c1feacc273aa2ec147","modified":1546827591355},{"_id":"public/2018/07/03/On-the-Art-of-Singing-19/index.html","hash":"d8ebf71bd874a5512813be3a6cc6bcc68455bd6d","modified":1546827591355},{"_id":"public/2018/06/29/On-the-Art-of-Singing-28/index.html","hash":"200730d01837f074672ace2a0525761503fb4271","modified":1546827591355},{"_id":"public/2018/06/26/On-the-Art-of-Singing-I-12-What-you-Need-Is-More-Support/index.html","hash":"101e8edb34f0428cd95d4a7d2546cf7128551219","modified":1546827591355},{"_id":"public/2018/06/22/hello-world/index.html","hash":"fa4d9b39afc34e87c5fd6791ecab0a81c1ab4ef6","modified":1546827591355},{"_id":"public/2017/11/22/Emacs-Tutorial-short-version/index.html","hash":"0ad71c81d5d2ef6b9893e0b4a4d064a521c90c79","modified":1546827591356},{"_id":"public/2017/11/18/first-post/index.html","hash":"4a063bb1ccab8808923470db4852fb06befc8abb","modified":1546827591356},{"_id":"public/archives/index.html","hash":"9e24fd9322ad65504727d1f4d4e453402aacbb9b","modified":1546827591356},{"_id":"public/archives/page/2/index.html","hash":"0e7f69da23626283a5b559e8626ae37ba31fb42c","modified":1546827591356},{"_id":"public/archives/page/3/index.html","hash":"20581c8097d0ccb41e2cd6e3e2a060a70fb681e6","modified":1546827591356},{"_id":"public/archives/2017/index.html","hash":"fd3add67b9a66a82809df6212188945a99c0d3a6","modified":1546827591356},{"_id":"public/archives/2017/11/index.html","hash":"fd3add67b9a66a82809df6212188945a99c0d3a6","modified":1546827591356},{"_id":"public/archives/2018/index.html","hash":"79a5b93f72c937f6714d2c6fc0e0fc00c8e657bb","modified":1546827591356},{"_id":"public/archives/2018/page/2/index.html","hash":"ff0164a9089963030ca65e64e00e49a302e561bf","modified":1546827591356},{"_id":"public/archives/2018/page/3/index.html","hash":"4754f41d8f0597fbc6888eed23b5f9a36f7cc44e","modified":1546827591356},{"_id":"public/archives/2018/06/index.html","hash":"2a08a96b6556b13839bf589350d1b3b13a2fd69b","modified":1546827591356},{"_id":"public/archives/2018/07/index.html","hash":"a4f8c460928b0a0b0df030aa093bb0b9b8aa1f9b","modified":1546827591356},{"_id":"public/archives/2018/08/index.html","hash":"548656730bb410d86c0fc24b69b5b4080415d30c","modified":1546827591356},{"_id":"public/archives/2018/09/index.html","hash":"b9a51c8764bd21948004d32e94d16f5f5bd99eb9","modified":1546827591356},{"_id":"public/archives/2018/10/index.html","hash":"6646b729c2b1a2f54f687b539fd7cb3b8cae28b0","modified":1546827591357},{"_id":"public/archives/2018/11/index.html","hash":"69a8265f011f02eeb49a09c398670602f56fa595","modified":1546827591357},{"_id":"public/archives/2018/12/index.html","hash":"3aef9402d36d46799a1497c639c0fbadeb28db29","modified":1546827591357},{"_id":"public/categories/Research-Daily/index.html","hash":"23218c28b06a9074f0b818db84392c0a7d801eee","modified":1546827591357},{"_id":"public/categories/Paraview/index.html","hash":"a8b29c08a7fca0e0153fc1e8690b57673191b0cd","modified":1546827591357},{"_id":"public/categories/DSP/index.html","hash":"68db98b9bbf607eb968d920a3eeb8dc9f5ab0e05","modified":1546827591357},{"_id":"public/categories/Emacs/index.html","hash":"c0f45bcb7aa05282fb0dbe71a0ca1b56914ea132","modified":1546827591357},{"_id":"public/categories/Palabos/index.html","hash":"6b51ec88fe0e52bc1581eaad281bff45cf705e5e","modified":1546827591357},{"_id":"public/categories/Voice/index.html","hash":"01128135a0c9e429ffca17df20acb33f4d5f36a8","modified":1546827591357},{"_id":"public/categories/Acoustics/index.html","hash":"f594b9faef9cf07eaeb1393dd62bd92d002ee0a7","modified":1546827591357},{"_id":"public/categories/test/index.html","hash":"267c775b2d40c90a356f2b32a96e32934702074a","modified":1546827591357},{"_id":"public/index.html","hash":"db4b69fc56f6144ce8ee9450e1018d8084b60c0a","modified":1546827591359},{"_id":"public/page/3/index.html","hash":"a507f7a978139a84611bedee1a18f748c8176152","modified":1546827591359},{"_id":"public/tags/Research-Daily/index.html","hash":"23218c28b06a9074f0b818db84392c0a7d801eee","modified":1546827591357},{"_id":"public/tags/CAML/index.html","hash":"5eb51b5f1cae02d30004d72ad9f352326f68e8b8","modified":1546827591358},{"_id":"public/tags/Paraview/index.html","hash":"a8b29c08a7fca0e0153fc1e8690b57673191b0cd","modified":1546827591358},{"_id":"public/tags/DSP-First/index.html","hash":"e1bbd124cb3ea921a36469ebb4e6d62f4e48908c","modified":1546827591358},{"_id":"public/tags/Emacs/index.html","hash":"c0f45bcb7aa05282fb0dbe71a0ca1b56914ea132","modified":1546827591358},{"_id":"public/tags/LBM/index.html","hash":"bef60b216561eb37eec23316f1f16cec2630c64d","modified":1546827591358},{"_id":"public/tags/CFD/index.html","hash":"a0da7395a184841101ca02272d9831249f3c60e2","modified":1546827591358},{"_id":"public/tags/Palabos/index.html","hash":"6b51ec88fe0e52bc1581eaad281bff45cf705e5e","modified":1546827591358},{"_id":"public/tags/OpenLB/index.html","hash":"66b0fef6c611c870585cb70af02e97687adb1a98","modified":1546827591358},{"_id":"public/tags/XFlow/index.html","hash":"bf3286c669e497347f91638bdfc409b4bff6aff5","modified":1546827591358},{"_id":"public/tags/PowerFlow/index.html","hash":"5c1d16b6f794a0097cc986058b98a4a537d3d4c7","modified":1546827591358},{"_id":"public/tags/ProLB/index.html","hash":"eb8dfee005d4a5df9a83e13543222809c89db867","modified":1546827591358},{"_id":"public/tags/On-the-Art-of-Singing/index.html","hash":"5957e8119978264ebd9adda5b48fff9df6076195","modified":1546827591358},{"_id":"public/tags/Voice/index.html","hash":"01128135a0c9e429ffca17df20acb33f4d5f36a8","modified":1546827591359},{"_id":"public/tags/HPC/index.html","hash":"b8365cf17e344448edfc6023af1d4bf3f28e98db","modified":1546827591359},{"_id":"public/tags/Practical-Vocal-Acoustics/index.html","hash":"4cc2954cbcbc36a423565008d8d4d8533369baa0","modified":1546827591359},{"_id":"public/tags/Acoustics/index.html","hash":"f594b9faef9cf07eaeb1393dd62bd92d002ee0a7","modified":1546827591359},{"_id":"public/tags/test/index.html","hash":"267c775b2d40c90a356f2b32a96e32934702074a","modified":1546827591359},{"_id":"public/2018/12/19/DSPFirst-Ch2/index.html","hash":"d1b4689ed7cbdf7eff6f3b79574094e86f71029c","modified":1546827591359},{"_id":"public/2018/12/18/DSPFirst-AppendixA/index.html","hash":"af5ede57a9df37ed7ebadfb3afd89e5cc03d8be6","modified":1546827591359},{"_id":"public/2018/10/15/Palabos-Descriptor-External-Field/index.html","hash":"9f3e71c8d5e6d21069c774360be1cf1cfe81a31f","modified":1546827591359},{"_id":"public/2018/10/06/3D-Printer/index.html","hash":"cc5aa180a15e6baf54417db5c37059285bc948dd","modified":1546827591359},{"_id":"public/2018/08/28/The-guide-for-the-Data-Processor-structure-of-Palabos/index.html","hash":"2736cbb19b3ab01a1d1294494d694ccd8277e40b","modified":1546827591359},{"_id":"public/2018/06/24/On-the-Art-of-Singing-I-3-Covering-in-the-Singing-Voice/index.html","hash":"2f3189530ec95969776e28148e043cfc3fd2f6ee","modified":1546827591359},{"_id":"public/2018/06/22/On-the-Art-of-Singing-I-1-Imagery-and-the-Teaching-of-Singing/index.html","hash":"3e90e092692286e3f3255194db8083385ad38d55","modified":1546827591359},{"_id":"public/page/2/index.html","hash":"56e4e15c10c6f54b7c42bdb2510bfd995a8123ec","modified":1546827591360},{"_id":"public/2018/12/30/GoogleCalendarOnMac/index.html","hash":"a33ad467f5ed4e0306185cdf27672b86b1fe5112","modified":1546827591354},{"_id":"public/categories/daily/index.html","hash":"150d74921122bd7287999ced42123c32f1167580","modified":1546827591357},{"_id":"public/tags/MacOS/index.html","hash":"6c69dca6b53dfbccf45892309c24d894962e3322","modified":1546827591358},{"_id":"public/favicon.ico","hash":"f6a9be485423a8cc37953fb6ff8e54f67feaa904","modified":1546191754037},{"_id":"public/images/20181108/paraview_fluctuation.png","hash":"8477e0c22356aab4cf2e3df5d062174f682c0438","modified":1546191754037},{"_id":"public/img/AliPayQR.png","hash":"7787b5d91cbf0e19a1260df24f7d949771c7d45b","modified":1546191754037},{"_id":"public/img/BTCQR.png","hash":"7d1c80f953bfb6f0a37d432b04c936ea165bfd97","modified":1546191754037},{"_id":"public/img/alipay.svg","hash":"46cc0552a9f6d700d618db3fcad25e1b8e697e36","modified":1546191754037},{"_id":"public/img/WeChatQR.png","hash":"8c41aca7883e5ff714c56556f5fff8e7e7c38093","modified":1546191754037},{"_id":"public/img/bitcoin.svg","hash":"635f7cca5e675d192be2717788175c7a2146013a","modified":1546191754037},{"_id":"public/img/github.svg","hash":"90ba9a3b0dc19e70e742a39b014194f801e00f97","modified":1546191754037},{"_id":"public/img/like.svg","hash":"22a2754dc454d7b0321b70914fb2936b8d2ea8ab","modified":1546191754037},{"_id":"public/img/paypal.svg","hash":"92f3bc495f20a0190d3041be03345c46d6238c25","modified":1546191754037},{"_id":"public/img/wechat.svg","hash":"330496ad42446a29f37a2b97fc388ebd77a8cb9f","modified":1546191754037},{"_id":"public/css/donate.css","hash":"d0079ba8202d925a93ab1cb44f2087b81f476755","modified":1546191754074},{"_id":"public/donate/index.html","hash":"58260d8d8b5cfa3f46705914e6df164d9f08d9dd","modified":1546191754074},{"_id":"public/js/codeblock-resizer.js","hash":"5d0b786d60bf225d9eabcc9cece2719ff4d9b6cd","modified":1546191754074},{"_id":"public/js/donate.js","hash":"89f0b9d9d0c4fce183161d29c2a44aef750efb27","modified":1546191754074},{"_id":"public/js/fancybox.js","hash":"13c4781570339f4fba76a3d7f202e442817dd605","modified":1546191754074},{"_id":"public/js/search.js","hash":"0c0630e2ef213701d393b041f10572e951a27985","modified":1546191754074},{"_id":"public/js/share.js","hash":"a2f9de374523dc7f2ddb90ed5f24b668c20d9272","modified":1546191754074},{"_id":"public/js/smartresize.js","hash":"3ef157fd877167e3290f42c67a624ea375a46c24","modified":1546191754074},{"_id":"public/js/totop.js","hash":"7dbf8fcf582a4fb6eb9b2c60d6de9f9c2091ec4c","modified":1546191754074},{"_id":"public/css/default.css","hash":"ba6abfe78a2795500f0f7efc0f5126037577fd2e","modified":1546191754074},{"_id":"public/css/style.css","hash":"3189df25d3bc42c9b380d6d1621848286048d6a3","modified":1546191754075},{"_id":"public/js/gitment.browser.js","hash":"376446d9c5930576016f97dd63e5e6616c94d8d4","modified":1546191754075},{"_id":"source/images/.DS_Store","hash":"ba4d200cf91c8a424796419f5ea0e16e8613ac3c","modified":1546192113000},{"_id":"source/images/20181229/google_calendar_add.png","hash":"f590cdf829e5b35c6e2e324964c680013de51753","modified":1546192136000},{"_id":"public/images/20181229/google_calendar_add.png","hash":"f590cdf829e5b35c6e2e324964c680013de51753","modified":1546827591364}],"Category":[{"name":"Research Daily","_id":"cjqb6na5y00047pphq4awo7cz"},{"name":"Paraview","_id":"cjqb6na6200097pphho8i113g"},{"name":"DSP","_id":"cjqb6na64000e7pph4xnclf3j"},{"name":"daily","_id":"cjqb6na6c000w7pph9oox5a5p"},{"name":"Emacs","_id":"cjqb6na6e00137pph3tu8jw7a"},{"name":"Palabos","_id":"cjqb6na6h001b7pphebcuo2mm"},{"name":"Voice","_id":"cjqb6na6k001h7pph1ceqy2c4"},{"name":"Acoustics","_id":"cjqb6na6w002o7pphu71nibtw"},{"name":"test","_id":"cjqb6na6x002v7pphso89fkk3"}],"Data":[],"Page":[{"title":"About","layout":"page","comments":0,"_content":"I am now a PhD candidate at Computational Acoustic Modeling Group (CAML), Schulich School of Music, McGill University.\n\nMy current research interests are musical instrument acoustics and computational (aero)acoustics. I am now using lattice Boltzmann method, based on the open-source CFD solver [Palabos](http://www.palabos.org/), to study the aeroacoustic and fluid-solid interaction problems of single-reed instruments, especially the influence of different geometries to the fluid properties, e.g., vortices and turbulence, and so to the acoustics.\n\n### Contacts\n<i class=\"fa fa-envelope\"></i> song.wang5 (at) mail (dot) mcgill (dot) ca\n","source":"About/index.md","raw":"---\ntitle: About\nlayout: page\ncomments: false\n---\nI am now a PhD candidate at Computational Acoustic Modeling Group (CAML), Schulich School of Music, McGill University.\n\nMy current research interests are musical instrument acoustics and computational (aero)acoustics. I am now using lattice Boltzmann method, based on the open-source CFD solver [Palabos](http://www.palabos.org/), to study the aeroacoustic and fluid-solid interaction problems of single-reed instruments, especially the influence of different geometries to the fluid properties, e.g., vortices and turbulence, and so to the acoustics.\n\n### Contacts\n<i class=\"fa fa-envelope\"></i> song.wang5 (at) mail (dot) mcgill (dot) ca\n","date":"2018-09-18T03:18:16.000Z","updated":"2018-09-18T03:18:16.000Z","path":"About/index.html","_id":"cjqb6na5w00017pph4bfjlji0","content":"<p>I am now a PhD candidate at Computational Acoustic Modeling Group (CAML), Schulich School of Music, McGill University.</p>\n<p>My current research interests are musical instrument acoustics and computational (aero)acoustics. I am now using lattice Boltzmann method, based on the open-source CFD solver <a href=\"http://www.palabos.org/\" target=\"_blank\" rel=\"noopener\">Palabos</a>, to study the aeroacoustic and fluid-solid interaction problems of single-reed instruments, especially the influence of different geometries to the fluid properties, e.g., vortices and turbulence, and so to the acoustics.</p>\n<h3 id=\"contacts\">Contacts</h3>\n<p><i class=\"fa fa-envelope\"></i> song.wang5 (at) mail (dot) mcgill (dot) ca</p>\n","site":{"data":{}},"excerpt":"","more":"<p>I am now a PhD candidate at Computational Acoustic Modeling Group (CAML), Schulich School of Music, McGill University.</p>\n<p>My current research interests are musical instrument acoustics and computational (aero)acoustics. I am now using lattice Boltzmann method, based on the open-source CFD solver <a href=\"http://www.palabos.org/\" target=\"_blank\" rel=\"noopener\">Palabos</a>, to study the aeroacoustic and fluid-solid interaction problems of single-reed instruments, especially the influence of different geometries to the fluid properties, e.g., vortices and turbulence, and so to the acoustics.</p>\n<h3 id=\"contacts\">Contacts</h3>\n<p><i class=\"fa fa-envelope\"></i> song.wang5 (at) mail (dot) mcgill (dot) ca</p>\n"},{"title":"Contact","layout":"page","_content":"<i class=\"fa fa-envelope\"> </i> song.wang5 (at) mail (dot) mcgill (dot) ca\n","source":"contact/index.md","raw":"---\ntitle: Contact\nlayout: page\n---\n<i class=\"fa fa-envelope\"> </i> song.wang5 (at) mail (dot) mcgill (dot) ca\n","date":"2018-06-22T21:54:45.000Z","updated":"2018-06-22T21:54:45.000Z","path":"contact/index.html","comments":1,"_id":"cjqb6na5x00037pphzmht6reg","content":"<p><i class=\"fa fa-envelope\"> </i> song.wang5 (at) mail (dot) mcgill (dot) ca</p>\n","site":{"data":{}},"excerpt":"","more":"<p><i class=\"fa fa-envelope\"> </i> song.wang5 (at) mail (dot) mcgill (dot) ca</p>\n"},{"title":"Publications","layout":"page","comments":0,"_content":"\n## Journal Articles\n- Wei, J., **Wang, S.**, Lu, W., Fang, Q. and Dang, J. (2016) “Multi-modal Recording and Modeling of Vocal Tract Movements.” Multimedia tools and applications, Vol. 75, No. 9, pp. 5247-5263.\n- Wei, J., **Wang, S.**, Hou, Q. and Dang, J. (2015) “Generalized Finite Difference Time Domain Method and Its Application to Acoustics.” Mathematical Problems in Engineering, Vol. 2015, No. 640305, pp. 1-13.\n\n## Conference Papers and Abstracts\n- Wang, F., Hou, Q., **Wang, S.** and Dang, J. (2017) “Particle interaction adaptivity and absorbing boundary conditions in the Lagrangian particle aeroacoustic model.” In Proceeding of the 11th International Seminar on Speech Production, Tianjin, China.\n- **Wang, S.** and Hou, Q. (2017) “Generalized finite difference time domain simulation of acoustical moving boundary problems.” 173rd Meeting of the Acoustical Society of America, Boston, MA. (Abstract/Best Student Paper Award in Engineering Acoustics)\n- **Wang, S.** and Scavone, G. (2017) “Finite Element Modeling of Sound Radiation at the Open End of a Conic Frustum.” In Proceeding of 2017 International Symposium on Musical Acoustics, Montreal, Canada. (Abstract)\n- **Wang, S.**, Liang, X. and Cui, W. (2017) \"Sound Analysis, Modeling and Synthesis of Brush-Pot-Shaped Xun\", In Proceeding of the China Conference on Sound and Music Technology, Suzhou, China.\n- Hou, Q., **Wang, S.**, Kruisbrink, A. and Tijsseling, A. (2015) “Lagrangian modelling of fluid transients in pipelines with entrapped air.” In Proceeding of the 12th International Conference on Pressure Surges, Dublin, Ireland.\n- Han, J., Wei, J., Hou, Q., **Wang, S.** and Dang, J. (2015) “Aeroacoustic Problem Simulation using SPH.” In Proceeding of 13th National Conference on Man-Machine Speech Communication, Tianjin, China.\n- **Wang, S.**, Liu, S., Wei, J., Fang, Q. and Dang, J. (2012) “Reconstruction of vocal tract based on multi-source image information.” In Proceeding of 8th International Symposium on Chinese Spoken Language Processing, Hong Kong, China, pp. 396-399.\n","source":"publications/index.md","raw":"---\ntitle: Publications\nlayout: page\ncomments: false\n---\n\n## Journal Articles\n- Wei, J., **Wang, S.**, Lu, W., Fang, Q. and Dang, J. (2016) “Multi-modal Recording and Modeling of Vocal Tract Movements.” Multimedia tools and applications, Vol. 75, No. 9, pp. 5247-5263.\n- Wei, J., **Wang, S.**, Hou, Q. and Dang, J. (2015) “Generalized Finite Difference Time Domain Method and Its Application to Acoustics.” Mathematical Problems in Engineering, Vol. 2015, No. 640305, pp. 1-13.\n\n## Conference Papers and Abstracts\n- Wang, F., Hou, Q., **Wang, S.** and Dang, J. (2017) “Particle interaction adaptivity and absorbing boundary conditions in the Lagrangian particle aeroacoustic model.” In Proceeding of the 11th International Seminar on Speech Production, Tianjin, China.\n- **Wang, S.** and Hou, Q. (2017) “Generalized finite difference time domain simulation of acoustical moving boundary problems.” 173rd Meeting of the Acoustical Society of America, Boston, MA. (Abstract/Best Student Paper Award in Engineering Acoustics)\n- **Wang, S.** and Scavone, G. (2017) “Finite Element Modeling of Sound Radiation at the Open End of a Conic Frustum.” In Proceeding of 2017 International Symposium on Musical Acoustics, Montreal, Canada. (Abstract)\n- **Wang, S.**, Liang, X. and Cui, W. (2017) \"Sound Analysis, Modeling and Synthesis of Brush-Pot-Shaped Xun\", In Proceeding of the China Conference on Sound and Music Technology, Suzhou, China.\n- Hou, Q., **Wang, S.**, Kruisbrink, A. and Tijsseling, A. (2015) “Lagrangian modelling of fluid transients in pipelines with entrapped air.” In Proceeding of the 12th International Conference on Pressure Surges, Dublin, Ireland.\n- Han, J., Wei, J., Hou, Q., **Wang, S.** and Dang, J. (2015) “Aeroacoustic Problem Simulation using SPH.” In Proceeding of 13th National Conference on Man-Machine Speech Communication, Tianjin, China.\n- **Wang, S.**, Liu, S., Wei, J., Fang, Q. and Dang, J. (2012) “Reconstruction of vocal tract based on multi-source image information.” In Proceeding of 8th International Symposium on Chinese Spoken Language Processing, Hong Kong, China, pp. 396-399.\n","date":"2018-09-18T03:18:58.000Z","updated":"2018-09-18T03:18:58.000Z","path":"publications/index.html","_id":"cjqb6naqe004k7pph5fnjh3xx","content":"<h2 id=\"journal-articles\">Journal Articles</h2>\n<ul>\n<li>Wei, J., <strong>Wang, S.</strong>, Lu, W., Fang, Q. and Dang, J. (2016) “Multi-modal Recording and Modeling of Vocal Tract Movements.” Multimedia tools and applications, Vol. 75, No. 9, pp. 5247-5263.</li>\n<li>Wei, J., <strong>Wang, S.</strong>, Hou, Q. and Dang, J. (2015) “Generalized Finite Difference Time Domain Method and Its Application to Acoustics.” Mathematical Problems in Engineering, Vol. 2015, No. 640305, pp. 1-13.</li>\n</ul>\n<h2 id=\"conference-papers-and-abstracts\">Conference Papers and Abstracts</h2>\n<ul>\n<li>Wang, F., Hou, Q., <strong>Wang, S.</strong> and Dang, J. (2017) “Particle interaction adaptivity and absorbing boundary conditions in the Lagrangian particle aeroacoustic model.” In Proceeding of the 11th International Seminar on Speech Production, Tianjin, China.</li>\n<li><strong>Wang, S.</strong> and Hou, Q. (2017) “Generalized finite difference time domain simulation of acoustical moving boundary problems.” 173rd Meeting of the Acoustical Society of America, Boston, MA. (Abstract/Best Student Paper Award in Engineering Acoustics)</li>\n<li><strong>Wang, S.</strong> and Scavone, G. (2017) “Finite Element Modeling of Sound Radiation at the Open End of a Conic Frustum.” In Proceeding of 2017 International Symposium on Musical Acoustics, Montreal, Canada. (Abstract)</li>\n<li><strong>Wang, S.</strong>, Liang, X. and Cui, W. (2017) &quot;Sound Analysis, Modeling and Synthesis of Brush-Pot-Shaped Xun&quot;, In Proceeding of the China Conference on Sound and Music Technology, Suzhou, China.</li>\n<li>Hou, Q., <strong>Wang, S.</strong>, Kruisbrink, A. and Tijsseling, A. (2015) “Lagrangian modelling of fluid transients in pipelines with entrapped air.” In Proceeding of the 12th International Conference on Pressure Surges, Dublin, Ireland.</li>\n<li>Han, J., Wei, J., Hou, Q., <strong>Wang, S.</strong> and Dang, J. (2015) “Aeroacoustic Problem Simulation using SPH.” In Proceeding of 13th National Conference on Man-Machine Speech Communication, Tianjin, China.</li>\n<li><strong>Wang, S.</strong>, Liu, S., Wei, J., Fang, Q. and Dang, J. (2012) “Reconstruction of vocal tract based on multi-source image information.” In Proceeding of 8th International Symposium on Chinese Spoken Language Processing, Hong Kong, China, pp. 396-399.</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"journal-articles\">Journal Articles</h2>\n<ul>\n<li>Wei, J., <strong>Wang, S.</strong>, Lu, W., Fang, Q. and Dang, J. (2016) “Multi-modal Recording and Modeling of Vocal Tract Movements.” Multimedia tools and applications, Vol. 75, No. 9, pp. 5247-5263.</li>\n<li>Wei, J., <strong>Wang, S.</strong>, Hou, Q. and Dang, J. (2015) “Generalized Finite Difference Time Domain Method and Its Application to Acoustics.” Mathematical Problems in Engineering, Vol. 2015, No. 640305, pp. 1-13.</li>\n</ul>\n<h2 id=\"conference-papers-and-abstracts\">Conference Papers and Abstracts</h2>\n<ul>\n<li>Wang, F., Hou, Q., <strong>Wang, S.</strong> and Dang, J. (2017) “Particle interaction adaptivity and absorbing boundary conditions in the Lagrangian particle aeroacoustic model.” In Proceeding of the 11th International Seminar on Speech Production, Tianjin, China.</li>\n<li><strong>Wang, S.</strong> and Hou, Q. (2017) “Generalized finite difference time domain simulation of acoustical moving boundary problems.” 173rd Meeting of the Acoustical Society of America, Boston, MA. (Abstract/Best Student Paper Award in Engineering Acoustics)</li>\n<li><strong>Wang, S.</strong> and Scavone, G. (2017) “Finite Element Modeling of Sound Radiation at the Open End of a Conic Frustum.” In Proceeding of 2017 International Symposium on Musical Acoustics, Montreal, Canada. (Abstract)</li>\n<li><strong>Wang, S.</strong>, Liang, X. and Cui, W. (2017) &quot;Sound Analysis, Modeling and Synthesis of Brush-Pot-Shaped Xun&quot;, In Proceeding of the China Conference on Sound and Music Technology, Suzhou, China.</li>\n<li>Hou, Q., <strong>Wang, S.</strong>, Kruisbrink, A. and Tijsseling, A. (2015) “Lagrangian modelling of fluid transients in pipelines with entrapped air.” In Proceeding of the 12th International Conference on Pressure Surges, Dublin, Ireland.</li>\n<li>Han, J., Wei, J., Hou, Q., <strong>Wang, S.</strong> and Dang, J. (2015) “Aeroacoustic Problem Simulation using SPH.” In Proceeding of 13th National Conference on Man-Machine Speech Communication, Tianjin, China.</li>\n<li><strong>Wang, S.</strong>, Liu, S., Wei, J., Fang, Q. and Dang, J. (2012) “Reconstruction of vocal tract based on multi-source image information.” In Proceeding of 8th International Symposium on Chinese Spoken Language Processing, Hong Kong, China, pp. 396-399.</li>\n</ul>\n"}],"Post":[{"title":"3D Printing and Musical Instruments","date":"2018-10-06T21:29:47.000Z","toc":true,"_content":"3D printing is becoming more and more popular in a variety of areas and there are already many application in musical instruments. Here I will briefly talks about the main techniques and some of my preliminary attemps in printing a mouthpiece.\n\n<!--more-->\n\n## 3D Printing Techniques\n\nThis article deserves reading, [All 10 Types of 3D Printing Technology in 2018 - All3DP](https://all3dp.com/1/types-of-3d-printers-3d-printing-technology/), inside which it classify the 3D printing techniques into, *material extrusion*, *vat polymerization*, *material jetting*, *binder jetting*, and *powder bed fusion (polymers or metals)*.\n\n\n### Fused Deposition Modeling (FDM) - Material Extrusion\nThe model is built layer by layer by the deposited materials which is melt through a nozzle in the extrusion head. The model is normally built from the bottom to the top.\n\n### Stereolithography Apparatus (SLA) - Vat Polymerization\nSLA is the earliest commercialized 3D printing technique. The 3D model is fabricated layer by layer from the liquid resin which is selectively solidified or polymerized by the ultraviolet (UV) rays through the lenses and the mirror. The object is normally built from the top to the bottom. A good introductory guide is provided by [Formlab](https://formlabs.com/blog/ultimate-guide-to-stereolithography-sla-3d-printing/).\n\n### Selective Laser Sintering (SLS) - Power Bed Fusion\nSLS is similar to SLA. A thin layer of material powder is dispersed on the platform and preheated to the temperature just below the melting point. The the laser as the power source is used to sinter the materials (nylon or polymers). A good introductory guide is provided by [Formlab](https://formlabs.com/blog/what-is-selective-laser-sintering/#origins-sls).\n\n### PolyJet - Material Jetting\nPolyJet provide a faster and more accurate 3D printing compared with the techniques mentioned above. The print head deposits hundreds of tiny liquid droplets of the UV curable materials on the platform and the UV light attached to the print head simultaniously cures/solidifies the materials. A brief introduction could be found the [Stratsys website](http://www.stratasys.com/polyjet-technology) or the [introduction video](https://youtu.be/Som3CddHfZE) provided by Solid Concepts.\n\n### Comparisons between them\n- [SLA vs. PolyJet](https://www.cadimensions.com/blog/sla-vs-polyjet-need-know/)\n- [FDM vs. SLA](https://pinshape.com/blog/fdm-vs-sla-how-does-3d-printer-tech-work/)\n- [FDM vs. SLA](https://all3dp.com/fdm-vs-sla/)\n\n## 3D Printed Musical Instruments - the real functional instruments instead of the ones just for fun\n\n### Strings\nTwo of the 3D printed violins are [3Dvarius](https://www.3d-varius.com/), the first electronic 3D printed violin inspired by Stradivarius and made by SLA, and [HOVALIN](http://www.hovalabs.com/hova-instruments/hovalin), an open source 3D printable acoustic violin made by FDM.\n\n### Brass instruments\n[Jerome Wiss](http://jeromewiss.com/en/) use 3D printing for the prototype of his brass instruments.\n\n### Saxophone Mouthpiece\nIt is tested by Lorenzoni et al. (2013) that PolyJet is the best technique for 3D printing a mouthpiece. [SYOS](https://www.syos.co/en/) is using FDM for making customized mouthpiece. \n\nPersonnaly, I have tried both FDM (Ultimaker 2+/3)and SLA (Form2) in 3D printing a saxophone mouthpiece. SLA provides a better resolution with an easier operation while you have to play with hundreds of parameters to print an acceptable mouthpiece by FDM. Such parameters might include:\n\n- Resolution\n- Nozzle sizes\n- Layer thickness\n- Line width\n- Infilling\n- Ironing\n\n\n## Ref.\n- [3D printing: future of the music instrument making? - Syos Blog](https://www.syos.co/en/blog/lab/3-d-printing-musical-instruments)\n- [TOP 15 3D Printed Music Instruments & Music Applications](https://www.3dnatives.com/en/top-15-3d-printing-music210620174/)\n- [常见三种3D打印技术：FDM、SLS、SLA技术原理](http://www.3ddayin.net/fuwu/3Ddayinbaike/23932.html)\n- [20张动图秒懂SLA、CLIP、3DP、PolyJet和FDM 3D打印原理](http://www.cnpowdertech.com/2017/kejifazhan_0327/20974.html)\n- [How does a Form2 3D printer compare to an Ultimaker2+? What is the failure rate and how much maintenance is needed?-Quora](https://www.quora.com/How-does-a-Form2-3D-printer-compare-to-an-Ultimaker2+-What-is-the-failure-rate-and-how-much-maintenance-is-needed)\n- Lorenzoni, Valerio, E. L. Doubrovski, and J. C. Verlinden. 2013. “Embracing the Digital in Instrument Making: Towards a Musician-Tailored Mouthpiece by 3D Printing.” In Proceedings of the Stockholm Music Acoustics Conference 2013, SMAC 2013, Stockholm (Sweden), 30 July-3 August, 2013.\n\n","source":"_posts/3D-Printer.md","raw":"---\ntitle: 3D Printing and Musical Instruments\ndate: 2018-10-06 17:29:47\ntags: [Research Daily, CAML]\ncategories: Research Daily\ntoc: true\n---\n3D printing is becoming more and more popular in a variety of areas and there are already many application in musical instruments. Here I will briefly talks about the main techniques and some of my preliminary attemps in printing a mouthpiece.\n\n<!--more-->\n\n## 3D Printing Techniques\n\nThis article deserves reading, [All 10 Types of 3D Printing Technology in 2018 - All3DP](https://all3dp.com/1/types-of-3d-printers-3d-printing-technology/), inside which it classify the 3D printing techniques into, *material extrusion*, *vat polymerization*, *material jetting*, *binder jetting*, and *powder bed fusion (polymers or metals)*.\n\n\n### Fused Deposition Modeling (FDM) - Material Extrusion\nThe model is built layer by layer by the deposited materials which is melt through a nozzle in the extrusion head. The model is normally built from the bottom to the top.\n\n### Stereolithography Apparatus (SLA) - Vat Polymerization\nSLA is the earliest commercialized 3D printing technique. The 3D model is fabricated layer by layer from the liquid resin which is selectively solidified or polymerized by the ultraviolet (UV) rays through the lenses and the mirror. The object is normally built from the top to the bottom. A good introductory guide is provided by [Formlab](https://formlabs.com/blog/ultimate-guide-to-stereolithography-sla-3d-printing/).\n\n### Selective Laser Sintering (SLS) - Power Bed Fusion\nSLS is similar to SLA. A thin layer of material powder is dispersed on the platform and preheated to the temperature just below the melting point. The the laser as the power source is used to sinter the materials (nylon or polymers). A good introductory guide is provided by [Formlab](https://formlabs.com/blog/what-is-selective-laser-sintering/#origins-sls).\n\n### PolyJet - Material Jetting\nPolyJet provide a faster and more accurate 3D printing compared with the techniques mentioned above. The print head deposits hundreds of tiny liquid droplets of the UV curable materials on the platform and the UV light attached to the print head simultaniously cures/solidifies the materials. A brief introduction could be found the [Stratsys website](http://www.stratasys.com/polyjet-technology) or the [introduction video](https://youtu.be/Som3CddHfZE) provided by Solid Concepts.\n\n### Comparisons between them\n- [SLA vs. PolyJet](https://www.cadimensions.com/blog/sla-vs-polyjet-need-know/)\n- [FDM vs. SLA](https://pinshape.com/blog/fdm-vs-sla-how-does-3d-printer-tech-work/)\n- [FDM vs. SLA](https://all3dp.com/fdm-vs-sla/)\n\n## 3D Printed Musical Instruments - the real functional instruments instead of the ones just for fun\n\n### Strings\nTwo of the 3D printed violins are [3Dvarius](https://www.3d-varius.com/), the first electronic 3D printed violin inspired by Stradivarius and made by SLA, and [HOVALIN](http://www.hovalabs.com/hova-instruments/hovalin), an open source 3D printable acoustic violin made by FDM.\n\n### Brass instruments\n[Jerome Wiss](http://jeromewiss.com/en/) use 3D printing for the prototype of his brass instruments.\n\n### Saxophone Mouthpiece\nIt is tested by Lorenzoni et al. (2013) that PolyJet is the best technique for 3D printing a mouthpiece. [SYOS](https://www.syos.co/en/) is using FDM for making customized mouthpiece. \n\nPersonnaly, I have tried both FDM (Ultimaker 2+/3)and SLA (Form2) in 3D printing a saxophone mouthpiece. SLA provides a better resolution with an easier operation while you have to play with hundreds of parameters to print an acceptable mouthpiece by FDM. Such parameters might include:\n\n- Resolution\n- Nozzle sizes\n- Layer thickness\n- Line width\n- Infilling\n- Ironing\n\n\n## Ref.\n- [3D printing: future of the music instrument making? - Syos Blog](https://www.syos.co/en/blog/lab/3-d-printing-musical-instruments)\n- [TOP 15 3D Printed Music Instruments & Music Applications](https://www.3dnatives.com/en/top-15-3d-printing-music210620174/)\n- [常见三种3D打印技术：FDM、SLS、SLA技术原理](http://www.3ddayin.net/fuwu/3Ddayinbaike/23932.html)\n- [20张动图秒懂SLA、CLIP、3DP、PolyJet和FDM 3D打印原理](http://www.cnpowdertech.com/2017/kejifazhan_0327/20974.html)\n- [How does a Form2 3D printer compare to an Ultimaker2+? What is the failure rate and how much maintenance is needed?-Quora](https://www.quora.com/How-does-a-Form2-3D-printer-compare-to-an-Ultimaker2+-What-is-the-failure-rate-and-how-much-maintenance-is-needed)\n- Lorenzoni, Valerio, E. L. Doubrovski, and J. C. Verlinden. 2013. “Embracing the Digital in Instrument Making: Towards a Musician-Tailored Mouthpiece by 3D Printing.” In Proceedings of the Stockholm Music Acoustics Conference 2013, SMAC 2013, Stockholm (Sweden), 30 July-3 August, 2013.\n\n","slug":"3D-Printer","published":1,"updated":"2018-10-15T19:27:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjqb6na5s00007ppheyvriict","content":"<p>3D printing is becoming more and more popular in a variety of areas and there are already many application in musical instruments. Here I will briefly talks about the main techniques and some of my preliminary attemps in printing a mouthpiece.</p>\n<a id=\"more\"></a>\n<h2 id=\"d-printing-techniques\">3D Printing Techniques</h2>\n<p>This article deserves reading, <a href=\"https://all3dp.com/1/types-of-3d-printers-3d-printing-technology/\" target=\"_blank\" rel=\"noopener\">All 10 Types of 3D Printing Technology in 2018 - All3DP</a>, inside which it classify the 3D printing techniques into, <em>material extrusion</em>, <em>vat polymerization</em>, <em>material jetting</em>, <em>binder jetting</em>, and <em>powder bed fusion (polymers or metals)</em>.</p>\n<h3 id=\"fused-deposition-modeling-fdm---material-extrusion\">Fused Deposition Modeling (FDM) - Material Extrusion</h3>\n<p>The model is built layer by layer by the deposited materials which is melt through a nozzle in the extrusion head. The model is normally built from the bottom to the top.</p>\n<h3 id=\"stereolithography-apparatus-sla---vat-polymerization\">Stereolithography Apparatus (SLA) - Vat Polymerization</h3>\n<p>SLA is the earliest commercialized 3D printing technique. The 3D model is fabricated layer by layer from the liquid resin which is selectively solidified or polymerized by the ultraviolet (UV) rays through the lenses and the mirror. The object is normally built from the top to the bottom. A good introductory guide is provided by <a href=\"https://formlabs.com/blog/ultimate-guide-to-stereolithography-sla-3d-printing/\" target=\"_blank\" rel=\"noopener\">Formlab</a>.</p>\n<h3 id=\"selective-laser-sintering-sls---power-bed-fusion\">Selective Laser Sintering (SLS) - Power Bed Fusion</h3>\n<p>SLS is similar to SLA. A thin layer of material powder is dispersed on the platform and preheated to the temperature just below the melting point. The the laser as the power source is used to sinter the materials (nylon or polymers). A good introductory guide is provided by <a href=\"https://formlabs.com/blog/what-is-selective-laser-sintering/#origins-sls\" target=\"_blank\" rel=\"noopener\">Formlab</a>.</p>\n<h3 id=\"polyjet---material-jetting\">PolyJet - Material Jetting</h3>\n<p>PolyJet provide a faster and more accurate 3D printing compared with the techniques mentioned above. The print head deposits hundreds of tiny liquid droplets of the UV curable materials on the platform and the UV light attached to the print head simultaniously cures/solidifies the materials. A brief introduction could be found the <a href=\"http://www.stratasys.com/polyjet-technology\" target=\"_blank\" rel=\"noopener\">Stratsys website</a> or the <a href=\"https://youtu.be/Som3CddHfZE\" target=\"_blank\" rel=\"noopener\">introduction video</a> provided by Solid Concepts.</p>\n<h3 id=\"comparisons-between-them\">Comparisons between them</h3>\n<ul>\n<li><a href=\"https://www.cadimensions.com/blog/sla-vs-polyjet-need-know/\" target=\"_blank\" rel=\"noopener\">SLA vs. PolyJet</a></li>\n<li><a href=\"https://pinshape.com/blog/fdm-vs-sla-how-does-3d-printer-tech-work/\" target=\"_blank\" rel=\"noopener\">FDM vs. SLA</a></li>\n<li><a href=\"https://all3dp.com/fdm-vs-sla/\" target=\"_blank\" rel=\"noopener\">FDM vs. SLA</a></li>\n</ul>\n<h2 id=\"d-printed-musical-instruments---the-real-functional-instruments-instead-of-the-ones-just-for-fun\">3D Printed Musical Instruments - the real functional instruments instead of the ones just for fun</h2>\n<h3 id=\"strings\">Strings</h3>\n<p>Two of the 3D printed violins are <a href=\"https://www.3d-varius.com/\" target=\"_blank\" rel=\"noopener\">3Dvarius</a>, the first electronic 3D printed violin inspired by Stradivarius and made by SLA, and <a href=\"http://www.hovalabs.com/hova-instruments/hovalin\" target=\"_blank\" rel=\"noopener\">HOVALIN</a>, an open source 3D printable acoustic violin made by FDM.</p>\n<h3 id=\"brass-instruments\">Brass instruments</h3>\n<p><a href=\"http://jeromewiss.com/en/\" target=\"_blank\" rel=\"noopener\">Jerome Wiss</a> use 3D printing for the prototype of his brass instruments.</p>\n<h3 id=\"saxophone-mouthpiece\">Saxophone Mouthpiece</h3>\n<p>It is tested by Lorenzoni et al. (2013) that PolyJet is the best technique for 3D printing a mouthpiece. <a href=\"https://www.syos.co/en/\" target=\"_blank\" rel=\"noopener\">SYOS</a> is using FDM for making customized mouthpiece.</p>\n<p>Personnaly, I have tried both FDM (Ultimaker 2+/3)and SLA (Form2) in 3D printing a saxophone mouthpiece. SLA provides a better resolution with an easier operation while you have to play with hundreds of parameters to print an acceptable mouthpiece by FDM. Such parameters might include:</p>\n<ul>\n<li>Resolution</li>\n<li>Nozzle sizes</li>\n<li>Layer thickness</li>\n<li>Line width</li>\n<li>Infilling</li>\n<li>Ironing</li>\n</ul>\n<h2 id=\"ref.\">Ref.</h2>\n<ul>\n<li><a href=\"https://www.syos.co/en/blog/lab/3-d-printing-musical-instruments\" target=\"_blank\" rel=\"noopener\">3D printing: future of the music instrument making? - Syos Blog</a></li>\n<li><a href=\"https://www.3dnatives.com/en/top-15-3d-printing-music210620174/\" target=\"_blank\" rel=\"noopener\">TOP 15 3D Printed Music Instruments &amp; Music Applications</a></li>\n<li><a href=\"http://www.3ddayin.net/fuwu/3Ddayinbaike/23932.html\" target=\"_blank\" rel=\"noopener\">常见三种3D打印技术：FDM、SLS、SLA技术原理</a></li>\n<li><a href=\"http://www.cnpowdertech.com/2017/kejifazhan_0327/20974.html\" target=\"_blank\" rel=\"noopener\">20张动图秒懂SLA、CLIP、3DP、PolyJet和FDM 3D打印原理</a></li>\n<li><a href=\"https://www.quora.com/How-does-a-Form2-3D-printer-compare-to-an-Ultimaker2+-What-is-the-failure-rate-and-how-much-maintenance-is-needed\" target=\"_blank\" rel=\"noopener\">How does a Form2 3D printer compare to an Ultimaker2+? What is the failure rate and how much maintenance is needed?-Quora</a></li>\n<li>Lorenzoni, Valerio, E. L. Doubrovski, and J. C. Verlinden. 2013. “Embracing the Digital in Instrument Making: Towards a Musician-Tailored Mouthpiece by 3D Printing.” In Proceedings of the Stockholm Music Acoustics Conference 2013, SMAC 2013, Stockholm (Sweden), 30 July-3 August, 2013.</li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>3D printing is becoming more and more popular in a variety of areas and there are already many application in musical instruments. Here I will briefly talks about the main techniques and some of my preliminary attemps in printing a mouthpiece.</p>","more":"<h2 id=\"d-printing-techniques\">3D Printing Techniques</h2>\n<p>This article deserves reading, <a href=\"https://all3dp.com/1/types-of-3d-printers-3d-printing-technology/\" target=\"_blank\" rel=\"noopener\">All 10 Types of 3D Printing Technology in 2018 - All3DP</a>, inside which it classify the 3D printing techniques into, <em>material extrusion</em>, <em>vat polymerization</em>, <em>material jetting</em>, <em>binder jetting</em>, and <em>powder bed fusion (polymers or metals)</em>.</p>\n<h3 id=\"fused-deposition-modeling-fdm---material-extrusion\">Fused Deposition Modeling (FDM) - Material Extrusion</h3>\n<p>The model is built layer by layer by the deposited materials which is melt through a nozzle in the extrusion head. The model is normally built from the bottom to the top.</p>\n<h3 id=\"stereolithography-apparatus-sla---vat-polymerization\">Stereolithography Apparatus (SLA) - Vat Polymerization</h3>\n<p>SLA is the earliest commercialized 3D printing technique. The 3D model is fabricated layer by layer from the liquid resin which is selectively solidified or polymerized by the ultraviolet (UV) rays through the lenses and the mirror. The object is normally built from the top to the bottom. A good introductory guide is provided by <a href=\"https://formlabs.com/blog/ultimate-guide-to-stereolithography-sla-3d-printing/\" target=\"_blank\" rel=\"noopener\">Formlab</a>.</p>\n<h3 id=\"selective-laser-sintering-sls---power-bed-fusion\">Selective Laser Sintering (SLS) - Power Bed Fusion</h3>\n<p>SLS is similar to SLA. A thin layer of material powder is dispersed on the platform and preheated to the temperature just below the melting point. The the laser as the power source is used to sinter the materials (nylon or polymers). A good introductory guide is provided by <a href=\"https://formlabs.com/blog/what-is-selective-laser-sintering/#origins-sls\" target=\"_blank\" rel=\"noopener\">Formlab</a>.</p>\n<h3 id=\"polyjet---material-jetting\">PolyJet - Material Jetting</h3>\n<p>PolyJet provide a faster and more accurate 3D printing compared with the techniques mentioned above. The print head deposits hundreds of tiny liquid droplets of the UV curable materials on the platform and the UV light attached to the print head simultaniously cures/solidifies the materials. A brief introduction could be found the <a href=\"http://www.stratasys.com/polyjet-technology\" target=\"_blank\" rel=\"noopener\">Stratsys website</a> or the <a href=\"https://youtu.be/Som3CddHfZE\" target=\"_blank\" rel=\"noopener\">introduction video</a> provided by Solid Concepts.</p>\n<h3 id=\"comparisons-between-them\">Comparisons between them</h3>\n<ul>\n<li><a href=\"https://www.cadimensions.com/blog/sla-vs-polyjet-need-know/\" target=\"_blank\" rel=\"noopener\">SLA vs. PolyJet</a></li>\n<li><a href=\"https://pinshape.com/blog/fdm-vs-sla-how-does-3d-printer-tech-work/\" target=\"_blank\" rel=\"noopener\">FDM vs. SLA</a></li>\n<li><a href=\"https://all3dp.com/fdm-vs-sla/\" target=\"_blank\" rel=\"noopener\">FDM vs. SLA</a></li>\n</ul>\n<h2 id=\"d-printed-musical-instruments---the-real-functional-instruments-instead-of-the-ones-just-for-fun\">3D Printed Musical Instruments - the real functional instruments instead of the ones just for fun</h2>\n<h3 id=\"strings\">Strings</h3>\n<p>Two of the 3D printed violins are <a href=\"https://www.3d-varius.com/\" target=\"_blank\" rel=\"noopener\">3Dvarius</a>, the first electronic 3D printed violin inspired by Stradivarius and made by SLA, and <a href=\"http://www.hovalabs.com/hova-instruments/hovalin\" target=\"_blank\" rel=\"noopener\">HOVALIN</a>, an open source 3D printable acoustic violin made by FDM.</p>\n<h3 id=\"brass-instruments\">Brass instruments</h3>\n<p><a href=\"http://jeromewiss.com/en/\" target=\"_blank\" rel=\"noopener\">Jerome Wiss</a> use 3D printing for the prototype of his brass instruments.</p>\n<h3 id=\"saxophone-mouthpiece\">Saxophone Mouthpiece</h3>\n<p>It is tested by Lorenzoni et al. (2013) that PolyJet is the best technique for 3D printing a mouthpiece. <a href=\"https://www.syos.co/en/\" target=\"_blank\" rel=\"noopener\">SYOS</a> is using FDM for making customized mouthpiece.</p>\n<p>Personnaly, I have tried both FDM (Ultimaker 2+/3)and SLA (Form2) in 3D printing a saxophone mouthpiece. SLA provides a better resolution with an easier operation while you have to play with hundreds of parameters to print an acceptable mouthpiece by FDM. Such parameters might include:</p>\n<ul>\n<li>Resolution</li>\n<li>Nozzle sizes</li>\n<li>Layer thickness</li>\n<li>Line width</li>\n<li>Infilling</li>\n<li>Ironing</li>\n</ul>\n<h2 id=\"ref.\">Ref.</h2>\n<ul>\n<li><a href=\"https://www.syos.co/en/blog/lab/3-d-printing-musical-instruments\" target=\"_blank\" rel=\"noopener\">3D printing: future of the music instrument making? - Syos Blog</a></li>\n<li><a href=\"https://www.3dnatives.com/en/top-15-3d-printing-music210620174/\" target=\"_blank\" rel=\"noopener\">TOP 15 3D Printed Music Instruments &amp; Music Applications</a></li>\n<li><a href=\"http://www.3ddayin.net/fuwu/3Ddayinbaike/23932.html\" target=\"_blank\" rel=\"noopener\">常见三种3D打印技术：FDM、SLS、SLA技术原理</a></li>\n<li><a href=\"http://www.cnpowdertech.com/2017/kejifazhan_0327/20974.html\" target=\"_blank\" rel=\"noopener\">20张动图秒懂SLA、CLIP、3DP、PolyJet和FDM 3D打印原理</a></li>\n<li><a href=\"https://www.quora.com/How-does-a-Form2-3D-printer-compare-to-an-Ultimaker2+-What-is-the-failure-rate-and-how-much-maintenance-is-needed\" target=\"_blank\" rel=\"noopener\">How does a Form2 3D printer compare to an Ultimaker2+? What is the failure rate and how much maintenance is needed?-Quora</a></li>\n<li>Lorenzoni, Valerio, E. L. Doubrovski, and J. C. Verlinden. 2013. “Embracing the Digital in Instrument Making: Towards a Musician-Tailored Mouthpiece by 3D Printing.” In Proceedings of the Stockholm Music Acoustics Conference 2013, SMAC 2013, Stockholm (Sweden), 30 July-3 August, 2013.</li>\n</ul>"},{"title":"Calculating Fluctuation in Paraview","date":"2018-11-08T21:32:21.000Z","mathjax":true,"_content":"\nThis is to show the way to calculate variable (e.g. pressure) fluctuation in Paraview. \n\n<!--more-->\n\nTo calculate the $\\tilde{p} = p - \\bar{p}$ in Paraview, where $\\bar{p}$ is the time average.\n\n- Open the data (.vtk files) as object `p` and saying it contains the variable `pressure`.\n- Calculate the time average using the filter *Temporal Statistics* (Filters -> Temporal -> Temporal Statistices) and the output is the object `TemporalStatistics1`.\n- Selecte the `p` and the `TemporalStatistics1`, and apply the filter *Append Attributes*. The output is `AppendAttributes1`.\n- Use a *Calculator* to subtract pressure_average from pressure.\n\n![Fig. 1 - The pipeline for calculating the fluctuation](/images/20181108/paraview_fluctuation.png)\n\n### Reference \nParaview Forum Discussion:  https://public.kitware.com/pipermail/paraview/2012-May/024845.html\n\n\n","source":"_posts/Calculating-Fluctuation-in-Paraview.md","raw":"---\ntitle: Calculating Fluctuation in Paraview\ndate: 2018-11-08 16:32:21\ntags: [Paraview]\ncategories: Paraview\nmathjax: true\n---\n\nThis is to show the way to calculate variable (e.g. pressure) fluctuation in Paraview. \n\n<!--more-->\n\nTo calculate the $\\tilde{p} = p - \\bar{p}$ in Paraview, where $\\bar{p}$ is the time average.\n\n- Open the data (.vtk files) as object `p` and saying it contains the variable `pressure`.\n- Calculate the time average using the filter *Temporal Statistics* (Filters -> Temporal -> Temporal Statistices) and the output is the object `TemporalStatistics1`.\n- Selecte the `p` and the `TemporalStatistics1`, and apply the filter *Append Attributes*. The output is `AppendAttributes1`.\n- Use a *Calculator* to subtract pressure_average from pressure.\n\n![Fig. 1 - The pipeline for calculating the fluctuation](/images/20181108/paraview_fluctuation.png)\n\n### Reference \nParaview Forum Discussion:  https://public.kitware.com/pipermail/paraview/2012-May/024845.html\n\n\n","slug":"Calculating-Fluctuation-in-Paraview","published":1,"updated":"2018-11-08T22:44:27.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjqb6na5w00027pphz5gz30rh","content":"<p>This is to show the way to calculate variable (e.g. pressure) fluctuation in Paraview.</p>\n<a id=\"more\"></a>\n<p>To calculate the <span class=\"math inline\">\\(\\tilde{p} = p - \\bar{p}\\)</span> in Paraview, where <span class=\"math inline\">\\(\\bar{p}\\)</span> is the time average.</p>\n<ul>\n<li>Open the data (.vtk files) as object <code>p</code> and saying it contains the variable <code>pressure</code>.</li>\n<li>Calculate the time average using the filter <em>Temporal Statistics</em> (Filters -&gt; Temporal -&gt; Temporal Statistices) and the output is the object <code>TemporalStatistics1</code>.</li>\n<li>Selecte the <code>p</code> and the <code>TemporalStatistics1</code>, and apply the filter <em>Append Attributes</em>. The output is <code>AppendAttributes1</code>.</li>\n<li>Use a <em>Calculator</em> to subtract pressure_average from pressure.</li>\n</ul>\n<figure>\n<img src=\"/images/20181108/paraview_fluctuation.png\" alt=\"Fig. 1 - The pipeline for calculating the fluctuation\"><figcaption>Fig. 1 - The pipeline for calculating the fluctuation</figcaption>\n</figure>\n<h3 id=\"reference\">Reference</h3>\n<p>Paraview Forum Discussion: https://public.kitware.com/pipermail/paraview/2012-May/024845.html</p>\n","site":{"data":{}},"excerpt":"<p>This is to show the way to calculate variable (e.g. pressure) fluctuation in Paraview.</p>","more":"<p>To calculate the <span class=\"math inline\">\\(\\tilde{p} = p - \\bar{p}\\)</span> in Paraview, where <span class=\"math inline\">\\(\\bar{p}\\)</span> is the time average.</p>\n<ul>\n<li>Open the data (.vtk files) as object <code>p</code> and saying it contains the variable <code>pressure</code>.</li>\n<li>Calculate the time average using the filter <em>Temporal Statistics</em> (Filters -&gt; Temporal -&gt; Temporal Statistices) and the output is the object <code>TemporalStatistics1</code>.</li>\n<li>Selecte the <code>p</code> and the <code>TemporalStatistics1</code>, and apply the filter <em>Append Attributes</em>. The output is <code>AppendAttributes1</code>.</li>\n<li>Use a <em>Calculator</em> to subtract pressure_average from pressure.</li>\n</ul>\n<figure>\n<img src=\"/images/20181108/paraview_fluctuation.png\" alt=\"Fig. 1 - The pipeline for calculating the fluctuation\"><figcaption>Fig. 1 - The pipeline for calculating the fluctuation</figcaption>\n</figure>\n<h3 id=\"reference\">Reference</h3>\n<p>Paraview Forum Discussion: https://public.kitware.com/pipermail/paraview/2012-May/024845.html</p>"},{"title":"DSP First - Appendix A - Complex Numbers","date":"2018-12-19T03:18:05.000Z","mathjax":true,"toc":true,"_content":"\n- In this appendix, the basic manipulations of complex numbers are reviewed. There ideas are treated:\n  - simple algebraic rules: operations on $z = x+jy$.\n  - elimination of trigonometry: Euler's formula for the complex exponential $z = re^{j\\theta}=r\\cos\\theta+jr\\sin\\theta$.\n  - representation by vectors: a way for visualization.\n- Symbol: $i$ or $j$\n  - Physicists and mathematicians use symbol $i=\\sqrt{-1}$.\n  - Electrical engineers use symbol $j=\\sqrt{-1}$ instead because $i$ is left to the current.\n- Algebraic vs. Trigonometric vs. Geometric.\n\n### A.1 Introduction\n- The way $j$ is introduced: $z^2=-1$ ==> $z=\\pm j$.\n- More general, complex numbers are the roots of quadratic equations.\n\n### A.2 Notation for complex numbers\n- There are two types complex number representations:\n  - Rectangular form (Cartesian form): $z = (x, y) = x + jy = \\Re \\{ z \\}  + j\\Im\\{z\\}$, where $\\Re\\{\\}$ and $\\Im\\{\\}$ represent the real and imaginary parts of the complex number, respectively.\n  - Polar form: $z \\leftrightarrow r\\angle\\theta$ where $r$ is the amplitude and $\\angle\\theta$ is the angle whose principal value belongs to $-180^{\\circ}<\\theta < 180^{\\circ}$\n  - Conversion:\n    - polar --> rectangular: $z=x + jy$, where\n       $$\\begin{equation}\n\t        \\begin{cases}\n\t        x = r\\cos\\theta,\\\\\n\t\t\ty = r\\sin\\theta\n\t\t\t\\end{cases}\n\t   \\end{equation}\t\\label{eq1}$$\n\t- rectangular --> polar: $z = re^{j\\theta}=|z|e^{j\\, \\text{arg}|z|}$, where\n\t   $$\\begin{equation}\n\t        \\begin{cases}\n\t        r = \\sqrt{x^2+y^2},\\\\\n\t\t\t\\theta = \\text{atan}(y, x)\n\t\t\t\\end{cases}\n\t   \\end{equation}\t\\label{eq2}$$\n\n### A.3 Euler's formula\n- Euler's formula\n$$ \\begin{equation} e^{j\\theta} = \\cos{\\theta} + j\\sin\\theta \\end{equation}\\label{Euler} $$\n- Inverse Euler fomulas\n$$ \\begin{align}\n      \\cos\\theta &= \\frac{e^{j\\theta} + e^{-j\\theta}}{2}\\\\\n      \\sin\\theta &= \\frac{e^{j\\theta} - e^{-j\\theta}}{2}\n   \\end{align}$$\n\n### A.4 Algebraic rules for complex numbers\n#### Rectangular form\nFor $z_1 = x_1 + jy_1$ and $z_2 = x_2+jy_2$, \n\n- addition and subtraction: $z_1 \\pm z_2 = (x_1 \\pm x_2) + j(y_1 \\pm y_2)$.\n- multiplication: $z_1 z_2$ = (x_1x_2-y_1y_2)+j(x_1y_2+x_2y_1)$\n- conjugate: $z_1^* = x_1 - jy_1$\n- division: $\\dfrac{z_1}{z_2} = \\dfrac{z_1z_2^*}{z_2z_2^*} = \\dfrac{z_1z_2^*}{|z_2|^2} = \\dfrac{(x_1x_2+y_1y_2) + j(x_2y_1-x_1y_2)}{x_2^2+y_2^2}$\n\n#### Polar form\nFor $z_1 = r_1e^{j\\theta_1}$ and $z_2 = r_2e^{j\\theta_2}$,\n\n- multiplication: $z_1z_2 = (r_1r_2)e^{j(\\theta_1+theta_2)}$\n- conjugate: $z_1^* = r_1e^{-j\\theta_1}$\n- division: $\\dfrac{z_1}{z_2} = \\dfrac{r_1}{r_2}e^{j(\\theta_1-\\theta_2)}$\n- addition and subtraction: transfer to rectangular form and do the addition or subtraction, and then, transfer back to polar form.\n\n#### others\n- $\\Re\\{z\\} = \\dfrac{z+z^*}{2}$\n- $\\Im\\{z\\} = \\dfrac{z-z^*}{2j}$\n- $|z|^2 = zz^*$\n\n### A.5 Geometric views off complex operations\nA geometric view provides a convenient visualization for complex number operations.\n\n### A.6 Powers and Roots\n- $z^N = (re^{j\\theta})^N = r^Ne^{jN\\theta}$\n- De Moivre's formula: $(\\cos\\theta + j\\sin\\theta)^N = \\cos N\\theta + j\\sin N\\theta$ (because $(e^{j\\theta})^N = e^{jN\\theta}$)\n- Roots of unity ($z^N=1$): $z=e^{j2\\pi l/N}$ for $l=0,1,2\\dots N-1$\n- $z^N=c=|c|e^{j\\phi}$: $z=re^{j\\theta}$, where\n  $$\\begin{cases}\n  r = |c|^{1/N},\\\\\n  \\theta = \\dfrac{\\phi+2\\pi l}{N},\n  \\end{cases}$$\n  and $\\theta$ is the angular spacing.\n\n\n<!-- the famous matter-energy equation $\\eqref{eq1}$ proposed by Einstein ...-->\n","source":"_posts/DSPFirst-AppendixA.md","raw":"---\ntitle: DSP First - Appendix A - Complex Numbers\ndate: 2018-12-18 22:18:05\ntags: DSP First\ncategories: DSP\nmathjax: true\ntoc: true\n---\n\n- In this appendix, the basic manipulations of complex numbers are reviewed. There ideas are treated:\n  - simple algebraic rules: operations on $z = x+jy$.\n  - elimination of trigonometry: Euler's formula for the complex exponential $z = re^{j\\theta}=r\\cos\\theta+jr\\sin\\theta$.\n  - representation by vectors: a way for visualization.\n- Symbol: $i$ or $j$\n  - Physicists and mathematicians use symbol $i=\\sqrt{-1}$.\n  - Electrical engineers use symbol $j=\\sqrt{-1}$ instead because $i$ is left to the current.\n- Algebraic vs. Trigonometric vs. Geometric.\n\n### A.1 Introduction\n- The way $j$ is introduced: $z^2=-1$ ==> $z=\\pm j$.\n- More general, complex numbers are the roots of quadratic equations.\n\n### A.2 Notation for complex numbers\n- There are two types complex number representations:\n  - Rectangular form (Cartesian form): $z = (x, y) = x + jy = \\Re \\{ z \\}  + j\\Im\\{z\\}$, where $\\Re\\{\\}$ and $\\Im\\{\\}$ represent the real and imaginary parts of the complex number, respectively.\n  - Polar form: $z \\leftrightarrow r\\angle\\theta$ where $r$ is the amplitude and $\\angle\\theta$ is the angle whose principal value belongs to $-180^{\\circ}<\\theta < 180^{\\circ}$\n  - Conversion:\n    - polar --> rectangular: $z=x + jy$, where\n       $$\\begin{equation}\n\t        \\begin{cases}\n\t        x = r\\cos\\theta,\\\\\n\t\t\ty = r\\sin\\theta\n\t\t\t\\end{cases}\n\t   \\end{equation}\t\\label{eq1}$$\n\t- rectangular --> polar: $z = re^{j\\theta}=|z|e^{j\\, \\text{arg}|z|}$, where\n\t   $$\\begin{equation}\n\t        \\begin{cases}\n\t        r = \\sqrt{x^2+y^2},\\\\\n\t\t\t\\theta = \\text{atan}(y, x)\n\t\t\t\\end{cases}\n\t   \\end{equation}\t\\label{eq2}$$\n\n### A.3 Euler's formula\n- Euler's formula\n$$ \\begin{equation} e^{j\\theta} = \\cos{\\theta} + j\\sin\\theta \\end{equation}\\label{Euler} $$\n- Inverse Euler fomulas\n$$ \\begin{align}\n      \\cos\\theta &= \\frac{e^{j\\theta} + e^{-j\\theta}}{2}\\\\\n      \\sin\\theta &= \\frac{e^{j\\theta} - e^{-j\\theta}}{2}\n   \\end{align}$$\n\n### A.4 Algebraic rules for complex numbers\n#### Rectangular form\nFor $z_1 = x_1 + jy_1$ and $z_2 = x_2+jy_2$, \n\n- addition and subtraction: $z_1 \\pm z_2 = (x_1 \\pm x_2) + j(y_1 \\pm y_2)$.\n- multiplication: $z_1 z_2$ = (x_1x_2-y_1y_2)+j(x_1y_2+x_2y_1)$\n- conjugate: $z_1^* = x_1 - jy_1$\n- division: $\\dfrac{z_1}{z_2} = \\dfrac{z_1z_2^*}{z_2z_2^*} = \\dfrac{z_1z_2^*}{|z_2|^2} = \\dfrac{(x_1x_2+y_1y_2) + j(x_2y_1-x_1y_2)}{x_2^2+y_2^2}$\n\n#### Polar form\nFor $z_1 = r_1e^{j\\theta_1}$ and $z_2 = r_2e^{j\\theta_2}$,\n\n- multiplication: $z_1z_2 = (r_1r_2)e^{j(\\theta_1+theta_2)}$\n- conjugate: $z_1^* = r_1e^{-j\\theta_1}$\n- division: $\\dfrac{z_1}{z_2} = \\dfrac{r_1}{r_2}e^{j(\\theta_1-\\theta_2)}$\n- addition and subtraction: transfer to rectangular form and do the addition or subtraction, and then, transfer back to polar form.\n\n#### others\n- $\\Re\\{z\\} = \\dfrac{z+z^*}{2}$\n- $\\Im\\{z\\} = \\dfrac{z-z^*}{2j}$\n- $|z|^2 = zz^*$\n\n### A.5 Geometric views off complex operations\nA geometric view provides a convenient visualization for complex number operations.\n\n### A.6 Powers and Roots\n- $z^N = (re^{j\\theta})^N = r^Ne^{jN\\theta}$\n- De Moivre's formula: $(\\cos\\theta + j\\sin\\theta)^N = \\cos N\\theta + j\\sin N\\theta$ (because $(e^{j\\theta})^N = e^{jN\\theta}$)\n- Roots of unity ($z^N=1$): $z=e^{j2\\pi l/N}$ for $l=0,1,2\\dots N-1$\n- $z^N=c=|c|e^{j\\phi}$: $z=re^{j\\theta}$, where\n  $$\\begin{cases}\n  r = |c|^{1/N},\\\\\n  \\theta = \\dfrac{\\phi+2\\pi l}{N},\n  \\end{cases}$$\n  and $\\theta$ is the angular spacing.\n\n\n<!-- the famous matter-energy equation $\\eqref{eq1}$ proposed by Einstein ...-->\n","slug":"DSPFirst-AppendixA","published":1,"updated":"2018-12-30T01:12:40.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjqb6na6000067pphvnu596r0","content":"<ul>\n<li>In this appendix, the basic manipulations of complex numbers are reviewed. There ideas are treated:\n<ul>\n<li>simple algebraic rules: operations on <span class=\"math inline\">\\(z = x+jy\\)</span>.</li>\n<li>elimination of trigonometry: Euler's formula for the complex exponential <span class=\"math inline\">\\(z = re^{j\\theta}=r\\cos\\theta+jr\\sin\\theta\\)</span>.</li>\n<li>representation by vectors: a way for visualization.</li>\n</ul></li>\n<li>Symbol: <span class=\"math inline\">\\(i\\)</span> or <span class=\"math inline\">\\(j\\)</span>\n<ul>\n<li>Physicists and mathematicians use symbol <span class=\"math inline\">\\(i=\\sqrt{-1}\\)</span>.</li>\n<li>Electrical engineers use symbol <span class=\"math inline\">\\(j=\\sqrt{-1}\\)</span> instead because <span class=\"math inline\">\\(i\\)</span> is left to the current.</li>\n</ul></li>\n<li>Algebraic vs. Trigonometric vs. Geometric.</li>\n</ul>\n<h3 id=\"a.1-introduction\">A.1 Introduction</h3>\n<ul>\n<li>The way <span class=\"math inline\">\\(j\\)</span> is introduced: <span class=\"math inline\">\\(z^2=-1\\)</span> ==&gt; <span class=\"math inline\">\\(z=\\pm j\\)</span>.</li>\n<li>More general, complex numbers are the roots of quadratic equations.</li>\n</ul>\n<h3 id=\"a.2-notation-for-complex-numbers\">A.2 Notation for complex numbers</h3>\n<ul>\n<li>There are two types complex number representations:\n<ul>\n<li>Rectangular form (Cartesian form): <span class=\"math inline\">\\(z = (x, y) = x + jy = \\Re \\{ z \\} + j\\Im\\{z\\}\\)</span>, where <span class=\"math inline\">\\(\\Re\\{\\}\\)</span> and <span class=\"math inline\">\\(\\Im\\{\\}\\)</span> represent the real and imaginary parts of the complex number, respectively.</li>\n<li>Polar form: <span class=\"math inline\">\\(z \\leftrightarrow r\\angle\\theta\\)</span> where <span class=\"math inline\">\\(r\\)</span> is the amplitude and <span class=\"math inline\">\\(\\angle\\theta\\)</span> is the angle whose principal value belongs to <span class=\"math inline\">\\(-180^{\\circ}&lt;\\theta &lt; 180^{\\circ}\\)</span></li>\n<li>Conversion:\n<ul>\n<li>polar --&gt; rectangular: <span class=\"math inline\">\\(z=x + jy\\)</span>, where <span class=\"math display\">\\[\\begin{equation}\n      \\begin{cases}\n      x = r\\cos\\theta,\\\\\n      y = r\\sin\\theta\n      \\end{cases}\n \\end{equation}   \\label{eq1}\\]</span></li>\n<li>rectangular --&gt; polar: <span class=\"math inline\">\\(z = re^{j\\theta}=|z|e^{j\\, \\text{arg}|z|}\\)</span>, where <span class=\"math display\">\\[\\begin{equation}\n      \\begin{cases}\n      r = \\sqrt{x^2+y^2},\\\\\n      \\theta = \\text{atan}(y, x)\n      \\end{cases}\n \\end{equation}   \\label{eq2}\\]</span></li>\n</ul></li>\n</ul></li>\n</ul>\n<h3 id=\"a.3-eulers-formula\">A.3 Euler's formula</h3>\n<ul>\n<li>Euler's formula <span class=\"math display\">\\[ \\begin{equation} e^{j\\theta} = \\cos{\\theta} + j\\sin\\theta \\end{equation}\\label{Euler} \\]</span></li>\n<li>Inverse Euler fomulas <span class=\"math display\">\\[ \\begin{align}\n    \\cos\\theta &amp;= \\frac{e^{j\\theta} + e^{-j\\theta}}{2}\\\\\n    \\sin\\theta &amp;= \\frac{e^{j\\theta} - e^{-j\\theta}}{2}\n \\end{align}\\]</span></li>\n</ul>\n<h3 id=\"a.4-algebraic-rules-for-complex-numbers\">A.4 Algebraic rules for complex numbers</h3>\n<h4 id=\"rectangular-form\">Rectangular form</h4>\n<p>For <span class=\"math inline\">\\(z_1 = x_1 + jy_1\\)</span> and <span class=\"math inline\">\\(z_2 = x_2+jy_2\\)</span>,</p>\n<ul>\n<li>addition and subtraction: <span class=\"math inline\">\\(z_1 \\pm z_2 = (x_1 \\pm x_2) + j(y_1 \\pm y_2)\\)</span>.</li>\n<li>multiplication: <span class=\"math inline\">\\(z_1 z_2\\)</span> = (x_1x_2-y_1y_2)+j(x_1y_2+x_2y_1)$</li>\n<li>conjugate: <span class=\"math inline\">\\(z_1^* = x_1 - jy_1\\)</span></li>\n<li>division: <span class=\"math inline\">\\(\\dfrac{z_1}{z_2} = \\dfrac{z_1z_2^*}{z_2z_2^*} = \\dfrac{z_1z_2^*}{|z_2|^2} = \\dfrac{(x_1x_2+y_1y_2) + j(x_2y_1-x_1y_2)}{x_2^2+y_2^2}\\)</span></li>\n</ul>\n<h4 id=\"polar-form\">Polar form</h4>\n<p>For <span class=\"math inline\">\\(z_1 = r_1e^{j\\theta_1}\\)</span> and <span class=\"math inline\">\\(z_2 = r_2e^{j\\theta_2}\\)</span>,</p>\n<ul>\n<li>multiplication: <span class=\"math inline\">\\(z_1z_2 = (r_1r_2)e^{j(\\theta_1+theta_2)}\\)</span></li>\n<li>conjugate: <span class=\"math inline\">\\(z_1^* = r_1e^{-j\\theta_1}\\)</span></li>\n<li>division: <span class=\"math inline\">\\(\\dfrac{z_1}{z_2} = \\dfrac{r_1}{r_2}e^{j(\\theta_1-\\theta_2)}\\)</span></li>\n<li>addition and subtraction: transfer to rectangular form and do the addition or subtraction, and then, transfer back to polar form.</li>\n</ul>\n<h4 id=\"others\">others</h4>\n<ul>\n<li><span class=\"math inline\">\\(\\Re\\{z\\} = \\dfrac{z+z^*}{2}\\)</span></li>\n<li><span class=\"math inline\">\\(\\Im\\{z\\} = \\dfrac{z-z^*}{2j}\\)</span></li>\n<li><span class=\"math inline\">\\(|z|^2 = zz^*\\)</span></li>\n</ul>\n<h3 id=\"a.5-geometric-views-off-complex-operations\">A.5 Geometric views off complex operations</h3>\n<p>A geometric view provides a convenient visualization for complex number operations.</p>\n<h3 id=\"a.6-powers-and-roots\">A.6 Powers and Roots</h3>\n<ul>\n<li><span class=\"math inline\">\\(z^N = (re^{j\\theta})^N = r^Ne^{jN\\theta}\\)</span></li>\n<li>De Moivre's formula: <span class=\"math inline\">\\((\\cos\\theta + j\\sin\\theta)^N = \\cos N\\theta + j\\sin N\\theta\\)</span> (because <span class=\"math inline\">\\((e^{j\\theta})^N = e^{jN\\theta}\\)</span>)</li>\n<li>Roots of unity (<span class=\"math inline\">\\(z^N=1\\)</span>): <span class=\"math inline\">\\(z=e^{j2\\pi l/N}\\)</span> for <span class=\"math inline\">\\(l=0,1,2\\dots N-1\\)</span></li>\n<li><span class=\"math inline\">\\(z^N=c=|c|e^{j\\phi}\\)</span>: <span class=\"math inline\">\\(z=re^{j\\theta}\\)</span>, where <span class=\"math display\">\\[\\begin{cases}\nr = |c|^{1/N},\\\\\n\\theta = \\dfrac{\\phi+2\\pi l}{N},\n\\end{cases}\\]</span> and <span class=\"math inline\">\\(\\theta\\)</span> is the angular spacing.</li>\n</ul>\n<!-- the famous matter-energy equation $\\eqref{eq1}$ proposed by Einstein ...-->\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li>In this appendix, the basic manipulations of complex numbers are reviewed. There ideas are treated:\n<ul>\n<li>simple algebraic rules: operations on <span class=\"math inline\">\\(z = x+jy\\)</span>.</li>\n<li>elimination of trigonometry: Euler's formula for the complex exponential <span class=\"math inline\">\\(z = re^{j\\theta}=r\\cos\\theta+jr\\sin\\theta\\)</span>.</li>\n<li>representation by vectors: a way for visualization.</li>\n</ul></li>\n<li>Symbol: <span class=\"math inline\">\\(i\\)</span> or <span class=\"math inline\">\\(j\\)</span>\n<ul>\n<li>Physicists and mathematicians use symbol <span class=\"math inline\">\\(i=\\sqrt{-1}\\)</span>.</li>\n<li>Electrical engineers use symbol <span class=\"math inline\">\\(j=\\sqrt{-1}\\)</span> instead because <span class=\"math inline\">\\(i\\)</span> is left to the current.</li>\n</ul></li>\n<li>Algebraic vs. Trigonometric vs. Geometric.</li>\n</ul>\n<h3 id=\"a.1-introduction\">A.1 Introduction</h3>\n<ul>\n<li>The way <span class=\"math inline\">\\(j\\)</span> is introduced: <span class=\"math inline\">\\(z^2=-1\\)</span> ==&gt; <span class=\"math inline\">\\(z=\\pm j\\)</span>.</li>\n<li>More general, complex numbers are the roots of quadratic equations.</li>\n</ul>\n<h3 id=\"a.2-notation-for-complex-numbers\">A.2 Notation for complex numbers</h3>\n<ul>\n<li>There are two types complex number representations:\n<ul>\n<li>Rectangular form (Cartesian form): <span class=\"math inline\">\\(z = (x, y) = x + jy = \\Re \\{ z \\} + j\\Im\\{z\\}\\)</span>, where <span class=\"math inline\">\\(\\Re\\{\\}\\)</span> and <span class=\"math inline\">\\(\\Im\\{\\}\\)</span> represent the real and imaginary parts of the complex number, respectively.</li>\n<li>Polar form: <span class=\"math inline\">\\(z \\leftrightarrow r\\angle\\theta\\)</span> where <span class=\"math inline\">\\(r\\)</span> is the amplitude and <span class=\"math inline\">\\(\\angle\\theta\\)</span> is the angle whose principal value belongs to <span class=\"math inline\">\\(-180^{\\circ}&lt;\\theta &lt; 180^{\\circ}\\)</span></li>\n<li>Conversion:\n<ul>\n<li>polar --&gt; rectangular: <span class=\"math inline\">\\(z=x + jy\\)</span>, where <span class=\"math display\">\\[\\begin{equation}\n      \\begin{cases}\n      x = r\\cos\\theta,\\\\\n      y = r\\sin\\theta\n      \\end{cases}\n \\end{equation}   \\label{eq1}\\]</span></li>\n<li>rectangular --&gt; polar: <span class=\"math inline\">\\(z = re^{j\\theta}=|z|e^{j\\, \\text{arg}|z|}\\)</span>, where <span class=\"math display\">\\[\\begin{equation}\n      \\begin{cases}\n      r = \\sqrt{x^2+y^2},\\\\\n      \\theta = \\text{atan}(y, x)\n      \\end{cases}\n \\end{equation}   \\label{eq2}\\]</span></li>\n</ul></li>\n</ul></li>\n</ul>\n<h3 id=\"a.3-eulers-formula\">A.3 Euler's formula</h3>\n<ul>\n<li>Euler's formula <span class=\"math display\">\\[ \\begin{equation} e^{j\\theta} = \\cos{\\theta} + j\\sin\\theta \\end{equation}\\label{Euler} \\]</span></li>\n<li>Inverse Euler fomulas <span class=\"math display\">\\[ \\begin{align}\n    \\cos\\theta &amp;= \\frac{e^{j\\theta} + e^{-j\\theta}}{2}\\\\\n    \\sin\\theta &amp;= \\frac{e^{j\\theta} - e^{-j\\theta}}{2}\n \\end{align}\\]</span></li>\n</ul>\n<h3 id=\"a.4-algebraic-rules-for-complex-numbers\">A.4 Algebraic rules for complex numbers</h3>\n<h4 id=\"rectangular-form\">Rectangular form</h4>\n<p>For <span class=\"math inline\">\\(z_1 = x_1 + jy_1\\)</span> and <span class=\"math inline\">\\(z_2 = x_2+jy_2\\)</span>,</p>\n<ul>\n<li>addition and subtraction: <span class=\"math inline\">\\(z_1 \\pm z_2 = (x_1 \\pm x_2) + j(y_1 \\pm y_2)\\)</span>.</li>\n<li>multiplication: <span class=\"math inline\">\\(z_1 z_2\\)</span> = (x_1x_2-y_1y_2)+j(x_1y_2+x_2y_1)$</li>\n<li>conjugate: <span class=\"math inline\">\\(z_1^* = x_1 - jy_1\\)</span></li>\n<li>division: <span class=\"math inline\">\\(\\dfrac{z_1}{z_2} = \\dfrac{z_1z_2^*}{z_2z_2^*} = \\dfrac{z_1z_2^*}{|z_2|^2} = \\dfrac{(x_1x_2+y_1y_2) + j(x_2y_1-x_1y_2)}{x_2^2+y_2^2}\\)</span></li>\n</ul>\n<h4 id=\"polar-form\">Polar form</h4>\n<p>For <span class=\"math inline\">\\(z_1 = r_1e^{j\\theta_1}\\)</span> and <span class=\"math inline\">\\(z_2 = r_2e^{j\\theta_2}\\)</span>,</p>\n<ul>\n<li>multiplication: <span class=\"math inline\">\\(z_1z_2 = (r_1r_2)e^{j(\\theta_1+theta_2)}\\)</span></li>\n<li>conjugate: <span class=\"math inline\">\\(z_1^* = r_1e^{-j\\theta_1}\\)</span></li>\n<li>division: <span class=\"math inline\">\\(\\dfrac{z_1}{z_2} = \\dfrac{r_1}{r_2}e^{j(\\theta_1-\\theta_2)}\\)</span></li>\n<li>addition and subtraction: transfer to rectangular form and do the addition or subtraction, and then, transfer back to polar form.</li>\n</ul>\n<h4 id=\"others\">others</h4>\n<ul>\n<li><span class=\"math inline\">\\(\\Re\\{z\\} = \\dfrac{z+z^*}{2}\\)</span></li>\n<li><span class=\"math inline\">\\(\\Im\\{z\\} = \\dfrac{z-z^*}{2j}\\)</span></li>\n<li><span class=\"math inline\">\\(|z|^2 = zz^*\\)</span></li>\n</ul>\n<h3 id=\"a.5-geometric-views-off-complex-operations\">A.5 Geometric views off complex operations</h3>\n<p>A geometric view provides a convenient visualization for complex number operations.</p>\n<h3 id=\"a.6-powers-and-roots\">A.6 Powers and Roots</h3>\n<ul>\n<li><span class=\"math inline\">\\(z^N = (re^{j\\theta})^N = r^Ne^{jN\\theta}\\)</span></li>\n<li>De Moivre's formula: <span class=\"math inline\">\\((\\cos\\theta + j\\sin\\theta)^N = \\cos N\\theta + j\\sin N\\theta\\)</span> (because <span class=\"math inline\">\\((e^{j\\theta})^N = e^{jN\\theta}\\)</span>)</li>\n<li>Roots of unity (<span class=\"math inline\">\\(z^N=1\\)</span>): <span class=\"math inline\">\\(z=e^{j2\\pi l/N}\\)</span> for <span class=\"math inline\">\\(l=0,1,2\\dots N-1\\)</span></li>\n<li><span class=\"math inline\">\\(z^N=c=|c|e^{j\\phi}\\)</span>: <span class=\"math inline\">\\(z=re^{j\\theta}\\)</span>, where <span class=\"math display\">\\[\\begin{cases}\nr = |c|^{1/N},\\\\\n\\theta = \\dfrac{\\phi+2\\pi l}{N},\n\\end{cases}\\]</span> and <span class=\"math inline\">\\(\\theta\\)</span> is the angular spacing.</li>\n</ul>\n<!-- the famous matter-energy equation $\\eqref{eq1}$ proposed by Einstein ...-->\n"},{"title":"DSP First - Chapter 1 - Introduction","date":"2018-12-17T23:12:37.000Z","mathjax":true,"toc":true,"_content":"\nJust got the TA position for the lecture *Digital Audio Signal Processing*. It is a class introducing the basic digital audio signal processing. Even so, I thought it better to prepare more for the lecture. So I decided to review the reference book *DSP FIRST - A multimedia Approach* during the break.\n\nThe contents in the book are well-structured and well-explained, and there is nothing tricky inside. All we need to do is to review and use it again and again to make it a solid in our mind. In the blogs, there is nothing else but a list of the key points presented in the book but hopefully, this could help me strengthen my understanding.\n\n<!--more-->\n- This is a book about signals and systems.\n- A signal is something that carries information and the system is something that operates the signals.\n- In the other {% link book https://www.dspguide.com/ch5/1.htm %}: A signal is a description of how one parameter varies with another parameter. For instance, the voltage changing over time in an electronic circuit, or brightness varying with distance in an image. A system is any process that produces an output signal in response to an input signal.\n\n#### 1.1 Mathematical representation of signals\n- $s(t)$: the continuous signal\n- $s[n] = s(nT_s)$: the discrete-time signal, where $T_s$ is the sampling period.\n- Same for the image: $p(x,y) \\rightarrow p(m\\Delta x, n\\Delta y) = p[m, n]$\n\n#### 1.2 Mathematical representation of systems\n- A system is something that transform signals into new signals or different signal representations: $y(t) = \\mathcal{T}\\{x(t)\\}$ where the system is represented by the operation $\\mathcal{T}\\{\\}$.\n- block diagram: a way for the visualization to represent operations and to show the interrelations among the signals.\n\n> A block diagram is a diagram of a system in which the principal parts or functions are represented by blocks connected by lines that show the relationships of the blocks. (from {%link wiki https://en.wikipedia.org/wiki/Block_diagram%})\n","source":"_posts/DSPFirst-Ch1.md","raw":"---\ntitle: DSP First - Chapter 1 - Introduction\ndate: 2018-12-17 18:12:37\ntags: DSP First\ncategories: DSP\nmathjax: true\ntoc: true\n---\n\nJust got the TA position for the lecture *Digital Audio Signal Processing*. It is a class introducing the basic digital audio signal processing. Even so, I thought it better to prepare more for the lecture. So I decided to review the reference book *DSP FIRST - A multimedia Approach* during the break.\n\nThe contents in the book are well-structured and well-explained, and there is nothing tricky inside. All we need to do is to review and use it again and again to make it a solid in our mind. In the blogs, there is nothing else but a list of the key points presented in the book but hopefully, this could help me strengthen my understanding.\n\n<!--more-->\n- This is a book about signals and systems.\n- A signal is something that carries information and the system is something that operates the signals.\n- In the other {% link book https://www.dspguide.com/ch5/1.htm %}: A signal is a description of how one parameter varies with another parameter. For instance, the voltage changing over time in an electronic circuit, or brightness varying with distance in an image. A system is any process that produces an output signal in response to an input signal.\n\n#### 1.1 Mathematical representation of signals\n- $s(t)$: the continuous signal\n- $s[n] = s(nT_s)$: the discrete-time signal, where $T_s$ is the sampling period.\n- Same for the image: $p(x,y) \\rightarrow p(m\\Delta x, n\\Delta y) = p[m, n]$\n\n#### 1.2 Mathematical representation of systems\n- A system is something that transform signals into new signals or different signal representations: $y(t) = \\mathcal{T}\\{x(t)\\}$ where the system is represented by the operation $\\mathcal{T}\\{\\}$.\n- block diagram: a way for the visualization to represent operations and to show the interrelations among the signals.\n\n> A block diagram is a diagram of a system in which the principal parts or functions are represented by blocks connected by lines that show the relationships of the blocks. (from {%link wiki https://en.wikipedia.org/wiki/Block_diagram%})\n","slug":"DSPFirst-Ch1","published":1,"updated":"2018-12-30T01:12:32.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjqb6na6000077pph3m3647bx","content":"<p>Just got the TA position for the lecture <em>Digital Audio Signal Processing</em>. It is a class introducing the basic digital audio signal processing. Even so, I thought it better to prepare more for the lecture. So I decided to review the reference book <em>DSP FIRST - A multimedia Approach</em> during the break.</p>\n<p>The contents in the book are well-structured and well-explained, and there is nothing tricky inside. All we need to do is to review and use it again and again to make it a solid in our mind. In the blogs, there is nothing else but a list of the key points presented in the book but hopefully, this could help me strengthen my understanding.</p>\n<a id=\"more\"></a>\n<ul>\n<li>This is a book about signals and systems.</li>\n<li>A signal is something that carries information and the system is something that operates the signals.</li>\n<li>In the other <a href=\"https://www.dspguide.com/ch5/1.htm\" target=\"_blank\" rel=\"noopener\">book</a>: A signal is a description of how one parameter varies with another parameter. For instance, the voltage changing over time in an electronic circuit, or brightness varying with distance in an image. A system is any process that produces an output signal in response to an input signal.</li>\n</ul>\n<h4 id=\"mathematical-representation-of-signals\">1.1 Mathematical representation of signals</h4>\n<ul>\n<li><span class=\"math inline\">\\(s(t)\\)</span>: the continuous signal</li>\n<li><span class=\"math inline\">\\(s[n] = s(nT_s)\\)</span>: the discrete-time signal, where <span class=\"math inline\">\\(T_s\\)</span> is the sampling period.</li>\n<li>Same for the image: <span class=\"math inline\">\\(p(x,y) \\rightarrow p(m\\Delta x, n\\Delta y) = p[m, n]\\)</span></li>\n</ul>\n<h4 id=\"mathematical-representation-of-systems\">1.2 Mathematical representation of systems</h4>\n<ul>\n<li>A system is something that transform signals into new signals or different signal representations: <span class=\"math inline\">\\(y(t) = \\mathcal{T}\\{x(t)\\}\\)</span> where the system is represented by the operation <span class=\"math inline\">\\(\\mathcal{T}\\{\\}\\)</span>.</li>\n<li>block diagram: a way for the visualization to represent operations and to show the interrelations among the signals.</li>\n</ul>\n<blockquote>\n<p>A block diagram is a diagram of a system in which the principal parts or functions are represented by blocks connected by lines that show the relationships of the blocks. (from <a href=\"https://en.wikipedia.org/wiki/Block_diagram\" target=\"_blank\" rel=\"noopener\">wiki</a>)</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<p>Just got the TA position for the lecture <em>Digital Audio Signal Processing</em>. It is a class introducing the basic digital audio signal processing. Even so, I thought it better to prepare more for the lecture. So I decided to review the reference book <em>DSP FIRST - A multimedia Approach</em> during the break.</p>\n<p>The contents in the book are well-structured and well-explained, and there is nothing tricky inside. All we need to do is to review and use it again and again to make it a solid in our mind. In the blogs, there is nothing else but a list of the key points presented in the book but hopefully, this could help me strengthen my understanding.</p>","more":"<ul>\n<li>This is a book about signals and systems.</li>\n<li>A signal is something that carries information and the system is something that operates the signals.</li>\n<li>In the other <a href=\"https://www.dspguide.com/ch5/1.htm\" target=\"_blank\" rel=\"noopener\">book</a>: A signal is a description of how one parameter varies with another parameter. For instance, the voltage changing over time in an electronic circuit, or brightness varying with distance in an image. A system is any process that produces an output signal in response to an input signal.</li>\n</ul>\n<h4 id=\"mathematical-representation-of-signals\">1.1 Mathematical representation of signals</h4>\n<ul>\n<li><span class=\"math inline\">\\(s(t)\\)</span>: the continuous signal</li>\n<li><span class=\"math inline\">\\(s[n] = s(nT_s)\\)</span>: the discrete-time signal, where <span class=\"math inline\">\\(T_s\\)</span> is the sampling period.</li>\n<li>Same for the image: <span class=\"math inline\">\\(p(x,y) \\rightarrow p(m\\Delta x, n\\Delta y) = p[m, n]\\)</span></li>\n</ul>\n<h4 id=\"mathematical-representation-of-systems\">1.2 Mathematical representation of systems</h4>\n<ul>\n<li>A system is something that transform signals into new signals or different signal representations: <span class=\"math inline\">\\(y(t) = \\mathcal{T}\\{x(t)\\}\\)</span> where the system is represented by the operation <span class=\"math inline\">\\(\\mathcal{T}\\{\\}\\)</span>.</li>\n<li>block diagram: a way for the visualization to represent operations and to show the interrelations among the signals.</li>\n</ul>\n<blockquote>\n<p>A block diagram is a diagram of a system in which the principal parts or functions are represented by blocks connected by lines that show the relationships of the blocks. (from <a href=\"https://en.wikipedia.org/wiki/Block_diagram\" target=\"_blank\" rel=\"noopener\">wiki</a>)</p>\n</blockquote>"},{"title":"DSP First - Chapter 2 - Sinusoids","date":"2018-12-19T16:11:09.000Z","mathjax":true,"toc":true,"_content":"\nSinusoids, or sinusoidal signals, representing the cosine or sine signals/waves, are the most basic signals in the theory of signals and systems. This chapter introduces the basic sinusoid concepts and operations.\n\n<!--more-->\n\n### Sinusoidal signals\n- The general mathematical formula for a cosine signal is\n   $$\\begin{equation}\n   x(t) = A\\cos(\\omega_0 t + \\phi) = A\\cos(2\\pi f_0 t + \\phi),\n   \\end{equation}\\label{cos}$$\n   where \n   - $A$ is the amplitude,\n   - $\\omega_0$ is the radian frequency (rad/sec),\n   - $\\phi$ represents the radian phase-shift (rads),\n   - $f_0 = \\omega_0/2\\pi$, the cyclic frequency (sec$^{-1}$), represents the number of periods (cycles) per second,\n   - $T_0 = \\dfrac{1}{f_0} = \\dfrac{2\\pi}{\\omega_0}$, the period (sec), is the one cycle length of the sinusoid in time.\n- Phase shift and time shift\n  - Having $x_1(t) = x(t-t_1)$, we say $x(t)$ is a time-shifted version of $s(t)$\n    - if $t_1 > 0$, shifted to the right = delayed,\n    - if $t_1 < 0$, shifted to the left  = advanced.\n  - Taking the sinusoid as the form in Eq. $\\eqref{cos}$,\n    - convert time shift to a phase shift: $x(t-t_1) = A\\cos(\\omega_0(t-t_1)+\\phi) = A\\cos(\\omega_0t+\\phi+\\phi_1)$, where $\\phi_1 = -\\omega_0t_1$ is the phase shift.\n\t- $t_1 = -\\dfrac{\\phi}{\\omega_0} = -\\dfrac{\\phi}{2\\pi f_0}$,\n\t- $\\phi_1 = -2\\pi f_0 t_1 = -2\\pi\\dfrac{t_1}{T_0}$.\n  - Based on the definition of the time shift and the phase shift, **they have the opposite direction**, e.g., if the time shift is positive (delay), the phase shift would be negative.\n\n### Complex exponentials and phasors\n#### Complex exponentials\n- Complex exponentials provide an alternative representation for the real cosine signal and might make things easier:\n  $$\\begin{equation}\n  \\bar{x}(t) = Ae^{j(\\omega_0t + \\phi)}\n  \\end{equation} \\label{complex} $$\n  - $x(t) = \\Re{\\{Ae^{j(\\omega_0t+\\phi)}\\}} = A\\cos(\\omega_0t+\\phi)$\n  \n#### Phasors\n- The rotating phasor interpretation\n  - The complex exponential signal could be expressed as $\\bar{x}(t)=Xe^{j\\omega_0t}$, i.e., the product of the complex amplitude $X=Ae^{j\\phi}$ and the complex-valued function $e^{j\\omega_0t}$.\n  - The complex amplitude $X$ is also called the **phasor**.\n  - $\\bar{x}(t)=Xe^{j\\omega_0t}=Ae^{j\\theta(t)}$, where $\\theta(t) = \\omega_0t + \\phi$.\n  - In the complex plane, $\\bar{x}(t)$ is simply a rotating vector at a constant rate $\\omega_0$ with initial phase $\\phi$ ($t=0$). So a complex exponential signal is a **rotating phasor**.\n    - $\\omega_0 > 0$: rotating counterclockwise,\n\t- $\\omega_0 < 0$: rotating clockwise.\n- Applying the inverse Euler's formula, the real cosine signal with radian frequency $\\omega_0$ is composed of two conjugated complex exponential signals with frequencies of $\\omega_0$ and $-\\omega_0$, and also complex amplitudes of $\\frac{1}{2}Ae^{j\\phi}$ and $-\\frac{1}{2}Ae^{j\\phi}$, respectively.\n  $$x(t) = A\\cos(\\omega_0t+\\phi) = \\frac{1}{2}\\bar{x}(t) + \\frac{1}{2}\\bar{x}^*(t) = \\Re{\\{\\bar{x}(t)\\}}$$\n\n- Phasor Addition (additions of sinusoids with the same frequency but different amplitudes and phases)\n  - Phasor addition rule: *The summation of sinusoids with the same frequency is a sinusoid with the identical frequency with the amplitude and phase of a certain phasor calculated by the summation of the phasors of each sinusoid.*\n  - Summation of phasors is also a phasor: \n    $$\\begin{equation}\n\t  \\sum_{k=1}^N A_ke^{j\\phi_k} = Ae^{j\\phi}\n\t  \\end{equation} \\label{phasor_sum}$$\n  - Finally, lead us to: $$\\sum_{k=1}^N A_k\\cos(\\omega_0t + \\phi_k) = A\\cos(\\omega_0t + \\phi)$$\n    which could be proved either by\n    - trigonometric identities, or\n\t- summation of phasors following the steps:\n\t  1. Get the phasors $X_k = A_ke^{j\\phi_k}$ of each individual cosine signals,\n\t  2. Add phasors using Eq. $\\eqref{phasor_sum}$, employing polar-to-Cartesian-to-polar conversion,\n\t  3. Multiply the resulting phasor $X=Ae^{j\\phi}$ with the rotating function $e^{j\\omega_0t}$ and get $\\bar{x}(t)$,\n\t  4. Take the real part and get $x(t) = \\bar{x}(t)$.\n\n\n\n### Review of sine and cosine functions\n#### Properties\n- Equivalence: $\\sin\\theta = \\cos(\\theta-\\pi/2)$ or $\\cos\\theta=\\sin(\\theta+\\pi/2)$; **the sine function is just a cosine function that is shifted to the right by $\\pi/2$**,\n- Periodicity: $\\cos(\\theta + 2\\pi k) = \\cos\\theta$, where $k\\in \\mathbb{Z}$,\n- Evenness of cosine: $\\cos(-\\theta) = \\cos\\theta$,\n- Oddness of sine: $\\sin(-\\theta) = -\\sin\\theta$,\n- Zeros of sine: $\\sin(\\pi k) = 0$, for $k\\in\\mathbb{Z}$,\n- Ones of sine: $\\cos(2\\pi k) = 1$, for $k\\in\\mathbb{Z}$,\n- Minus ones of cosine: $\\cos[2\\pi(k+\\dfrac{1}{2})]=-1$, for $k\\in\\mathbb{Z}$,x\n- Derivatives: $\\dfrac{d \\sin\\theta}{d \\theta} = \\cos\\theta$ and $\\dfrac{d \\cos\\theta}{d \\theta} = -\\sin\\theta$.\n\n#### Trigonometric identities\n- $\\sin^2\\theta + \\cos^2\\theta = 1$,\n- $\\cos^2\\theta = \\cos^2\\theta - \\sin^2\\theta$,\n- $\\sin^2\\theta = 2\\sin\\theta\\cos\\theta$,\n- $\\sin(\\alpha\\pm\\beta) = \\sin\\alpha\\cos\\beta \\pm \\cos\\alpha\\sin\\beta$,\n- $\\cos(\\alpha\\pm\\beta) = \\cos\\alpha\\cos\\beta \\mp \\sin\\alpha\\sin\\beta$,\n- $\\cos^2\\theta = \\frac{1}{2}(1+\\cos 2\\theta)$,\n- $\\sin^2\\theta = \\frac{1}{2}(1-\\cos 2\\theta)$.\n","source":"_posts/DSPFirst-Ch2.md","raw":"---\ntitle: DSP First - Chapter 2 - Sinusoids\ndate: 2018-12-19 11:11:09\ntags: DSP First\ncategories: DSP\nmathjax: true\ntoc: true\n---\n\nSinusoids, or sinusoidal signals, representing the cosine or sine signals/waves, are the most basic signals in the theory of signals and systems. This chapter introduces the basic sinusoid concepts and operations.\n\n<!--more-->\n\n### Sinusoidal signals\n- The general mathematical formula for a cosine signal is\n   $$\\begin{equation}\n   x(t) = A\\cos(\\omega_0 t + \\phi) = A\\cos(2\\pi f_0 t + \\phi),\n   \\end{equation}\\label{cos}$$\n   where \n   - $A$ is the amplitude,\n   - $\\omega_0$ is the radian frequency (rad/sec),\n   - $\\phi$ represents the radian phase-shift (rads),\n   - $f_0 = \\omega_0/2\\pi$, the cyclic frequency (sec$^{-1}$), represents the number of periods (cycles) per second,\n   - $T_0 = \\dfrac{1}{f_0} = \\dfrac{2\\pi}{\\omega_0}$, the period (sec), is the one cycle length of the sinusoid in time.\n- Phase shift and time shift\n  - Having $x_1(t) = x(t-t_1)$, we say $x(t)$ is a time-shifted version of $s(t)$\n    - if $t_1 > 0$, shifted to the right = delayed,\n    - if $t_1 < 0$, shifted to the left  = advanced.\n  - Taking the sinusoid as the form in Eq. $\\eqref{cos}$,\n    - convert time shift to a phase shift: $x(t-t_1) = A\\cos(\\omega_0(t-t_1)+\\phi) = A\\cos(\\omega_0t+\\phi+\\phi_1)$, where $\\phi_1 = -\\omega_0t_1$ is the phase shift.\n\t- $t_1 = -\\dfrac{\\phi}{\\omega_0} = -\\dfrac{\\phi}{2\\pi f_0}$,\n\t- $\\phi_1 = -2\\pi f_0 t_1 = -2\\pi\\dfrac{t_1}{T_0}$.\n  - Based on the definition of the time shift and the phase shift, **they have the opposite direction**, e.g., if the time shift is positive (delay), the phase shift would be negative.\n\n### Complex exponentials and phasors\n#### Complex exponentials\n- Complex exponentials provide an alternative representation for the real cosine signal and might make things easier:\n  $$\\begin{equation}\n  \\bar{x}(t) = Ae^{j(\\omega_0t + \\phi)}\n  \\end{equation} \\label{complex} $$\n  - $x(t) = \\Re{\\{Ae^{j(\\omega_0t+\\phi)}\\}} = A\\cos(\\omega_0t+\\phi)$\n  \n#### Phasors\n- The rotating phasor interpretation\n  - The complex exponential signal could be expressed as $\\bar{x}(t)=Xe^{j\\omega_0t}$, i.e., the product of the complex amplitude $X=Ae^{j\\phi}$ and the complex-valued function $e^{j\\omega_0t}$.\n  - The complex amplitude $X$ is also called the **phasor**.\n  - $\\bar{x}(t)=Xe^{j\\omega_0t}=Ae^{j\\theta(t)}$, where $\\theta(t) = \\omega_0t + \\phi$.\n  - In the complex plane, $\\bar{x}(t)$ is simply a rotating vector at a constant rate $\\omega_0$ with initial phase $\\phi$ ($t=0$). So a complex exponential signal is a **rotating phasor**.\n    - $\\omega_0 > 0$: rotating counterclockwise,\n\t- $\\omega_0 < 0$: rotating clockwise.\n- Applying the inverse Euler's formula, the real cosine signal with radian frequency $\\omega_0$ is composed of two conjugated complex exponential signals with frequencies of $\\omega_0$ and $-\\omega_0$, and also complex amplitudes of $\\frac{1}{2}Ae^{j\\phi}$ and $-\\frac{1}{2}Ae^{j\\phi}$, respectively.\n  $$x(t) = A\\cos(\\omega_0t+\\phi) = \\frac{1}{2}\\bar{x}(t) + \\frac{1}{2}\\bar{x}^*(t) = \\Re{\\{\\bar{x}(t)\\}}$$\n\n- Phasor Addition (additions of sinusoids with the same frequency but different amplitudes and phases)\n  - Phasor addition rule: *The summation of sinusoids with the same frequency is a sinusoid with the identical frequency with the amplitude and phase of a certain phasor calculated by the summation of the phasors of each sinusoid.*\n  - Summation of phasors is also a phasor: \n    $$\\begin{equation}\n\t  \\sum_{k=1}^N A_ke^{j\\phi_k} = Ae^{j\\phi}\n\t  \\end{equation} \\label{phasor_sum}$$\n  - Finally, lead us to: $$\\sum_{k=1}^N A_k\\cos(\\omega_0t + \\phi_k) = A\\cos(\\omega_0t + \\phi)$$\n    which could be proved either by\n    - trigonometric identities, or\n\t- summation of phasors following the steps:\n\t  1. Get the phasors $X_k = A_ke^{j\\phi_k}$ of each individual cosine signals,\n\t  2. Add phasors using Eq. $\\eqref{phasor_sum}$, employing polar-to-Cartesian-to-polar conversion,\n\t  3. Multiply the resulting phasor $X=Ae^{j\\phi}$ with the rotating function $e^{j\\omega_0t}$ and get $\\bar{x}(t)$,\n\t  4. Take the real part and get $x(t) = \\bar{x}(t)$.\n\n\n\n### Review of sine and cosine functions\n#### Properties\n- Equivalence: $\\sin\\theta = \\cos(\\theta-\\pi/2)$ or $\\cos\\theta=\\sin(\\theta+\\pi/2)$; **the sine function is just a cosine function that is shifted to the right by $\\pi/2$**,\n- Periodicity: $\\cos(\\theta + 2\\pi k) = \\cos\\theta$, where $k\\in \\mathbb{Z}$,\n- Evenness of cosine: $\\cos(-\\theta) = \\cos\\theta$,\n- Oddness of sine: $\\sin(-\\theta) = -\\sin\\theta$,\n- Zeros of sine: $\\sin(\\pi k) = 0$, for $k\\in\\mathbb{Z}$,\n- Ones of sine: $\\cos(2\\pi k) = 1$, for $k\\in\\mathbb{Z}$,\n- Minus ones of cosine: $\\cos[2\\pi(k+\\dfrac{1}{2})]=-1$, for $k\\in\\mathbb{Z}$,x\n- Derivatives: $\\dfrac{d \\sin\\theta}{d \\theta} = \\cos\\theta$ and $\\dfrac{d \\cos\\theta}{d \\theta} = -\\sin\\theta$.\n\n#### Trigonometric identities\n- $\\sin^2\\theta + \\cos^2\\theta = 1$,\n- $\\cos^2\\theta = \\cos^2\\theta - \\sin^2\\theta$,\n- $\\sin^2\\theta = 2\\sin\\theta\\cos\\theta$,\n- $\\sin(\\alpha\\pm\\beta) = \\sin\\alpha\\cos\\beta \\pm \\cos\\alpha\\sin\\beta$,\n- $\\cos(\\alpha\\pm\\beta) = \\cos\\alpha\\cos\\beta \\mp \\sin\\alpha\\sin\\beta$,\n- $\\cos^2\\theta = \\frac{1}{2}(1+\\cos 2\\theta)$,\n- $\\sin^2\\theta = \\frac{1}{2}(1-\\cos 2\\theta)$.\n","slug":"DSPFirst-Ch2","published":1,"updated":"2018-12-30T01:08:41.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjqb6na6100087pph4nr4nrf4","content":"<p>Sinusoids, or sinusoidal signals, representing the cosine or sine signals/waves, are the most basic signals in the theory of signals and systems. This chapter introduces the basic sinusoid concepts and operations.</p>\n<a id=\"more\"></a>\n<h3 id=\"sinusoidal-signals\">Sinusoidal signals</h3>\n<ul>\n<li>The general mathematical formula for a cosine signal is <span class=\"math display\">\\[\\begin{equation}\n x(t) = A\\cos(\\omega_0 t + \\phi) = A\\cos(2\\pi f_0 t + \\phi),\n \\end{equation}\\label{cos}\\]</span> where\n<ul>\n<li><span class=\"math inline\">\\(A\\)</span> is the amplitude,</li>\n<li><span class=\"math inline\">\\(\\omega_0\\)</span> is the radian frequency (rad/sec),</li>\n<li><span class=\"math inline\">\\(\\phi\\)</span> represents the radian phase-shift (rads),</li>\n<li><span class=\"math inline\">\\(f_0 = \\omega_0/2\\pi\\)</span>, the cyclic frequency (sec<span class=\"math inline\">\\(^{-1}\\)</span>), represents the number of periods (cycles) per second,</li>\n<li><span class=\"math inline\">\\(T_0 = \\dfrac{1}{f_0} = \\dfrac{2\\pi}{\\omega_0}\\)</span>, the period (sec), is the one cycle length of the sinusoid in time.</li>\n</ul></li>\n<li>Phase shift and time shift\n<ul>\n<li>Having <span class=\"math inline\">\\(x_1(t) = x(t-t_1)\\)</span>, we say <span class=\"math inline\">\\(x(t)\\)</span> is a time-shifted version of <span class=\"math inline\">\\(s(t)\\)</span>\n<ul>\n<li>if <span class=\"math inline\">\\(t_1 &gt; 0\\)</span>, shifted to the right = delayed,</li>\n<li>if <span class=\"math inline\">\\(t_1 &lt; 0\\)</span>, shifted to the left = advanced.</li>\n</ul></li>\n<li>Taking the sinusoid as the form in Eq. <span class=\"math inline\">\\(\\eqref{cos}\\)</span>,\n<ul>\n<li>convert time shift to a phase shift: <span class=\"math inline\">\\(x(t-t_1) = A\\cos(\\omega_0(t-t_1)+\\phi) = A\\cos(\\omega_0t+\\phi+\\phi_1)\\)</span>, where <span class=\"math inline\">\\(\\phi_1 = -\\omega_0t_1\\)</span> is the phase shift.</li>\n<li><span class=\"math inline\">\\(t_1 = -\\dfrac{\\phi}{\\omega_0} = -\\dfrac{\\phi}{2\\pi f_0}\\)</span>,</li>\n<li><span class=\"math inline\">\\(\\phi_1 = -2\\pi f_0 t_1 = -2\\pi\\dfrac{t_1}{T_0}\\)</span>.</li>\n</ul></li>\n<li>Based on the definition of the time shift and the phase shift, <strong>they have the opposite direction</strong>, e.g., if the time shift is positive (delay), the phase shift would be negative.</li>\n</ul></li>\n</ul>\n<h3 id=\"complex-exponentials-and-phasors\">Complex exponentials and phasors</h3>\n<h4 id=\"complex-exponentials\">Complex exponentials</h4>\n<ul>\n<li>Complex exponentials provide an alternative representation for the real cosine signal and might make things easier: <span class=\"math display\">\\[\\begin{equation}\n\\bar{x}(t) = Ae^{j(\\omega_0t + \\phi)}\n\\end{equation} \\label{complex} \\]</span>\n<ul>\n<li><span class=\"math inline\">\\(x(t) = \\Re{\\{Ae^{j(\\omega_0t+\\phi)}\\}} = A\\cos(\\omega_0t+\\phi)\\)</span></li>\n</ul></li>\n</ul>\n<h4 id=\"phasors\">Phasors</h4>\n<ul>\n<li>The rotating phasor interpretation\n<ul>\n<li>The complex exponential signal could be expressed as <span class=\"math inline\">\\(\\bar{x}(t)=Xe^{j\\omega_0t}\\)</span>, i.e., the product of the complex amplitude <span class=\"math inline\">\\(X=Ae^{j\\phi}\\)</span> and the complex-valued function <span class=\"math inline\">\\(e^{j\\omega_0t}\\)</span>.</li>\n<li>The complex amplitude <span class=\"math inline\">\\(X\\)</span> is also called the <strong>phasor</strong>.</li>\n<li><span class=\"math inline\">\\(\\bar{x}(t)=Xe^{j\\omega_0t}=Ae^{j\\theta(t)}\\)</span>, where <span class=\"math inline\">\\(\\theta(t) = \\omega_0t + \\phi\\)</span>.</li>\n<li>In the complex plane, <span class=\"math inline\">\\(\\bar{x}(t)\\)</span> is simply a rotating vector at a constant rate <span class=\"math inline\">\\(\\omega_0\\)</span> with initial phase <span class=\"math inline\">\\(\\phi\\)</span> (<span class=\"math inline\">\\(t=0\\)</span>). So a complex exponential signal is a <strong>rotating phasor</strong>.\n<ul>\n<li><span class=\"math inline\">\\(\\omega_0 &gt; 0\\)</span>: rotating counterclockwise,</li>\n<li><span class=\"math inline\">\\(\\omega_0 &lt; 0\\)</span>: rotating clockwise.</li>\n</ul></li>\n</ul></li>\n<li><p>Applying the inverse Euler's formula, the real cosine signal with radian frequency <span class=\"math inline\">\\(\\omega_0\\)</span> is composed of two conjugated complex exponential signals with frequencies of <span class=\"math inline\">\\(\\omega_0\\)</span> and <span class=\"math inline\">\\(-\\omega_0\\)</span>, and also complex amplitudes of <span class=\"math inline\">\\(\\frac{1}{2}Ae^{j\\phi}\\)</span> and <span class=\"math inline\">\\(-\\frac{1}{2}Ae^{j\\phi}\\)</span>, respectively. <span class=\"math display\">\\[x(t) = A\\cos(\\omega_0t+\\phi) = \\frac{1}{2}\\bar{x}(t) + \\frac{1}{2}\\bar{x}^*(t) = \\Re{\\{\\bar{x}(t)\\}}\\]</span></p></li>\n<li>Phasor Addition (additions of sinusoids with the same frequency but different amplitudes and phases)\n<ul>\n<li>Phasor addition rule: <em>The summation of sinusoids with the same frequency is a sinusoid with the identical frequency with the amplitude and phase of a certain phasor calculated by the summation of the phasors of each sinusoid.</em></li>\n<li>Summation of phasors is also a phasor: <span class=\"math display\">\\[\\begin{equation}\n  \\sum_{k=1}^N A_ke^{j\\phi_k} = Ae^{j\\phi}\n  \\end{equation} \\label{phasor_sum}\\]</span></li>\n<li>Finally, lead us to: <span class=\"math display\">\\[\\sum_{k=1}^N A_k\\cos(\\omega_0t + \\phi_k) = A\\cos(\\omega_0t + \\phi)\\]</span> which could be proved either by\n<ul>\n<li>trigonometric identities, or</li>\n<li>summation of phasors following the steps:\n<ol type=\"1\">\n<li>Get the phasors <span class=\"math inline\">\\(X_k = A_ke^{j\\phi_k}\\)</span> of each individual cosine signals,</li>\n<li>Add phasors using Eq. <span class=\"math inline\">\\(\\eqref{phasor_sum}\\)</span>, employing polar-to-Cartesian-to-polar conversion,</li>\n<li>Multiply the resulting phasor <span class=\"math inline\">\\(X=Ae^{j\\phi}\\)</span> with the rotating function <span class=\"math inline\">\\(e^{j\\omega_0t}\\)</span> and get <span class=\"math inline\">\\(\\bar{x}(t)\\)</span>,</li>\n<li>Take the real part and get <span class=\"math inline\">\\(x(t) = \\bar{x}(t)\\)</span>.</li>\n</ol></li>\n</ul></li>\n</ul></li>\n</ul>\n<h3 id=\"review-of-sine-and-cosine-functions\">Review of sine and cosine functions</h3>\n<h4 id=\"properties\">Properties</h4>\n<ul>\n<li>Equivalence: <span class=\"math inline\">\\(\\sin\\theta = \\cos(\\theta-\\pi/2)\\)</span> or <span class=\"math inline\">\\(\\cos\\theta=\\sin(\\theta+\\pi/2)\\)</span>; <strong>the sine function is just a cosine function that is shifted to the right by <span class=\"math inline\">\\(\\pi/2\\)</span></strong>,</li>\n<li>Periodicity: <span class=\"math inline\">\\(\\cos(\\theta + 2\\pi k) = \\cos\\theta\\)</span>, where <span class=\"math inline\">\\(k\\in \\mathbb{Z}\\)</span>,</li>\n<li>Evenness of cosine: <span class=\"math inline\">\\(\\cos(-\\theta) = \\cos\\theta\\)</span>,</li>\n<li>Oddness of sine: <span class=\"math inline\">\\(\\sin(-\\theta) = -\\sin\\theta\\)</span>,</li>\n<li>Zeros of sine: <span class=\"math inline\">\\(\\sin(\\pi k) = 0\\)</span>, for <span class=\"math inline\">\\(k\\in\\mathbb{Z}\\)</span>,</li>\n<li>Ones of sine: <span class=\"math inline\">\\(\\cos(2\\pi k) = 1\\)</span>, for <span class=\"math inline\">\\(k\\in\\mathbb{Z}\\)</span>,</li>\n<li>Minus ones of cosine: <span class=\"math inline\">\\(\\cos[2\\pi(k+\\dfrac{1}{2})]=-1\\)</span>, for <span class=\"math inline\">\\(k\\in\\mathbb{Z}\\)</span>,x</li>\n<li>Derivatives: <span class=\"math inline\">\\(\\dfrac{d \\sin\\theta}{d \\theta} = \\cos\\theta\\)</span> and <span class=\"math inline\">\\(\\dfrac{d \\cos\\theta}{d \\theta} = -\\sin\\theta\\)</span>.</li>\n</ul>\n<h4 id=\"trigonometric-identities\">Trigonometric identities</h4>\n<ul>\n<li><span class=\"math inline\">\\(\\sin^2\\theta + \\cos^2\\theta = 1\\)</span>,</li>\n<li><span class=\"math inline\">\\(\\cos^2\\theta = \\cos^2\\theta - \\sin^2\\theta\\)</span>,</li>\n<li><span class=\"math inline\">\\(\\sin^2\\theta = 2\\sin\\theta\\cos\\theta\\)</span>,</li>\n<li><span class=\"math inline\">\\(\\sin(\\alpha\\pm\\beta) = \\sin\\alpha\\cos\\beta \\pm \\cos\\alpha\\sin\\beta\\)</span>,</li>\n<li><span class=\"math inline\">\\(\\cos(\\alpha\\pm\\beta) = \\cos\\alpha\\cos\\beta \\mp \\sin\\alpha\\sin\\beta\\)</span>,</li>\n<li><span class=\"math inline\">\\(\\cos^2\\theta = \\frac{1}{2}(1+\\cos 2\\theta)\\)</span>,</li>\n<li><span class=\"math inline\">\\(\\sin^2\\theta = \\frac{1}{2}(1-\\cos 2\\theta)\\)</span>.</li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>Sinusoids, or sinusoidal signals, representing the cosine or sine signals/waves, are the most basic signals in the theory of signals and systems. This chapter introduces the basic sinusoid concepts and operations.</p>","more":"<h3 id=\"sinusoidal-signals\">Sinusoidal signals</h3>\n<ul>\n<li>The general mathematical formula for a cosine signal is <span class=\"math display\">\\[\\begin{equation}\n x(t) = A\\cos(\\omega_0 t + \\phi) = A\\cos(2\\pi f_0 t + \\phi),\n \\end{equation}\\label{cos}\\]</span> where\n<ul>\n<li><span class=\"math inline\">\\(A\\)</span> is the amplitude,</li>\n<li><span class=\"math inline\">\\(\\omega_0\\)</span> is the radian frequency (rad/sec),</li>\n<li><span class=\"math inline\">\\(\\phi\\)</span> represents the radian phase-shift (rads),</li>\n<li><span class=\"math inline\">\\(f_0 = \\omega_0/2\\pi\\)</span>, the cyclic frequency (sec<span class=\"math inline\">\\(^{-1}\\)</span>), represents the number of periods (cycles) per second,</li>\n<li><span class=\"math inline\">\\(T_0 = \\dfrac{1}{f_0} = \\dfrac{2\\pi}{\\omega_0}\\)</span>, the period (sec), is the one cycle length of the sinusoid in time.</li>\n</ul></li>\n<li>Phase shift and time shift\n<ul>\n<li>Having <span class=\"math inline\">\\(x_1(t) = x(t-t_1)\\)</span>, we say <span class=\"math inline\">\\(x(t)\\)</span> is a time-shifted version of <span class=\"math inline\">\\(s(t)\\)</span>\n<ul>\n<li>if <span class=\"math inline\">\\(t_1 &gt; 0\\)</span>, shifted to the right = delayed,</li>\n<li>if <span class=\"math inline\">\\(t_1 &lt; 0\\)</span>, shifted to the left = advanced.</li>\n</ul></li>\n<li>Taking the sinusoid as the form in Eq. <span class=\"math inline\">\\(\\eqref{cos}\\)</span>,\n<ul>\n<li>convert time shift to a phase shift: <span class=\"math inline\">\\(x(t-t_1) = A\\cos(\\omega_0(t-t_1)+\\phi) = A\\cos(\\omega_0t+\\phi+\\phi_1)\\)</span>, where <span class=\"math inline\">\\(\\phi_1 = -\\omega_0t_1\\)</span> is the phase shift.</li>\n<li><span class=\"math inline\">\\(t_1 = -\\dfrac{\\phi}{\\omega_0} = -\\dfrac{\\phi}{2\\pi f_0}\\)</span>,</li>\n<li><span class=\"math inline\">\\(\\phi_1 = -2\\pi f_0 t_1 = -2\\pi\\dfrac{t_1}{T_0}\\)</span>.</li>\n</ul></li>\n<li>Based on the definition of the time shift and the phase shift, <strong>they have the opposite direction</strong>, e.g., if the time shift is positive (delay), the phase shift would be negative.</li>\n</ul></li>\n</ul>\n<h3 id=\"complex-exponentials-and-phasors\">Complex exponentials and phasors</h3>\n<h4 id=\"complex-exponentials\">Complex exponentials</h4>\n<ul>\n<li>Complex exponentials provide an alternative representation for the real cosine signal and might make things easier: <span class=\"math display\">\\[\\begin{equation}\n\\bar{x}(t) = Ae^{j(\\omega_0t + \\phi)}\n\\end{equation} \\label{complex} \\]</span>\n<ul>\n<li><span class=\"math inline\">\\(x(t) = \\Re{\\{Ae^{j(\\omega_0t+\\phi)}\\}} = A\\cos(\\omega_0t+\\phi)\\)</span></li>\n</ul></li>\n</ul>\n<h4 id=\"phasors\">Phasors</h4>\n<ul>\n<li>The rotating phasor interpretation\n<ul>\n<li>The complex exponential signal could be expressed as <span class=\"math inline\">\\(\\bar{x}(t)=Xe^{j\\omega_0t}\\)</span>, i.e., the product of the complex amplitude <span class=\"math inline\">\\(X=Ae^{j\\phi}\\)</span> and the complex-valued function <span class=\"math inline\">\\(e^{j\\omega_0t}\\)</span>.</li>\n<li>The complex amplitude <span class=\"math inline\">\\(X\\)</span> is also called the <strong>phasor</strong>.</li>\n<li><span class=\"math inline\">\\(\\bar{x}(t)=Xe^{j\\omega_0t}=Ae^{j\\theta(t)}\\)</span>, where <span class=\"math inline\">\\(\\theta(t) = \\omega_0t + \\phi\\)</span>.</li>\n<li>In the complex plane, <span class=\"math inline\">\\(\\bar{x}(t)\\)</span> is simply a rotating vector at a constant rate <span class=\"math inline\">\\(\\omega_0\\)</span> with initial phase <span class=\"math inline\">\\(\\phi\\)</span> (<span class=\"math inline\">\\(t=0\\)</span>). So a complex exponential signal is a <strong>rotating phasor</strong>.\n<ul>\n<li><span class=\"math inline\">\\(\\omega_0 &gt; 0\\)</span>: rotating counterclockwise,</li>\n<li><span class=\"math inline\">\\(\\omega_0 &lt; 0\\)</span>: rotating clockwise.</li>\n</ul></li>\n</ul></li>\n<li><p>Applying the inverse Euler's formula, the real cosine signal with radian frequency <span class=\"math inline\">\\(\\omega_0\\)</span> is composed of two conjugated complex exponential signals with frequencies of <span class=\"math inline\">\\(\\omega_0\\)</span> and <span class=\"math inline\">\\(-\\omega_0\\)</span>, and also complex amplitudes of <span class=\"math inline\">\\(\\frac{1}{2}Ae^{j\\phi}\\)</span> and <span class=\"math inline\">\\(-\\frac{1}{2}Ae^{j\\phi}\\)</span>, respectively. <span class=\"math display\">\\[x(t) = A\\cos(\\omega_0t+\\phi) = \\frac{1}{2}\\bar{x}(t) + \\frac{1}{2}\\bar{x}^*(t) = \\Re{\\{\\bar{x}(t)\\}}\\]</span></p></li>\n<li>Phasor Addition (additions of sinusoids with the same frequency but different amplitudes and phases)\n<ul>\n<li>Phasor addition rule: <em>The summation of sinusoids with the same frequency is a sinusoid with the identical frequency with the amplitude and phase of a certain phasor calculated by the summation of the phasors of each sinusoid.</em></li>\n<li>Summation of phasors is also a phasor: <span class=\"math display\">\\[\\begin{equation}\n  \\sum_{k=1}^N A_ke^{j\\phi_k} = Ae^{j\\phi}\n  \\end{equation} \\label{phasor_sum}\\]</span></li>\n<li>Finally, lead us to: <span class=\"math display\">\\[\\sum_{k=1}^N A_k\\cos(\\omega_0t + \\phi_k) = A\\cos(\\omega_0t + \\phi)\\]</span> which could be proved either by\n<ul>\n<li>trigonometric identities, or</li>\n<li>summation of phasors following the steps:\n<ol type=\"1\">\n<li>Get the phasors <span class=\"math inline\">\\(X_k = A_ke^{j\\phi_k}\\)</span> of each individual cosine signals,</li>\n<li>Add phasors using Eq. <span class=\"math inline\">\\(\\eqref{phasor_sum}\\)</span>, employing polar-to-Cartesian-to-polar conversion,</li>\n<li>Multiply the resulting phasor <span class=\"math inline\">\\(X=Ae^{j\\phi}\\)</span> with the rotating function <span class=\"math inline\">\\(e^{j\\omega_0t}\\)</span> and get <span class=\"math inline\">\\(\\bar{x}(t)\\)</span>,</li>\n<li>Take the real part and get <span class=\"math inline\">\\(x(t) = \\bar{x}(t)\\)</span>.</li>\n</ol></li>\n</ul></li>\n</ul></li>\n</ul>\n<h3 id=\"review-of-sine-and-cosine-functions\">Review of sine and cosine functions</h3>\n<h4 id=\"properties\">Properties</h4>\n<ul>\n<li>Equivalence: <span class=\"math inline\">\\(\\sin\\theta = \\cos(\\theta-\\pi/2)\\)</span> or <span class=\"math inline\">\\(\\cos\\theta=\\sin(\\theta+\\pi/2)\\)</span>; <strong>the sine function is just a cosine function that is shifted to the right by <span class=\"math inline\">\\(\\pi/2\\)</span></strong>,</li>\n<li>Periodicity: <span class=\"math inline\">\\(\\cos(\\theta + 2\\pi k) = \\cos\\theta\\)</span>, where <span class=\"math inline\">\\(k\\in \\mathbb{Z}\\)</span>,</li>\n<li>Evenness of cosine: <span class=\"math inline\">\\(\\cos(-\\theta) = \\cos\\theta\\)</span>,</li>\n<li>Oddness of sine: <span class=\"math inline\">\\(\\sin(-\\theta) = -\\sin\\theta\\)</span>,</li>\n<li>Zeros of sine: <span class=\"math inline\">\\(\\sin(\\pi k) = 0\\)</span>, for <span class=\"math inline\">\\(k\\in\\mathbb{Z}\\)</span>,</li>\n<li>Ones of sine: <span class=\"math inline\">\\(\\cos(2\\pi k) = 1\\)</span>, for <span class=\"math inline\">\\(k\\in\\mathbb{Z}\\)</span>,</li>\n<li>Minus ones of cosine: <span class=\"math inline\">\\(\\cos[2\\pi(k+\\dfrac{1}{2})]=-1\\)</span>, for <span class=\"math inline\">\\(k\\in\\mathbb{Z}\\)</span>,x</li>\n<li>Derivatives: <span class=\"math inline\">\\(\\dfrac{d \\sin\\theta}{d \\theta} = \\cos\\theta\\)</span> and <span class=\"math inline\">\\(\\dfrac{d \\cos\\theta}{d \\theta} = -\\sin\\theta\\)</span>.</li>\n</ul>\n<h4 id=\"trigonometric-identities\">Trigonometric identities</h4>\n<ul>\n<li><span class=\"math inline\">\\(\\sin^2\\theta + \\cos^2\\theta = 1\\)</span>,</li>\n<li><span class=\"math inline\">\\(\\cos^2\\theta = \\cos^2\\theta - \\sin^2\\theta\\)</span>,</li>\n<li><span class=\"math inline\">\\(\\sin^2\\theta = 2\\sin\\theta\\cos\\theta\\)</span>,</li>\n<li><span class=\"math inline\">\\(\\sin(\\alpha\\pm\\beta) = \\sin\\alpha\\cos\\beta \\pm \\cos\\alpha\\sin\\beta\\)</span>,</li>\n<li><span class=\"math inline\">\\(\\cos(\\alpha\\pm\\beta) = \\cos\\alpha\\cos\\beta \\mp \\sin\\alpha\\sin\\beta\\)</span>,</li>\n<li><span class=\"math inline\">\\(\\cos^2\\theta = \\frac{1}{2}(1+\\cos 2\\theta)\\)</span>,</li>\n<li><span class=\"math inline\">\\(\\sin^2\\theta = \\frac{1}{2}(1-\\cos 2\\theta)\\)</span>.</li>\n</ul>"},{"title":"Adding a Shared Google Calendar to the Calendar App on the Mac","date":"2018-12-30T15:57:19.000Z","_content":"\nIn addition to your own google calendar, which is easy to be added to your Mac Calendar, there might also be some Google calendars shared with you. It would be convenient if they could also be added to your Mac Calendar and here is how.\n\n<!--more-->\n\nThere are two methods:\n\n### Method 1:\n\n1. When you open the link of the calendar shared with you. You could click the plus sign at the right corner to add it into your own google calendar. ![](/images/20181229/google_calendar_add.png)\n2. Go to https://www.google.com/calendar/syncselect and check the calendar shared with you.\n3. Go to the Mac Calendar and you will find it in your calendar list just under your google account. Check it for display.\n\n### Method 2:\n\n1. As step 1 in Method 1.\n2. Go to the Google Calendar and the shared calendar appears in the \"Other calendars\", go to the setting of the shared calendar.\n3. Scroll down and find the \"Integrate calendar->public address in iCal format\" and copy the address.\n4. Open the Mac Calendar and go to \"Files -> New Calendar Subscription\" and paste the address into the \"Calendar URL\".\n\nPS: Also answered in {% link StackExchange https://apple.stackexchange.com/a/347044/222234}\n\n\n\n\n","source":"_posts/GoogleCalendarOnMac.md","raw":"---\ntitle: Adding a Shared Google Calendar to the Calendar App on the Mac\ndate: 2018-12-30 10:57:19\ntags: [MacOS]\ncategories: daily\n---\n\nIn addition to your own google calendar, which is easy to be added to your Mac Calendar, there might also be some Google calendars shared with you. It would be convenient if they could also be added to your Mac Calendar and here is how.\n\n<!--more-->\n\nThere are two methods:\n\n### Method 1:\n\n1. When you open the link of the calendar shared with you. You could click the plus sign at the right corner to add it into your own google calendar. ![](/images/20181229/google_calendar_add.png)\n2. Go to https://www.google.com/calendar/syncselect and check the calendar shared with you.\n3. Go to the Mac Calendar and you will find it in your calendar list just under your google account. Check it for display.\n\n### Method 2:\n\n1. As step 1 in Method 1.\n2. Go to the Google Calendar and the shared calendar appears in the \"Other calendars\", go to the setting of the shared calendar.\n3. Scroll down and find the \"Integrate calendar->public address in iCal format\" and copy the address.\n4. Open the Mac Calendar and go to \"Files -> New Calendar Subscription\" and paste the address into the \"Calendar URL\".\n\nPS: Also answered in {% link StackExchange https://apple.stackexchange.com/a/347044/222234}\n\n\n\n\n","slug":"GoogleCalendarOnMac","published":1,"updated":"2018-12-30T17:53:48.000Z","_id":"cjqb6na62000b7pphhlf2zfnn","comments":1,"layout":"post","photos":[],"link":"","content":"<p>In addition to your own google calendar, which is easy to be added to your Mac Calendar, there might also be some Google calendars shared with you. It would be convenient if they could also be added to your Mac Calendar and here is how.</p>\n<a id=\"more\"></a>\n<p>There are two methods:</p>\n<h3 id=\"method-1\">Method 1:</h3>\n<ol type=\"1\">\n<li>When you open the link of the calendar shared with you. You could click the plus sign at the right corner to add it into your own google calendar. <img src=\"/images/20181229/google_calendar_add.png\"></li>\n<li>Go to https://www.google.com/calendar/syncselect and check the calendar shared with you.</li>\n<li>Go to the Mac Calendar and you will find it in your calendar list just under your google account. Check it for display.</li>\n</ol>\n<h3 id=\"method-2\">Method 2:</h3>\n<ol type=\"1\">\n<li>As step 1 in Method 1.</li>\n<li>Go to the Google Calendar and the shared calendar appears in the &quot;Other calendars&quot;, go to the setting of the shared calendar.</li>\n<li>Scroll down and find the &quot;Integrate calendar-&gt;public address in iCal format&quot; and copy the address.</li>\n<li>Open the Mac Calendar and go to &quot;Files -&gt; New Calendar Subscription&quot; and paste the address into the &quot;Calendar URL&quot;.</li>\n</ol>\n<p>PS: Also answered in <a href=\"https://apple.stackexchange.com/a/347044/222234}</p>\" target=\"_blank\" rel=\"noopener\">StackExchange</a></p>","site":{"data":{}},"excerpt":"<p>In addition to your own google calendar, which is easy to be added to your Mac Calendar, there might also be some Google calendars shared with you. It would be convenient if they could also be added to your Mac Calendar and here is how.</p>","more":"<p>There are two methods:</p>\n<h3 id=\"method-1\">Method 1:</h3>\n<ol type=\"1\">\n<li>When you open the link of the calendar shared with you. You could click the plus sign at the right corner to add it into your own google calendar. <img src=\"/images/20181229/google_calendar_add.png\"></li>\n<li>Go to https://www.google.com/calendar/syncselect and check the calendar shared with you.</li>\n<li>Go to the Mac Calendar and you will find it in your calendar list just under your google account. Check it for display.</li>\n</ol>\n<h3 id=\"method-2\">Method 2:</h3>\n<ol type=\"1\">\n<li>As step 1 in Method 1.</li>\n<li>Go to the Google Calendar and the shared calendar appears in the &quot;Other calendars&quot;, go to the setting of the shared calendar.</li>\n<li>Scroll down and find the &quot;Integrate calendar-&gt;public address in iCal format&quot; and copy the address.</li>\n<li>Open the Mac Calendar and go to &quot;Files -&gt; New Calendar Subscription&quot; and paste the address into the &quot;Calendar URL&quot;.</li>\n</ol>\n<p>PS: Also answered in <a href=\"https://apple.stackexchange.com/a/347044/222234}</p>\" target=\"_blank\" rel=\"noopener\">StackExchange</a></p>"},{"title":"Emacs Tutorial (cheat sheet version)","date":"2017-11-22T14:21:58.000Z","_content":"This is a cheat sheet of Emacs following the official tutorial.\n<!--more-->\n- C-x C-c\tExit\n- C-x C-s\tSave \n\n- C-v\t\tView next screen\n- M-v\t\tView previous screen\n- C-l\t\tRedisplay screen (current line to center, top, bottom)\n\n- C-p\t\tMove to previous line\n- C-n\t\tMove to next line\n- C-f\t\tMove forward a character\n- C-b\t\tMove backward a character\n- M-f\t\tMove forward a word\n- M-b\t\tMove backward a word\n- C-a\t\tMove to beginning of line\n- C-e\t\tMove to end of line\n- M-a\t\tMove back to beginning of sentence\n- M-e\t\tMove forward to end of sentence\n- M-<\t\tMove to beginning of buffer\n- M->\t\tMove to end of buffer\n","source":"_posts/Emacs-Tutorial-short-version.md","raw":"---\ntitle: Emacs Tutorial (cheat sheet version)\ndate: 2017-11-22 09:21:58\ntags: Emacs\ncategories: Emacs\n---\nThis is a cheat sheet of Emacs following the official tutorial.\n<!--more-->\n- C-x C-c\tExit\n- C-x C-s\tSave \n\n- C-v\t\tView next screen\n- M-v\t\tView previous screen\n- C-l\t\tRedisplay screen (current line to center, top, bottom)\n\n- C-p\t\tMove to previous line\n- C-n\t\tMove to next line\n- C-f\t\tMove forward a character\n- C-b\t\tMove backward a character\n- M-f\t\tMove forward a word\n- M-b\t\tMove backward a word\n- C-a\t\tMove to beginning of line\n- C-e\t\tMove to end of line\n- M-a\t\tMove back to beginning of sentence\n- M-e\t\tMove forward to end of sentence\n- M-<\t\tMove to beginning of buffer\n- M->\t\tMove to end of buffer\n","slug":"Emacs-Tutorial-short-version","published":1,"updated":"2018-06-22T21:54:45.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjqb6na63000c7pphyc6r5y9h","content":"<p>This is a cheat sheet of Emacs following the official tutorial. <a id=\"more\"></a> - C-x C-c Exit - C-x C-s Save</p>\n<ul>\n<li>C-v View next screen</li>\n<li>M-v View previous screen</li>\n<li><p>C-l Redisplay screen (current line to center, top, bottom)</p></li>\n<li>C-p Move to previous line</li>\n<li>C-n Move to next line</li>\n<li>C-f Move forward a character</li>\n<li>C-b Move backward a character</li>\n<li>M-f Move forward a word</li>\n<li>M-b Move backward a word</li>\n<li>C-a Move to beginning of line</li>\n<li>C-e Move to end of line</li>\n<li>M-a Move back to beginning of sentence</li>\n<li>M-e Move forward to end of sentence</li>\n<li>M-&lt; Move to beginning of buffer</li>\n<li><p>M-&gt; Move to end of buffer</p></li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>This is a cheat sheet of Emacs following the official tutorial.","more":"- C-x C-c Exit - C-x C-s Save</p>\n<ul>\n<li>C-v View next screen</li>\n<li>M-v View previous screen</li>\n<li><p>C-l Redisplay screen (current line to center, top, bottom)</p></li>\n<li>C-p Move to previous line</li>\n<li>C-n Move to next line</li>\n<li>C-f Move forward a character</li>\n<li>C-b Move backward a character</li>\n<li>M-f Move forward a word</li>\n<li>M-b Move backward a word</li>\n<li>C-a Move to beginning of line</li>\n<li>C-e Move to end of line</li>\n<li>M-a Move back to beginning of sentence</li>\n<li>M-e Move forward to end of sentence</li>\n<li>M-&lt; Move to beginning of buffer</li>\n<li><p>M-&gt; Move to end of buffer</p></li>\n</ul>"},{"title":"LBM-based Solver","date":"2018-09-17T21:04:05.000Z","toc":true,"_content":"\nThis is simply a list of different Lattice Boltzmann Method-based solvers.\n\n<!--more-->\n\n\n## [Palabos](http://palabos.org)\n- Short for \"PArallel LAttice BOltzmann Solver\",\n- “Palabos” = “παλαβός” in Greek, meaning “Crazy”\n- Developed by [FlowKit Ltd. technology company](https://www.flowkit.com/)\n- Supported by [Scientific and Parallel Computing Group (SPC)](http://spc.unige.ch/doku.php) at the University of Geneva.\n- A fork from OpenLB\n- Written in C++ with no external dependencies (only Posix and MPI). It also provides additional programmer interfaces for the Python and Java.\n\n## [OpenLB](http://www.openlb.net/)\n- Developed by the [Lattice Boltzmann Research Group](http://www.lbrg.kit.edu/) at Karlsruhe Institute of Technology, which is led by Dr. Mathias J. Krause.\n- The [author list](http://www.openlb.net/authors)\n\n## [XFlow CFD](https://www.3ds.com/products-services/simulia/products/xflow/)\n- A SIMULIA product.\n- Using MRT-CM and Wall-Modeled Large Eddy Simulation (WMLES) for simulation.\n- The [co-simulation with Abaqus](https://www.youtube.com/watch?v=dN92l2gp6lc) sounds cool.\n\n## [PowerFlow](https://exa.com/en/product/simulation-tools/powerflow-cfd-simulation)\n- A product of [Exa Corporation](https://exa.com/en) which is acquired by Dassault Systèmes on November 17 ([news here](https://exa.com/en/message-our-customers)) and becomes part of SIMULIA, a Dassault Systèmes brand.\n- [Demo video and literature](https://exa.com/en/company/cfd-simulation-resources) could be found in the link.\n- [Technology](https://exa.com/en/company/exa-lattice-boltzmann-technology) including very large eddy simulation (VLES).\n\n## [ProLB](http://www.prolb-cfd.com/)\n- A recently (maybe) built solver, one of whose creators is Prof. Pierre Sagaut.\n- Especially for aeroacoustic and aerodynamic simulation of weakly compressible flow.\n- The [technology](http://www.prolb-cfd.com/technology/) includes double relaxation time (DRT) for collision, wall-modeled large eddy simulation (WMLES) for turbulence modeling, immersed boundary model (IBM) for boundary conditions.\n\nPS: \n- [Dassault Systèmes](https://www.3ds.com/) , a subsidiary of Dassault Group, is a CAE/PLM software developing company whose subsidiaries including SIMULIA and SolidWorks. [SIMULIA](https://www.3ds.com/products-services/simulia/) products include Abaqus, XFLOW CFD, and now also PowerFlow.\n- Just forget me if anything description is wrong.\n","source":"_posts/LBM-based-Solver.md","raw":"---\ntitle: LBM-based Solver\ndate: 2018-09-17 17:04:05\ntags: [LBM, CFD, Palabos, OpenLB, XFlow, PowerFlow, ProLB]\ncategories: Palabos\ntoc: true\n---\n\nThis is simply a list of different Lattice Boltzmann Method-based solvers.\n\n<!--more-->\n\n\n## [Palabos](http://palabos.org)\n- Short for \"PArallel LAttice BOltzmann Solver\",\n- “Palabos” = “παλαβός” in Greek, meaning “Crazy”\n- Developed by [FlowKit Ltd. technology company](https://www.flowkit.com/)\n- Supported by [Scientific and Parallel Computing Group (SPC)](http://spc.unige.ch/doku.php) at the University of Geneva.\n- A fork from OpenLB\n- Written in C++ with no external dependencies (only Posix and MPI). It also provides additional programmer interfaces for the Python and Java.\n\n## [OpenLB](http://www.openlb.net/)\n- Developed by the [Lattice Boltzmann Research Group](http://www.lbrg.kit.edu/) at Karlsruhe Institute of Technology, which is led by Dr. Mathias J. Krause.\n- The [author list](http://www.openlb.net/authors)\n\n## [XFlow CFD](https://www.3ds.com/products-services/simulia/products/xflow/)\n- A SIMULIA product.\n- Using MRT-CM and Wall-Modeled Large Eddy Simulation (WMLES) for simulation.\n- The [co-simulation with Abaqus](https://www.youtube.com/watch?v=dN92l2gp6lc) sounds cool.\n\n## [PowerFlow](https://exa.com/en/product/simulation-tools/powerflow-cfd-simulation)\n- A product of [Exa Corporation](https://exa.com/en) which is acquired by Dassault Systèmes on November 17 ([news here](https://exa.com/en/message-our-customers)) and becomes part of SIMULIA, a Dassault Systèmes brand.\n- [Demo video and literature](https://exa.com/en/company/cfd-simulation-resources) could be found in the link.\n- [Technology](https://exa.com/en/company/exa-lattice-boltzmann-technology) including very large eddy simulation (VLES).\n\n## [ProLB](http://www.prolb-cfd.com/)\n- A recently (maybe) built solver, one of whose creators is Prof. Pierre Sagaut.\n- Especially for aeroacoustic and aerodynamic simulation of weakly compressible flow.\n- The [technology](http://www.prolb-cfd.com/technology/) includes double relaxation time (DRT) for collision, wall-modeled large eddy simulation (WMLES) for turbulence modeling, immersed boundary model (IBM) for boundary conditions.\n\nPS: \n- [Dassault Systèmes](https://www.3ds.com/) , a subsidiary of Dassault Group, is a CAE/PLM software developing company whose subsidiaries including SIMULIA and SolidWorks. [SIMULIA](https://www.3ds.com/products-services/simulia/) products include Abaqus, XFLOW CFD, and now also PowerFlow.\n- Just forget me if anything description is wrong.\n","slug":"LBM-based-Solver","published":1,"updated":"2018-09-17T22:11:41.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjqb6na64000g7pph7rzxhdit","content":"<p>This is simply a list of different Lattice Boltzmann Method-based solvers.</p>\n<a id=\"more\"></a>\n<h2 id=\"palabos\"><a href=\"http://palabos.org\" target=\"_blank\" rel=\"noopener\">Palabos</a></h2>\n<ul>\n<li>Short for &quot;PArallel LAttice BOltzmann Solver&quot;,</li>\n<li>“Palabos” = “παλαβός” in Greek, meaning “Crazy”</li>\n<li>Developed by <a href=\"https://www.flowkit.com/\" target=\"_blank\" rel=\"noopener\">FlowKit Ltd. technology company</a></li>\n<li>Supported by <a href=\"http://spc.unige.ch/doku.php\" target=\"_blank\" rel=\"noopener\">Scientific and Parallel Computing Group (SPC)</a> at the University of Geneva.</li>\n<li>A fork from OpenLB</li>\n<li>Written in C++ with no external dependencies (only Posix and MPI). It also provides additional programmer interfaces for the Python and Java.</li>\n</ul>\n<h2 id=\"openlb\"><a href=\"http://www.openlb.net/\" target=\"_blank\" rel=\"noopener\">OpenLB</a></h2>\n<ul>\n<li>Developed by the <a href=\"http://www.lbrg.kit.edu/\" target=\"_blank\" rel=\"noopener\">Lattice Boltzmann Research Group</a> at Karlsruhe Institute of Technology, which is led by Dr. Mathias J. Krause.</li>\n<li>The <a href=\"http://www.openlb.net/authors\" target=\"_blank\" rel=\"noopener\">author list</a></li>\n</ul>\n<h2 id=\"xflow-cfd\"><a href=\"https://www.3ds.com/products-services/simulia/products/xflow/\" target=\"_blank\" rel=\"noopener\">XFlow CFD</a></h2>\n<ul>\n<li>A SIMULIA product.</li>\n<li>Using MRT-CM and Wall-Modeled Large Eddy Simulation (WMLES) for simulation.</li>\n<li>The <a href=\"https://www.youtube.com/watch?v=dN92l2gp6lc\" target=\"_blank\" rel=\"noopener\">co-simulation with Abaqus</a> sounds cool.</li>\n</ul>\n<h2 id=\"powerflow\"><a href=\"https://exa.com/en/product/simulation-tools/powerflow-cfd-simulation\" target=\"_blank\" rel=\"noopener\">PowerFlow</a></h2>\n<ul>\n<li>A product of <a href=\"https://exa.com/en\" target=\"_blank\" rel=\"noopener\">Exa Corporation</a> which is acquired by Dassault Systèmes on November 17 (<a href=\"https://exa.com/en/message-our-customers\" target=\"_blank\" rel=\"noopener\">news here</a>) and becomes part of SIMULIA, a Dassault Systèmes brand.</li>\n<li><a href=\"https://exa.com/en/company/cfd-simulation-resources\" target=\"_blank\" rel=\"noopener\">Demo video and literature</a> could be found in the link.</li>\n<li><a href=\"https://exa.com/en/company/exa-lattice-boltzmann-technology\" target=\"_blank\" rel=\"noopener\">Technology</a> including very large eddy simulation (VLES).</li>\n</ul>\n<h2 id=\"prolb\"><a href=\"http://www.prolb-cfd.com/\" target=\"_blank\" rel=\"noopener\">ProLB</a></h2>\n<ul>\n<li>A recently (maybe) built solver, one of whose creators is Prof. Pierre Sagaut.</li>\n<li>Especially for aeroacoustic and aerodynamic simulation of weakly compressible flow.</li>\n<li>The <a href=\"http://www.prolb-cfd.com/technology/\" target=\"_blank\" rel=\"noopener\">technology</a> includes double relaxation time (DRT) for collision, wall-modeled large eddy simulation (WMLES) for turbulence modeling, immersed boundary model (IBM) for boundary conditions.</li>\n</ul>\n<p>PS: - <a href=\"https://www.3ds.com/\" target=\"_blank\" rel=\"noopener\">Dassault Systèmes</a> , a subsidiary of Dassault Group, is a CAE/PLM software developing company whose subsidiaries including SIMULIA and SolidWorks. <a href=\"https://www.3ds.com/products-services/simulia/\" target=\"_blank\" rel=\"noopener\">SIMULIA</a> products include Abaqus, XFLOW CFD, and now also PowerFlow. - Just forget me if anything description is wrong.</p>\n","site":{"data":{}},"excerpt":"<p>This is simply a list of different Lattice Boltzmann Method-based solvers.</p>","more":"<h2 id=\"palabos\"><a href=\"http://palabos.org\" target=\"_blank\" rel=\"noopener\">Palabos</a></h2>\n<ul>\n<li>Short for &quot;PArallel LAttice BOltzmann Solver&quot;,</li>\n<li>“Palabos” = “παλαβός” in Greek, meaning “Crazy”</li>\n<li>Developed by <a href=\"https://www.flowkit.com/\" target=\"_blank\" rel=\"noopener\">FlowKit Ltd. technology company</a></li>\n<li>Supported by <a href=\"http://spc.unige.ch/doku.php\" target=\"_blank\" rel=\"noopener\">Scientific and Parallel Computing Group (SPC)</a> at the University of Geneva.</li>\n<li>A fork from OpenLB</li>\n<li>Written in C++ with no external dependencies (only Posix and MPI). It also provides additional programmer interfaces for the Python and Java.</li>\n</ul>\n<h2 id=\"openlb\"><a href=\"http://www.openlb.net/\" target=\"_blank\" rel=\"noopener\">OpenLB</a></h2>\n<ul>\n<li>Developed by the <a href=\"http://www.lbrg.kit.edu/\" target=\"_blank\" rel=\"noopener\">Lattice Boltzmann Research Group</a> at Karlsruhe Institute of Technology, which is led by Dr. Mathias J. Krause.</li>\n<li>The <a href=\"http://www.openlb.net/authors\" target=\"_blank\" rel=\"noopener\">author list</a></li>\n</ul>\n<h2 id=\"xflow-cfd\"><a href=\"https://www.3ds.com/products-services/simulia/products/xflow/\" target=\"_blank\" rel=\"noopener\">XFlow CFD</a></h2>\n<ul>\n<li>A SIMULIA product.</li>\n<li>Using MRT-CM and Wall-Modeled Large Eddy Simulation (WMLES) for simulation.</li>\n<li>The <a href=\"https://www.youtube.com/watch?v=dN92l2gp6lc\" target=\"_blank\" rel=\"noopener\">co-simulation with Abaqus</a> sounds cool.</li>\n</ul>\n<h2 id=\"powerflow\"><a href=\"https://exa.com/en/product/simulation-tools/powerflow-cfd-simulation\" target=\"_blank\" rel=\"noopener\">PowerFlow</a></h2>\n<ul>\n<li>A product of <a href=\"https://exa.com/en\" target=\"_blank\" rel=\"noopener\">Exa Corporation</a> which is acquired by Dassault Systèmes on November 17 (<a href=\"https://exa.com/en/message-our-customers\" target=\"_blank\" rel=\"noopener\">news here</a>) and becomes part of SIMULIA, a Dassault Systèmes brand.</li>\n<li><a href=\"https://exa.com/en/company/cfd-simulation-resources\" target=\"_blank\" rel=\"noopener\">Demo video and literature</a> could be found in the link.</li>\n<li><a href=\"https://exa.com/en/company/exa-lattice-boltzmann-technology\" target=\"_blank\" rel=\"noopener\">Technology</a> including very large eddy simulation (VLES).</li>\n</ul>\n<h2 id=\"prolb\"><a href=\"http://www.prolb-cfd.com/\" target=\"_blank\" rel=\"noopener\">ProLB</a></h2>\n<ul>\n<li>A recently (maybe) built solver, one of whose creators is Prof. Pierre Sagaut.</li>\n<li>Especially for aeroacoustic and aerodynamic simulation of weakly compressible flow.</li>\n<li>The <a href=\"http://www.prolb-cfd.com/technology/\" target=\"_blank\" rel=\"noopener\">technology</a> includes double relaxation time (DRT) for collision, wall-modeled large eddy simulation (WMLES) for turbulence modeling, immersed boundary model (IBM) for boundary conditions.</li>\n</ul>\n<p>PS: - <a href=\"https://www.3ds.com/\" target=\"_blank\" rel=\"noopener\">Dassault Systèmes</a> , a subsidiary of Dassault Group, is a CAE/PLM software developing company whose subsidiaries including SIMULIA and SolidWorks. <a href=\"https://www.3ds.com/products-services/simulia/\" target=\"_blank\" rel=\"noopener\">SIMULIA</a> products include Abaqus, XFLOW CFD, and now also PowerFlow. - Just forget me if anything description is wrong.</p>"},{"title":"On the Art of Singing II-28 'The Two Poles of Bel Canto'","date":"2018-06-29T11:38:56.000Z","_content":"\nTwo factors to form the basis of all good technical singing are *sostenuto* and *coloratura*, literally meaning \"sustained\" and \"coloring\" in English. \n\nIn the form of the operatic *[scena](https://en.wikipedia.org/wiki/Concert_aria)*, *cavatina* and *cabaletta* exhibite, in which the singer was expected to show the two chief technical facets of skillful singing: *legato* and *agility*.\n\nThese two vocal techniques are Siamese twins. One completes the other cannot exist without the other.\n\nExamples of *scene* or \"double arias\": Handel's *Piangerò*. Mozart's *Non mi dir*, Bellini's *Non mi credea*, and Verdi's *Ah! fors'è lui!*\n\n\n\n|                      | Sustained     | Coloring                 |\n| :---:                | :-----------: | :------------:           |\n| **Techiniques**      | Sostenuto     | Coloratura               |\n| **Scena Sections**   | Cavatina      | cabaletta                |\n| **Technical Facets** | legato        | agility                  |\n| **Adjectives**       | verismo       | pyrotechnical melismatic |\n|                      |               |                          |\n    \n","source":"_posts/On-the-Art-of-Singing-28.md","raw":"---\ntitle: On the Art of Singing II-28 'The Two Poles of Bel Canto'\ndate: 2018-06-29 07:38:56\ntags: [On the Art of Singing, Voice]\ncategories: Voice\n---\n\nTwo factors to form the basis of all good technical singing are *sostenuto* and *coloratura*, literally meaning \"sustained\" and \"coloring\" in English. \n\nIn the form of the operatic *[scena](https://en.wikipedia.org/wiki/Concert_aria)*, *cavatina* and *cabaletta* exhibite, in which the singer was expected to show the two chief technical facets of skillful singing: *legato* and *agility*.\n\nThese two vocal techniques are Siamese twins. One completes the other cannot exist without the other.\n\nExamples of *scene* or \"double arias\": Handel's *Piangerò*. Mozart's *Non mi dir*, Bellini's *Non mi credea*, and Verdi's *Ah! fors'è lui!*\n\n\n\n|                      | Sustained     | Coloring                 |\n| :---:                | :-----------: | :------------:           |\n| **Techiniques**      | Sostenuto     | Coloratura               |\n| **Scena Sections**   | Cavatina      | cabaletta                |\n| **Technical Facets** | legato        | agility                  |\n| **Adjectives**       | verismo       | pyrotechnical melismatic |\n|                      |               |                          |\n    \n","slug":"On-the-Art-of-Singing-28","published":1,"updated":"2018-07-02T18:35:28.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjqb6na66000i7pphras8e20e","content":"<p>Two factors to form the basis of all good technical singing are <em>sostenuto</em> and <em>coloratura</em>, literally meaning &quot;sustained&quot; and &quot;coloring&quot; in English.</p>\n<p>In the form of the operatic <em><a href=\"https://en.wikipedia.org/wiki/Concert_aria\" target=\"_blank\" rel=\"noopener\">scena</a></em>, <em>cavatina</em> and <em>cabaletta</em> exhibite, in which the singer was expected to show the two chief technical facets of skillful singing: <em>legato</em> and <em>agility</em>.</p>\n<p>These two vocal techniques are Siamese twins. One completes the other cannot exist without the other.</p>\n<p>Examples of <em>scene</em> or &quot;double arias&quot;: Handel's <em>Piangerò</em>. Mozart's <em>Non mi dir</em>, Bellini's <em>Non mi credea</em>, and Verdi's <em>Ah! fors'è lui!</em></p>\n<table>\n<thead>\n<tr class=\"header\">\n<th style=\"text-align: center;\"></th>\n<th style=\"text-align: center;\">Sustained</th>\n<th style=\"text-align: center;\">Coloring</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td style=\"text-align: center;\"><strong>Techiniques</strong></td>\n<td style=\"text-align: center;\">Sostenuto</td>\n<td style=\"text-align: center;\">Coloratura</td>\n</tr>\n<tr class=\"even\">\n<td style=\"text-align: center;\"><strong>Scena Sections</strong></td>\n<td style=\"text-align: center;\">Cavatina</td>\n<td style=\"text-align: center;\">cabaletta</td>\n</tr>\n<tr class=\"odd\">\n<td style=\"text-align: center;\"><strong>Technical Facets</strong></td>\n<td style=\"text-align: center;\">legato</td>\n<td style=\"text-align: center;\">agility</td>\n</tr>\n<tr class=\"even\">\n<td style=\"text-align: center;\"><strong>Adjectives</strong></td>\n<td style=\"text-align: center;\">verismo</td>\n<td style=\"text-align: center;\">pyrotechnical melismatic</td>\n</tr>\n<tr class=\"odd\">\n<td style=\"text-align: center;\"></td>\n<td style=\"text-align: center;\"></td>\n<td style=\"text-align: center;\"></td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"excerpt":"","more":"<p>Two factors to form the basis of all good technical singing are <em>sostenuto</em> and <em>coloratura</em>, literally meaning &quot;sustained&quot; and &quot;coloring&quot; in English.</p>\n<p>In the form of the operatic <em><a href=\"https://en.wikipedia.org/wiki/Concert_aria\" target=\"_blank\" rel=\"noopener\">scena</a></em>, <em>cavatina</em> and <em>cabaletta</em> exhibite, in which the singer was expected to show the two chief technical facets of skillful singing: <em>legato</em> and <em>agility</em>.</p>\n<p>These two vocal techniques are Siamese twins. One completes the other cannot exist without the other.</p>\n<p>Examples of <em>scene</em> or &quot;double arias&quot;: Handel's <em>Piangerò</em>. Mozart's <em>Non mi dir</em>, Bellini's <em>Non mi credea</em>, and Verdi's <em>Ah! fors'è lui!</em></p>\n<table>\n<thead>\n<tr class=\"header\">\n<th style=\"text-align: center;\"></th>\n<th style=\"text-align: center;\">Sustained</th>\n<th style=\"text-align: center;\">Coloring</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td style=\"text-align: center;\"><strong>Techiniques</strong></td>\n<td style=\"text-align: center;\">Sostenuto</td>\n<td style=\"text-align: center;\">Coloratura</td>\n</tr>\n<tr class=\"even\">\n<td style=\"text-align: center;\"><strong>Scena Sections</strong></td>\n<td style=\"text-align: center;\">Cavatina</td>\n<td style=\"text-align: center;\">cabaletta</td>\n</tr>\n<tr class=\"odd\">\n<td style=\"text-align: center;\"><strong>Technical Facets</strong></td>\n<td style=\"text-align: center;\">legato</td>\n<td style=\"text-align: center;\">agility</td>\n</tr>\n<tr class=\"even\">\n<td style=\"text-align: center;\"><strong>Adjectives</strong></td>\n<td style=\"text-align: center;\">verismo</td>\n<td style=\"text-align: center;\">pyrotechnical melismatic</td>\n</tr>\n<tr class=\"odd\">\n<td style=\"text-align: center;\"></td>\n<td style=\"text-align: center;\"></td>\n<td style=\"text-align: center;\"></td>\n</tr>\n</tbody>\n</table>\n"},{"title":"On the Art of Singing I-19 'The Choral Conductor as Teacher of Vocal Technique'","date":"2018-07-03T23:38:01.000Z","_content":"\nAs a 10-year-chorister, this article resolves some of my confusions. Especially what is claimed at the very beginning, there is no difference nor conflict between the training of the solo voice and that of a chorister. Even though, the voice today in modern music conservatories are different from the one of Josquin, Palestrina, or Gesualdo.\n\nIn traditional choral literature, it is required to be \"blend\" at all *tessitura* and dynamic levels which might be problematic because of the unbalanced voices between the professionals and amateurs and the unique timbre characteristics of each vocal instrument. What might be worse is that trying to submerge the voice into the surrounding bland sound threats to the professionals' vocal health. In order to solve such problem, the choral conductor should pursue the balancing voices instead of the blend voices. \n\nThe choral conductor is responsible to teach the choristers how to become efficient singers. \"It is not necessary to be a professional singer in order to be a fine teacher of singing, but it is necessary that one achieve a good level of technical proficiency with one's own instrument.\" Three main areas of vocal technique should be developed including *breath management/appoggio* (onset, agility, and sostenuto exercises), *free laryngeal function* (vibrato) and *resonance balancing* (vowel definition exercises). \n\nHere below are some useful points:\n- At the cessation of each sound, the vocal folds and the breath should be replenished in a synergistic manner.\n- In all onset, agility, and sostenuto exercises, the abdominal wall, although flexible while articulating the laughter-like impulses, remains stable and neither pulls inward nor presses outward at the moment of onset.\n- Many tuning problems in choral ensembles are the consequence of the singers' inability to clearly differentiate vowels.\n- Dropping the jaw tends to narrow the pharynx.\n- Singers need to learn to \"track the vowel\" by changing the shapes of the vocal tract to the corresponding target vowel and the laryngeal configuration.\n- The particular vowel, the tessitura, and the intensity determine the degree of jaw opening (and also the form of all the articulators).\n- An even vibrato, the result of relaxant laryngeal function, is an inherent characteristic of freely produced vocal sound which should not be avoided in a choir. However, of course, a too wide and too slow \"wobble\" sound or a too narrow and too swift vibrato should be avoided.\n- Musical accuracy is the major priority for each choral director.\n","source":"_posts/On-the-Art-of-Singing-19.md","raw":"---\ntitle: On the Art of Singing I-19 'The Choral Conductor as Teacher of Vocal Technique'\ndate: 2018-07-03 19:38:01\ntags: [On the Art of Singing, Voice]\ncategories: Voice\n---\n\nAs a 10-year-chorister, this article resolves some of my confusions. Especially what is claimed at the very beginning, there is no difference nor conflict between the training of the solo voice and that of a chorister. Even though, the voice today in modern music conservatories are different from the one of Josquin, Palestrina, or Gesualdo.\n\nIn traditional choral literature, it is required to be \"blend\" at all *tessitura* and dynamic levels which might be problematic because of the unbalanced voices between the professionals and amateurs and the unique timbre characteristics of each vocal instrument. What might be worse is that trying to submerge the voice into the surrounding bland sound threats to the professionals' vocal health. In order to solve such problem, the choral conductor should pursue the balancing voices instead of the blend voices. \n\nThe choral conductor is responsible to teach the choristers how to become efficient singers. \"It is not necessary to be a professional singer in order to be a fine teacher of singing, but it is necessary that one achieve a good level of technical proficiency with one's own instrument.\" Three main areas of vocal technique should be developed including *breath management/appoggio* (onset, agility, and sostenuto exercises), *free laryngeal function* (vibrato) and *resonance balancing* (vowel definition exercises). \n\nHere below are some useful points:\n- At the cessation of each sound, the vocal folds and the breath should be replenished in a synergistic manner.\n- In all onset, agility, and sostenuto exercises, the abdominal wall, although flexible while articulating the laughter-like impulses, remains stable and neither pulls inward nor presses outward at the moment of onset.\n- Many tuning problems in choral ensembles are the consequence of the singers' inability to clearly differentiate vowels.\n- Dropping the jaw tends to narrow the pharynx.\n- Singers need to learn to \"track the vowel\" by changing the shapes of the vocal tract to the corresponding target vowel and the laryngeal configuration.\n- The particular vowel, the tessitura, and the intensity determine the degree of jaw opening (and also the form of all the articulators).\n- An even vibrato, the result of relaxant laryngeal function, is an inherent characteristic of freely produced vocal sound which should not be avoided in a choir. However, of course, a too wide and too slow \"wobble\" sound or a too narrow and too swift vibrato should be avoided.\n- Musical accuracy is the major priority for each choral director.\n","slug":"On-the-Art-of-Singing-19","published":1,"updated":"2018-07-04T03:19:19.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjqb6na68000n7pphnuttxfqy","content":"<p>As a 10-year-chorister, this article resolves some of my confusions. Especially what is claimed at the very beginning, there is no difference nor conflict between the training of the solo voice and that of a chorister. Even though, the voice today in modern music conservatories are different from the one of Josquin, Palestrina, or Gesualdo.</p>\n<p>In traditional choral literature, it is required to be &quot;blend&quot; at all <em>tessitura</em> and dynamic levels which might be problematic because of the unbalanced voices between the professionals and amateurs and the unique timbre characteristics of each vocal instrument. What might be worse is that trying to submerge the voice into the surrounding bland sound threats to the professionals' vocal health. In order to solve such problem, the choral conductor should pursue the balancing voices instead of the blend voices.</p>\n<p>The choral conductor is responsible to teach the choristers how to become efficient singers. &quot;It is not necessary to be a professional singer in order to be a fine teacher of singing, but it is necessary that one achieve a good level of technical proficiency with one's own instrument.&quot; Three main areas of vocal technique should be developed including <em>breath management/appoggio</em> (onset, agility, and sostenuto exercises), <em>free laryngeal function</em> (vibrato) and <em>resonance balancing</em> (vowel definition exercises).</p>\n<p>Here below are some useful points: - At the cessation of each sound, the vocal folds and the breath should be replenished in a synergistic manner. - In all onset, agility, and sostenuto exercises, the abdominal wall, although flexible while articulating the laughter-like impulses, remains stable and neither pulls inward nor presses outward at the moment of onset. - Many tuning problems in choral ensembles are the consequence of the singers' inability to clearly differentiate vowels. - Dropping the jaw tends to narrow the pharynx. - Singers need to learn to &quot;track the vowel&quot; by changing the shapes of the vocal tract to the corresponding target vowel and the laryngeal configuration. - The particular vowel, the tessitura, and the intensity determine the degree of jaw opening (and also the form of all the articulators). - An even vibrato, the result of relaxant laryngeal function, is an inherent characteristic of freely produced vocal sound which should not be avoided in a choir. However, of course, a too wide and too slow &quot;wobble&quot; sound or a too narrow and too swift vibrato should be avoided. - Musical accuracy is the major priority for each choral director.</p>\n","site":{"data":{}},"excerpt":"","more":"<p>As a 10-year-chorister, this article resolves some of my confusions. Especially what is claimed at the very beginning, there is no difference nor conflict between the training of the solo voice and that of a chorister. Even though, the voice today in modern music conservatories are different from the one of Josquin, Palestrina, or Gesualdo.</p>\n<p>In traditional choral literature, it is required to be &quot;blend&quot; at all <em>tessitura</em> and dynamic levels which might be problematic because of the unbalanced voices between the professionals and amateurs and the unique timbre characteristics of each vocal instrument. What might be worse is that trying to submerge the voice into the surrounding bland sound threats to the professionals' vocal health. In order to solve such problem, the choral conductor should pursue the balancing voices instead of the blend voices.</p>\n<p>The choral conductor is responsible to teach the choristers how to become efficient singers. &quot;It is not necessary to be a professional singer in order to be a fine teacher of singing, but it is necessary that one achieve a good level of technical proficiency with one's own instrument.&quot; Three main areas of vocal technique should be developed including <em>breath management/appoggio</em> (onset, agility, and sostenuto exercises), <em>free laryngeal function</em> (vibrato) and <em>resonance balancing</em> (vowel definition exercises).</p>\n<p>Here below are some useful points: - At the cessation of each sound, the vocal folds and the breath should be replenished in a synergistic manner. - In all onset, agility, and sostenuto exercises, the abdominal wall, although flexible while articulating the laughter-like impulses, remains stable and neither pulls inward nor presses outward at the moment of onset. - Many tuning problems in choral ensembles are the consequence of the singers' inability to clearly differentiate vowels. - Dropping the jaw tends to narrow the pharynx. - Singers need to learn to &quot;track the vowel&quot; by changing the shapes of the vocal tract to the corresponding target vowel and the laryngeal configuration. - The particular vowel, the tessitura, and the intensity determine the degree of jaw opening (and also the form of all the articulators). - An even vibrato, the result of relaxant laryngeal function, is an inherent characteristic of freely produced vocal sound which should not be avoided in a choir. However, of course, a too wide and too slow &quot;wobble&quot; sound or a too narrow and too swift vibrato should be avoided. - Musical accuracy is the major priority for each choral director.</p>\n"},{"title":"On the Art of Singing I-6 'Diction and Vocal Technique'","date":"2018-07-01T21:13:30.000Z","_content":"\n\nThis article discusses the relationship between the diction and the vocal technique. \n\nThe singing tone is not the results of a universal, neutral timbre superimposed by a series of vowels. Instead, the tone, or acoustically the timbre, or physiologically the shape of the articulators, should be adjusted based on the difference of the vowel. The diction does not exist as a separate entity from the tone. The shapes of the resonator (vocal tract) keep matching that of the generator (larynx). \n\n> For the singing voice, as for the speaking voice, neither undistorted tone nor recognizable diction can be superimposed on a single predetermined acoustic posture. As spectrum analysis demonstrates, diction need not be inimical to tone, because it is part of the timbre balance.\n\nIn addition, as claimed by the Richard, \"the clean diction is not produced by exaggerated, heavy consonants, but by quickly occurring consonants (except for consonantal doubling in languages that require it) that do not impede the connected flow of well-defined vowels.\" This point deserves more notice as we are always required to exaggerate the consonant in order to make it audible to the audience. However, the key point for a clear and clean diction is the **flow connection** of the vowels. That means *the consonant should never disturb the continuous matching adjustment of the larynx and the vocal tract*.\n\n\nAs a conclusion, we should keep in mind that **vowel is the timbre**.\n","source":"_posts/On-the-Art-of-Singing-6.md","raw":"---\ntitle: On the Art of Singing I-6 'Diction and Vocal Technique'\ndate: 2018-07-01 17:13:30\ntags: [On the Art of Singing, Voice]\ncategories: Voice\n---\n\n\nThis article discusses the relationship between the diction and the vocal technique. \n\nThe singing tone is not the results of a universal, neutral timbre superimposed by a series of vowels. Instead, the tone, or acoustically the timbre, or physiologically the shape of the articulators, should be adjusted based on the difference of the vowel. The diction does not exist as a separate entity from the tone. The shapes of the resonator (vocal tract) keep matching that of the generator (larynx). \n\n> For the singing voice, as for the speaking voice, neither undistorted tone nor recognizable diction can be superimposed on a single predetermined acoustic posture. As spectrum analysis demonstrates, diction need not be inimical to tone, because it is part of the timbre balance.\n\nIn addition, as claimed by the Richard, \"the clean diction is not produced by exaggerated, heavy consonants, but by quickly occurring consonants (except for consonantal doubling in languages that require it) that do not impede the connected flow of well-defined vowels.\" This point deserves more notice as we are always required to exaggerate the consonant in order to make it audible to the audience. However, the key point for a clear and clean diction is the **flow connection** of the vowels. That means *the consonant should never disturb the continuous matching adjustment of the larynx and the vocal tract*.\n\n\nAs a conclusion, we should keep in mind that **vowel is the timbre**.\n","slug":"On-the-Art-of-Singing-6","published":1,"updated":"2018-07-02T02:52:01.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjqb6na69000p7pph1aijanh4","content":"<p>This article discusses the relationship between the diction and the vocal technique.</p>\n<p>The singing tone is not the results of a universal, neutral timbre superimposed by a series of vowels. Instead, the tone, or acoustically the timbre, or physiologically the shape of the articulators, should be adjusted based on the difference of the vowel. The diction does not exist as a separate entity from the tone. The shapes of the resonator (vocal tract) keep matching that of the generator (larynx).</p>\n<blockquote>\n<p>For the singing voice, as for the speaking voice, neither undistorted tone nor recognizable diction can be superimposed on a single predetermined acoustic posture. As spectrum analysis demonstrates, diction need not be inimical to tone, because it is part of the timbre balance.</p>\n</blockquote>\n<p>In addition, as claimed by the Richard, &quot;the clean diction is not produced by exaggerated, heavy consonants, but by quickly occurring consonants (except for consonantal doubling in languages that require it) that do not impede the connected flow of well-defined vowels.&quot; This point deserves more notice as we are always required to exaggerate the consonant in order to make it audible to the audience. However, the key point for a clear and clean diction is the <strong>flow connection</strong> of the vowels. That means <em>the consonant should never disturb the continuous matching adjustment of the larynx and the vocal tract</em>.</p>\n<p>As a conclusion, we should keep in mind that <strong>vowel is the timbre</strong>.</p>\n","site":{"data":{}},"excerpt":"","more":"<p>This article discusses the relationship between the diction and the vocal technique.</p>\n<p>The singing tone is not the results of a universal, neutral timbre superimposed by a series of vowels. Instead, the tone, or acoustically the timbre, or physiologically the shape of the articulators, should be adjusted based on the difference of the vowel. The diction does not exist as a separate entity from the tone. The shapes of the resonator (vocal tract) keep matching that of the generator (larynx).</p>\n<blockquote>\n<p>For the singing voice, as for the speaking voice, neither undistorted tone nor recognizable diction can be superimposed on a single predetermined acoustic posture. As spectrum analysis demonstrates, diction need not be inimical to tone, because it is part of the timbre balance.</p>\n</blockquote>\n<p>In addition, as claimed by the Richard, &quot;the clean diction is not produced by exaggerated, heavy consonants, but by quickly occurring consonants (except for consonantal doubling in languages that require it) that do not impede the connected flow of well-defined vowels.&quot; This point deserves more notice as we are always required to exaggerate the consonant in order to make it audible to the audience. However, the key point for a clear and clean diction is the <strong>flow connection</strong> of the vowels. That means <em>the consonant should never disturb the continuous matching adjustment of the larynx and the vocal tract</em>.</p>\n<p>As a conclusion, we should keep in mind that <strong>vowel is the timbre</strong>.</p>\n"},{"title":"On the Art of Singing I-1 Imagery and the Teaching of Singing","date":"2018-06-22T22:39:45.000Z","toc":true,"_content":"\nIt has been a while since I set up this blog and I haven't contributed any meaningful articles yet. Recently, I found a fascinating  book, *On the Art of Singing*, written by Dr. [Richard Miller](https://en.wikipedia.org/wiki/Richard_Miller_(singer)) who has also composed another famous book *The Structure of Singing*. The book is structured as a collection of different topics and deserved to read. So I decided to read one chapter and write the reading summary every few days. Hope this could be a good start of my blog.\n\n<!--more-->\n\nThe first chapter is called *Imagery and the Teaching of Singing*. The title attracts me very much because I was always interested in the relationship between the acoustic and physiologic explanation of singing and the traditional pedagogy. The imagery is quite an important part of teaching voice. I was kept being reminded by my voice teacher of many different imageries like \"the mask\", \"'head' voice\", \"'chest' voice\", \"singing forward\", \"a sip of water in the mouth\" and so on. Some of them are useful while the others are confusing. This chapter settles several of my confusions and here are the key points listed.\n\n### Imagery\n- Imagery, like the mask, the third eye, and winding wheels, is useful in teaching. \"However, it is mostly of value if it is associated with already established, repeatable functional freedom.\" \n - Comments: \"Functional freedom\" might refer to the comprehensive vocal techniques and funcions like the breath management, proper laryngeal and resonatory response, etc.\n- The superimposition of imagery must be done *after* the singer has learned to coordinate different functions so that an image may be useful in unifying those functions. If not, the student might be confused. So imagery should not be part of the first steps in teaching the technical coordination of the singing. \n- Every singer could have his own private images. But no matter what the imagery is, it should be **projected** to established functions including both psychological and physical orientation.\n- \"Many outstanding professional singers never use detailed physiologic or technical imagery. For them, imagery occurs only at the interpretative level. They maintain a *dual channel* of psychological and physical orientation in which the technical foundation that has already been established permits *imaginative textual and musical projection*. Imaging in singing should ideally be directed to the artistic realization of text, drama, and musical content, **not** to the control of physical aspects of vocal technique.\"\n - Comments: The same idea is expressed by Bartholomew in 1935 saying, \"When imagery becomes so vivid that it is transferred into the physical field and used to explain physiologic and acoustic phenomena, it becomes extremely dubious, unreliable and even false It is this misuse which is largely responsible for the bitter controversies over vocal methods, as well as for their often comical expressions.\" This is quite interesting because for me, as an amateur singer, most of the imageries I have experienced are physiologic or technical. My voice teacher keep trying to inspire me in training with imageries. In my understanding, the phsiologic and technical imageries are the measure of teaching instead of performance which need the *artistic imaging*.\n\n### Some inspiring points\n- \"Singing is largely a **subjective** action.\"\n- \"Singing results from a *gestalt (完型)* (an organized whole that is perceived as more than the sum of its parts) summons up previous experiences of physical coordination, proprioceptive sensation, and vocal sound.\"\n - Comments: Everything, especially the art, could results from a gestalt. Look at the music, the fine art and the architecture. It is even for science, technology and engineering.\n- \"The *gestalt* includes both directly controllable and non-controllable actions.\"\" \n- \"Fine singers seldom analyze the things they do in performance. Instead, they depend on recall as to how they have done in well before.\"\n - Comments: singing is based on experiences. Like what [Giovanni Battista Lamperti](https://en.wikipedia.org/wiki/Giovanni_Battista_Lamperti) said, \"Thought and muscle are schooled until instinct and reaction develop and take command. Then what was arbitrary becomes automatic.\"\n- \"A good teacher must be able to objectify the components of performance and convey them to the student, regardless of the student's vocal category.\"\"\n- \"There is an increasing realization that the voice as an instrument can best be trained through exact communicative language. For this we can thank the dissemination of factual information from interdisciplinary sources.\"\n - Comments: This is true. However, we should always notice that the art will never thrive without the imaging which though could be projected to specific technical functions.\n- \"**Artistry can be only as complete as coordinated function permits**.\"\"\n- Functions and imaging\n - *Free function* permits *artistic imaging*; \n - *Performance function* permits *physical imagery*; \n - *Technical function* permits *technical imaging*.\n\n\n","source":"_posts/On-the-Art-of-Singing-I-1-Imagery-and-the-Teaching-of-Singing.md","raw":"---\ntitle: On the Art of Singing I-1 Imagery and the Teaching of Singing\ndate: 2018-06-22 18:39:45\ntags: [On the Art of Singing, Voice]\ncategories: Voice\ntoc: true\n---\n\nIt has been a while since I set up this blog and I haven't contributed any meaningful articles yet. Recently, I found a fascinating  book, *On the Art of Singing*, written by Dr. [Richard Miller](https://en.wikipedia.org/wiki/Richard_Miller_(singer)) who has also composed another famous book *The Structure of Singing*. The book is structured as a collection of different topics and deserved to read. So I decided to read one chapter and write the reading summary every few days. Hope this could be a good start of my blog.\n\n<!--more-->\n\nThe first chapter is called *Imagery and the Teaching of Singing*. The title attracts me very much because I was always interested in the relationship between the acoustic and physiologic explanation of singing and the traditional pedagogy. The imagery is quite an important part of teaching voice. I was kept being reminded by my voice teacher of many different imageries like \"the mask\", \"'head' voice\", \"'chest' voice\", \"singing forward\", \"a sip of water in the mouth\" and so on. Some of them are useful while the others are confusing. This chapter settles several of my confusions and here are the key points listed.\n\n### Imagery\n- Imagery, like the mask, the third eye, and winding wheels, is useful in teaching. \"However, it is mostly of value if it is associated with already established, repeatable functional freedom.\" \n - Comments: \"Functional freedom\" might refer to the comprehensive vocal techniques and funcions like the breath management, proper laryngeal and resonatory response, etc.\n- The superimposition of imagery must be done *after* the singer has learned to coordinate different functions so that an image may be useful in unifying those functions. If not, the student might be confused. So imagery should not be part of the first steps in teaching the technical coordination of the singing. \n- Every singer could have his own private images. But no matter what the imagery is, it should be **projected** to established functions including both psychological and physical orientation.\n- \"Many outstanding professional singers never use detailed physiologic or technical imagery. For them, imagery occurs only at the interpretative level. They maintain a *dual channel* of psychological and physical orientation in which the technical foundation that has already been established permits *imaginative textual and musical projection*. Imaging in singing should ideally be directed to the artistic realization of text, drama, and musical content, **not** to the control of physical aspects of vocal technique.\"\n - Comments: The same idea is expressed by Bartholomew in 1935 saying, \"When imagery becomes so vivid that it is transferred into the physical field and used to explain physiologic and acoustic phenomena, it becomes extremely dubious, unreliable and even false It is this misuse which is largely responsible for the bitter controversies over vocal methods, as well as for their often comical expressions.\" This is quite interesting because for me, as an amateur singer, most of the imageries I have experienced are physiologic or technical. My voice teacher keep trying to inspire me in training with imageries. In my understanding, the phsiologic and technical imageries are the measure of teaching instead of performance which need the *artistic imaging*.\n\n### Some inspiring points\n- \"Singing is largely a **subjective** action.\"\n- \"Singing results from a *gestalt (完型)* (an organized whole that is perceived as more than the sum of its parts) summons up previous experiences of physical coordination, proprioceptive sensation, and vocal sound.\"\n - Comments: Everything, especially the art, could results from a gestalt. Look at the music, the fine art and the architecture. It is even for science, technology and engineering.\n- \"The *gestalt* includes both directly controllable and non-controllable actions.\"\" \n- \"Fine singers seldom analyze the things they do in performance. Instead, they depend on recall as to how they have done in well before.\"\n - Comments: singing is based on experiences. Like what [Giovanni Battista Lamperti](https://en.wikipedia.org/wiki/Giovanni_Battista_Lamperti) said, \"Thought and muscle are schooled until instinct and reaction develop and take command. Then what was arbitrary becomes automatic.\"\n- \"A good teacher must be able to objectify the components of performance and convey them to the student, regardless of the student's vocal category.\"\"\n- \"There is an increasing realization that the voice as an instrument can best be trained through exact communicative language. For this we can thank the dissemination of factual information from interdisciplinary sources.\"\n - Comments: This is true. However, we should always notice that the art will never thrive without the imaging which though could be projected to specific technical functions.\n- \"**Artistry can be only as complete as coordinated function permits**.\"\"\n- Functions and imaging\n - *Free function* permits *artistic imaging*; \n - *Performance function* permits *physical imagery*; \n - *Technical function* permits *technical imaging*.\n\n\n","slug":"On-the-Art-of-Singing-I-1-Imagery-and-the-Teaching-of-Singing","published":1,"updated":"2018-06-26T20:51:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjqb6na6a000t7ppht6u843j1","content":"<p>It has been a while since I set up this blog and I haven't contributed any meaningful articles yet. Recently, I found a fascinating book, <em>On the Art of Singing</em>, written by Dr. <a href=\"https://en.wikipedia.org/wiki/Richard_Miller_(singer)\" target=\"_blank\" rel=\"noopener\">Richard Miller</a> who has also composed another famous book <em>The Structure of Singing</em>. The book is structured as a collection of different topics and deserved to read. So I decided to read one chapter and write the reading summary every few days. Hope this could be a good start of my blog.</p>\n<a id=\"more\"></a>\n<p>The first chapter is called <em>Imagery and the Teaching of Singing</em>. The title attracts me very much because I was always interested in the relationship between the acoustic and physiologic explanation of singing and the traditional pedagogy. The imagery is quite an important part of teaching voice. I was kept being reminded by my voice teacher of many different imageries like &quot;the mask&quot;, &quot;'head' voice&quot;, &quot;'chest' voice&quot;, &quot;singing forward&quot;, &quot;a sip of water in the mouth&quot; and so on. Some of them are useful while the others are confusing. This chapter settles several of my confusions and here are the key points listed.</p>\n<h3 id=\"imagery\">Imagery</h3>\n<ul>\n<li>Imagery, like the mask, the third eye, and winding wheels, is useful in teaching. &quot;However, it is mostly of value if it is associated with already established, repeatable functional freedom.&quot;</li>\n<li>Comments: &quot;Functional freedom&quot; might refer to the comprehensive vocal techniques and funcions like the breath management, proper laryngeal and resonatory response, etc.</li>\n<li>The superimposition of imagery must be done <em>after</em> the singer has learned to coordinate different functions so that an image may be useful in unifying those functions. If not, the student might be confused. So imagery should not be part of the first steps in teaching the technical coordination of the singing.</li>\n<li>Every singer could have his own private images. But no matter what the imagery is, it should be <strong>projected</strong> to established functions including both psychological and physical orientation.</li>\n<li>&quot;Many outstanding professional singers never use detailed physiologic or technical imagery. For them, imagery occurs only at the interpretative level. They maintain a <em>dual channel</em> of psychological and physical orientation in which the technical foundation that has already been established permits <em>imaginative textual and musical projection</em>. Imaging in singing should ideally be directed to the artistic realization of text, drama, and musical content, <strong>not</strong> to the control of physical aspects of vocal technique.&quot;</li>\n<li>Comments: The same idea is expressed by Bartholomew in 1935 saying, &quot;When imagery becomes so vivid that it is transferred into the physical field and used to explain physiologic and acoustic phenomena, it becomes extremely dubious, unreliable and even false It is this misuse which is largely responsible for the bitter controversies over vocal methods, as well as for their often comical expressions.&quot; This is quite interesting because for me, as an amateur singer, most of the imageries I have experienced are physiologic or technical. My voice teacher keep trying to inspire me in training with imageries. In my understanding, the phsiologic and technical imageries are the measure of teaching instead of performance which need the <em>artistic imaging</em>.</li>\n</ul>\n<h3 id=\"some-inspiring-points\">Some inspiring points</h3>\n<ul>\n<li>&quot;Singing is largely a <strong>subjective</strong> action.&quot;</li>\n<li>&quot;Singing results from a <em>gestalt (完型)</em> (an organized whole that is perceived as more than the sum of its parts) summons up previous experiences of physical coordination, proprioceptive sensation, and vocal sound.&quot;</li>\n<li>Comments: Everything, especially the art, could results from a gestalt. Look at the music, the fine art and the architecture. It is even for science, technology and engineering.</li>\n<li>&quot;The <em>gestalt</em> includes both directly controllable and non-controllable actions.&quot;&quot;</li>\n<li>&quot;Fine singers seldom analyze the things they do in performance. Instead, they depend on recall as to how they have done in well before.&quot;</li>\n<li>Comments: singing is based on experiences. Like what <a href=\"https://en.wikipedia.org/wiki/Giovanni_Battista_Lamperti\" target=\"_blank\" rel=\"noopener\">Giovanni Battista Lamperti</a> said, &quot;Thought and muscle are schooled until instinct and reaction develop and take command. Then what was arbitrary becomes automatic.&quot;</li>\n<li>&quot;A good teacher must be able to objectify the components of performance and convey them to the student, regardless of the student's vocal category.&quot;&quot;</li>\n<li>&quot;There is an increasing realization that the voice as an instrument can best be trained through exact communicative language. For this we can thank the dissemination of factual information from interdisciplinary sources.&quot;</li>\n<li>Comments: This is true. However, we should always notice that the art will never thrive without the imaging which though could be projected to specific technical functions.</li>\n<li>&quot;<strong>Artistry can be only as complete as coordinated function permits</strong>.&quot;&quot;</li>\n<li>Functions and imaging</li>\n<li><em>Free function</em> permits <em>artistic imaging</em>;</li>\n<li><em>Performance function</em> permits <em>physical imagery</em>;</li>\n<li><em>Technical function</em> permits <em>technical imaging</em>.</li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>It has been a while since I set up this blog and I haven't contributed any meaningful articles yet. Recently, I found a fascinating book, <em>On the Art of Singing</em>, written by Dr. <a href=\"https://en.wikipedia.org/wiki/Richard_Miller_(singer)\" target=\"_blank\" rel=\"noopener\">Richard Miller</a> who has also composed another famous book <em>The Structure of Singing</em>. The book is structured as a collection of different topics and deserved to read. So I decided to read one chapter and write the reading summary every few days. Hope this could be a good start of my blog.</p>","more":"<p>The first chapter is called <em>Imagery and the Teaching of Singing</em>. The title attracts me very much because I was always interested in the relationship between the acoustic and physiologic explanation of singing and the traditional pedagogy. The imagery is quite an important part of teaching voice. I was kept being reminded by my voice teacher of many different imageries like &quot;the mask&quot;, &quot;'head' voice&quot;, &quot;'chest' voice&quot;, &quot;singing forward&quot;, &quot;a sip of water in the mouth&quot; and so on. Some of them are useful while the others are confusing. This chapter settles several of my confusions and here are the key points listed.</p>\n<h3 id=\"imagery\">Imagery</h3>\n<ul>\n<li>Imagery, like the mask, the third eye, and winding wheels, is useful in teaching. &quot;However, it is mostly of value if it is associated with already established, repeatable functional freedom.&quot;</li>\n<li>Comments: &quot;Functional freedom&quot; might refer to the comprehensive vocal techniques and funcions like the breath management, proper laryngeal and resonatory response, etc.</li>\n<li>The superimposition of imagery must be done <em>after</em> the singer has learned to coordinate different functions so that an image may be useful in unifying those functions. If not, the student might be confused. So imagery should not be part of the first steps in teaching the technical coordination of the singing.</li>\n<li>Every singer could have his own private images. But no matter what the imagery is, it should be <strong>projected</strong> to established functions including both psychological and physical orientation.</li>\n<li>&quot;Many outstanding professional singers never use detailed physiologic or technical imagery. For them, imagery occurs only at the interpretative level. They maintain a <em>dual channel</em> of psychological and physical orientation in which the technical foundation that has already been established permits <em>imaginative textual and musical projection</em>. Imaging in singing should ideally be directed to the artistic realization of text, drama, and musical content, <strong>not</strong> to the control of physical aspects of vocal technique.&quot;</li>\n<li>Comments: The same idea is expressed by Bartholomew in 1935 saying, &quot;When imagery becomes so vivid that it is transferred into the physical field and used to explain physiologic and acoustic phenomena, it becomes extremely dubious, unreliable and even false It is this misuse which is largely responsible for the bitter controversies over vocal methods, as well as for their often comical expressions.&quot; This is quite interesting because for me, as an amateur singer, most of the imageries I have experienced are physiologic or technical. My voice teacher keep trying to inspire me in training with imageries. In my understanding, the phsiologic and technical imageries are the measure of teaching instead of performance which need the <em>artistic imaging</em>.</li>\n</ul>\n<h3 id=\"some-inspiring-points\">Some inspiring points</h3>\n<ul>\n<li>&quot;Singing is largely a <strong>subjective</strong> action.&quot;</li>\n<li>&quot;Singing results from a <em>gestalt (完型)</em> (an organized whole that is perceived as more than the sum of its parts) summons up previous experiences of physical coordination, proprioceptive sensation, and vocal sound.&quot;</li>\n<li>Comments: Everything, especially the art, could results from a gestalt. Look at the music, the fine art and the architecture. It is even for science, technology and engineering.</li>\n<li>&quot;The <em>gestalt</em> includes both directly controllable and non-controllable actions.&quot;&quot;</li>\n<li>&quot;Fine singers seldom analyze the things they do in performance. Instead, they depend on recall as to how they have done in well before.&quot;</li>\n<li>Comments: singing is based on experiences. Like what <a href=\"https://en.wikipedia.org/wiki/Giovanni_Battista_Lamperti\" target=\"_blank\" rel=\"noopener\">Giovanni Battista Lamperti</a> said, &quot;Thought and muscle are schooled until instinct and reaction develop and take command. Then what was arbitrary becomes automatic.&quot;</li>\n<li>&quot;A good teacher must be able to objectify the components of performance and convey them to the student, regardless of the student's vocal category.&quot;&quot;</li>\n<li>&quot;There is an increasing realization that the voice as an instrument can best be trained through exact communicative language. For this we can thank the dissemination of factual information from interdisciplinary sources.&quot;</li>\n<li>Comments: This is true. However, we should always notice that the art will never thrive without the imaging which though could be projected to specific technical functions.</li>\n<li>&quot;<strong>Artistry can be only as complete as coordinated function permits</strong>.&quot;&quot;</li>\n<li>Functions and imaging</li>\n<li><em>Free function</em> permits <em>artistic imaging</em>;</li>\n<li><em>Performance function</em> permits <em>physical imagery</em>;</li>\n<li><em>Technical function</em> permits <em>technical imaging</em>.</li>\n</ul>"},{"title":"On the Art of Singing I-12 'What you Need Is More Support'","date":"2018-06-26T20:50:15.000Z","toc":true,"_content":"\nRichard told us an interesting story that he has experienced. In a vocal lesson, a nineteen-year-old baritone sings the *Già il sole dal Gange* exhibiting extreme nasality. His teacher tried different suggestions, \"singing forward\", \"masque\", \"concentrate on forehead\", \"calvaria and chimney on the top\", \"funnel\", \"sing it to yourself\", \"give it more support\", which however turns out to the same result - the student exhibits the same degree of nasality as previously.\n\nAs we can learn from the story, \n> As in so many cases, imaginative \"placement\" and \"support\" notions could not be trusted to remedy functional inadequacies present in the singing technique. \n\nWithout sepcific information as to the physiologic and acoustic causes of the problem, one can not be expected to know how to revise it in singing. \"You need more support\" will not be the ultimate panacea for all vocal faults regardless of their origin.\n\nBy the way, as pointed by Richard, \n> Such nasal timbre is the result, of course, of a constantly low velar position that does not take into account the postures necessary for non-nasal vowel and non-nasal voiced consonant definition.\n","source":"_posts/On-the-Art-of-Singing-I-12-What-you-Need-Is-More-Support.md","raw":"---\ntitle: On the Art of Singing I-12 'What you Need Is More Support'\ndate: 2018-06-26 16:50:15\ntags: [On the Art of Singing, Voice]\ncategories: Voice\ntoc: true\n\n---\n\nRichard told us an interesting story that he has experienced. In a vocal lesson, a nineteen-year-old baritone sings the *Già il sole dal Gange* exhibiting extreme nasality. His teacher tried different suggestions, \"singing forward\", \"masque\", \"concentrate on forehead\", \"calvaria and chimney on the top\", \"funnel\", \"sing it to yourself\", \"give it more support\", which however turns out to the same result - the student exhibits the same degree of nasality as previously.\n\nAs we can learn from the story, \n> As in so many cases, imaginative \"placement\" and \"support\" notions could not be trusted to remedy functional inadequacies present in the singing technique. \n\nWithout sepcific information as to the physiologic and acoustic causes of the problem, one can not be expected to know how to revise it in singing. \"You need more support\" will not be the ultimate panacea for all vocal faults regardless of their origin.\n\nBy the way, as pointed by Richard, \n> Such nasal timbre is the result, of course, of a constantly low velar position that does not take into account the postures necessary for non-nasal vowel and non-nasal voiced consonant definition.\n","slug":"On-the-Art-of-Singing-I-12-What-you-Need-Is-More-Support","published":1,"updated":"2018-06-29T13:22:56.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjqb6na6b000v7pphiqsadjc3","content":"<p>Richard told us an interesting story that he has experienced. In a vocal lesson, a nineteen-year-old baritone sings the <em>Già il sole dal Gange</em> exhibiting extreme nasality. His teacher tried different suggestions, &quot;singing forward&quot;, &quot;masque&quot;, &quot;concentrate on forehead&quot;, &quot;calvaria and chimney on the top&quot;, &quot;funnel&quot;, &quot;sing it to yourself&quot;, &quot;give it more support&quot;, which however turns out to the same result - the student exhibits the same degree of nasality as previously.</p>\n<p>As we can learn from the story, &gt; As in so many cases, imaginative &quot;placement&quot; and &quot;support&quot; notions could not be trusted to remedy functional inadequacies present in the singing technique.</p>\n<p>Without sepcific information as to the physiologic and acoustic causes of the problem, one can not be expected to know how to revise it in singing. &quot;You need more support&quot; will not be the ultimate panacea for all vocal faults regardless of their origin.</p>\n<p>By the way, as pointed by Richard, &gt; Such nasal timbre is the result, of course, of a constantly low velar position that does not take into account the postures necessary for non-nasal vowel and non-nasal voiced consonant definition.</p>\n","site":{"data":{}},"excerpt":"","more":"<p>Richard told us an interesting story that he has experienced. In a vocal lesson, a nineteen-year-old baritone sings the <em>Già il sole dal Gange</em> exhibiting extreme nasality. His teacher tried different suggestions, &quot;singing forward&quot;, &quot;masque&quot;, &quot;concentrate on forehead&quot;, &quot;calvaria and chimney on the top&quot;, &quot;funnel&quot;, &quot;sing it to yourself&quot;, &quot;give it more support&quot;, which however turns out to the same result - the student exhibits the same degree of nasality as previously.</p>\n<p>As we can learn from the story, &gt; As in so many cases, imaginative &quot;placement&quot; and &quot;support&quot; notions could not be trusted to remedy functional inadequacies present in the singing technique.</p>\n<p>Without sepcific information as to the physiologic and acoustic causes of the problem, one can not be expected to know how to revise it in singing. &quot;You need more support&quot; will not be the ultimate panacea for all vocal faults regardless of their origin.</p>\n<p>By the way, as pointed by Richard, &gt; Such nasal timbre is the result, of course, of a constantly low velar position that does not take into account the postures necessary for non-nasal vowel and non-nasal voiced consonant definition.</p>\n"},{"title":"SSH connection to a Cluster","date":"2018-10-04T19:10:09.000Z","_content":"\nI am using the cluster [GRAHAM](https://docs.computecanada.ca/wiki/Graham) for our simulation, and it uses SSH (Secure Shell) to connect to the remote servers. It is found annoying to type the password everytime you try to log in or copy files from the server. Herewith several simple commands, we could domake the password-less connection (for MacOS only).\n\n<!--more-->\n1. `cd ~/.ssh/`, enter the folder where the ssh keys are kept.\n2. `ssh-keygen -t rsa`, create a new ssh key pair. You would be asked to \n   `Enter file in which to save the key:` and I use `graham` here.\n3. `ssh-add -K graham`, add the ssh private key to the ssh-agent to store the passphrase the keychain.\n4. `cat graham.pub >> authorized_keys`, write the public key into the file authorized_keys.\n5. `ssh-copy-id -i graham.pub USER@graham.computecanada.ca`, `ssh-copy-id` is to use locally available keys to authorize logins on a remote machine. The authorized_keys is copied to the cluster.\n6. Add the following lines to *~/.ssh/config* to avoid `ssh-add` everytime after restart.\n  ```\n  Host graham.computecanada.ca\n    HostName graham.computecanada.ca\n    User Username\n    PreferredAuthentications publickey\n    IdentityFile ~/.ssh/graham\n    UseKeychain yes\n    AddKeysToAgent yes\n  ```\n\n**Done!**\n\nPS: add `alias graham='ssh -y USER@graham.comoputecanada.ca'` into `~./bash_profile` for convenience\n\n### Userful links\n- [SSH Key](https://www.ssh.com/ssh/key/)\n- [SSH Files](https://www.msri.org/realvideo/ln/msri/usered/ssh/bernstein/1/7.html)\n- [Github Help](https://help.github.com/articles/connecting-to-github-with-ssh/)\n- [Compute Canada Wiki](https://docs.computecanada.ca/wiki/SSH)\n\n\n","source":"_posts/Passwordless-SSH-connection-to-a-Cluster.md","raw":"---\ntitle: SSH connection to a Cluster\ndate: 2018-10-04 15:10:09\ntags: [Research Daily, CAML, HPC]\ncategories: Research Daily\n---\n\nI am using the cluster [GRAHAM](https://docs.computecanada.ca/wiki/Graham) for our simulation, and it uses SSH (Secure Shell) to connect to the remote servers. It is found annoying to type the password everytime you try to log in or copy files from the server. Herewith several simple commands, we could domake the password-less connection (for MacOS only).\n\n<!--more-->\n1. `cd ~/.ssh/`, enter the folder where the ssh keys are kept.\n2. `ssh-keygen -t rsa`, create a new ssh key pair. You would be asked to \n   `Enter file in which to save the key:` and I use `graham` here.\n3. `ssh-add -K graham`, add the ssh private key to the ssh-agent to store the passphrase the keychain.\n4. `cat graham.pub >> authorized_keys`, write the public key into the file authorized_keys.\n5. `ssh-copy-id -i graham.pub USER@graham.computecanada.ca`, `ssh-copy-id` is to use locally available keys to authorize logins on a remote machine. The authorized_keys is copied to the cluster.\n6. Add the following lines to *~/.ssh/config* to avoid `ssh-add` everytime after restart.\n  ```\n  Host graham.computecanada.ca\n    HostName graham.computecanada.ca\n    User Username\n    PreferredAuthentications publickey\n    IdentityFile ~/.ssh/graham\n    UseKeychain yes\n    AddKeysToAgent yes\n  ```\n\n**Done!**\n\nPS: add `alias graham='ssh -y USER@graham.comoputecanada.ca'` into `~./bash_profile` for convenience\n\n### Userful links\n- [SSH Key](https://www.ssh.com/ssh/key/)\n- [SSH Files](https://www.msri.org/realvideo/ln/msri/usered/ssh/bernstein/1/7.html)\n- [Github Help](https://help.github.com/articles/connecting-to-github-with-ssh/)\n- [Compute Canada Wiki](https://docs.computecanada.ca/wiki/SSH)\n\n\n","slug":"Passwordless-SSH-connection-to-a-Cluster","published":1,"updated":"2018-11-10T16:14:52.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjqb6na6c000z7pphaeac493m","content":"<p>I am using the cluster <a href=\"https://docs.computecanada.ca/wiki/Graham\" target=\"_blank\" rel=\"noopener\">GRAHAM</a> for our simulation, and it uses SSH (Secure Shell) to connect to the remote servers. It is found annoying to type the password everytime you try to log in or copy files from the server. Herewith several simple commands, we could domake the password-less connection (for MacOS only).</p>\n<a id=\"more\"></a>\n<ol type=\"1\">\n<li><code>cd ~/.ssh/</code>, enter the folder where the ssh keys are kept.</li>\n<li><code>ssh-keygen -t rsa</code>, create a new ssh key pair. You would be asked to <code>Enter file in which to save the key:</code> and I use <code>graham</code> here.</li>\n<li><code>ssh-add -K graham</code>, add the ssh private key to the ssh-agent to store the passphrase the keychain.</li>\n<li><code>cat graham.pub &gt;&gt; authorized_keys</code>, write the public key into the file authorized_keys.</li>\n<li><code>ssh-copy-id -i graham.pub USER@graham.computecanada.ca</code>, <code>ssh-copy-id</code> is to use locally available keys to authorize logins on a remote machine. The authorized_keys is copied to the cluster.</li>\n<li>Add the following lines to <em>~/.ssh/config</em> to avoid <code>ssh-add</code> everytime after restart. <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Host graham.computecanada.ca</span><br><span class=\"line\">  HostName graham.computecanada.ca</span><br><span class=\"line\">  User Username</span><br><span class=\"line\">  PreferredAuthentications publickey</span><br><span class=\"line\">  IdentityFile ~/.ssh/graham</span><br><span class=\"line\">  UseKeychain yes</span><br><span class=\"line\">  AddKeysToAgent yes</span><br></pre></td></tr></table></figure></li>\n</ol>\n<p><strong>Done!</strong></p>\n<p>PS: add <code>alias graham='ssh -y USER@graham.comoputecanada.ca'</code> into <code>~./bash_profile</code> for convenience</p>\n<h3 id=\"userful-links\">Userful links</h3>\n<ul>\n<li><a href=\"https://www.ssh.com/ssh/key/\" target=\"_blank\" rel=\"noopener\">SSH Key</a></li>\n<li><a href=\"https://www.msri.org/realvideo/ln/msri/usered/ssh/bernstein/1/7.html\" target=\"_blank\" rel=\"noopener\">SSH Files</a></li>\n<li><a href=\"https://help.github.com/articles/connecting-to-github-with-ssh/\" target=\"_blank\" rel=\"noopener\">Github Help</a></li>\n<li><a href=\"https://docs.computecanada.ca/wiki/SSH\" target=\"_blank\" rel=\"noopener\">Compute Canada Wiki</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>I am using the cluster <a href=\"https://docs.computecanada.ca/wiki/Graham\" target=\"_blank\" rel=\"noopener\">GRAHAM</a> for our simulation, and it uses SSH (Secure Shell) to connect to the remote servers. It is found annoying to type the password everytime you try to log in or copy files from the server. Herewith several simple commands, we could domake the password-less connection (for MacOS only).</p>","more":"<ol type=\"1\">\n<li><code>cd ~/.ssh/</code>, enter the folder where the ssh keys are kept.</li>\n<li><code>ssh-keygen -t rsa</code>, create a new ssh key pair. You would be asked to <code>Enter file in which to save the key:</code> and I use <code>graham</code> here.</li>\n<li><code>ssh-add -K graham</code>, add the ssh private key to the ssh-agent to store the passphrase the keychain.</li>\n<li><code>cat graham.pub &gt;&gt; authorized_keys</code>, write the public key into the file authorized_keys.</li>\n<li><code>ssh-copy-id -i graham.pub USER@graham.computecanada.ca</code>, <code>ssh-copy-id</code> is to use locally available keys to authorize logins on a remote machine. The authorized_keys is copied to the cluster.</li>\n<li>Add the following lines to <em>~/.ssh/config</em> to avoid <code>ssh-add</code> everytime after restart. <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Host graham.computecanada.ca</span><br><span class=\"line\">  HostName graham.computecanada.ca</span><br><span class=\"line\">  User Username</span><br><span class=\"line\">  PreferredAuthentications publickey</span><br><span class=\"line\">  IdentityFile ~/.ssh/graham</span><br><span class=\"line\">  UseKeychain yes</span><br><span class=\"line\">  AddKeysToAgent yes</span><br></pre></td></tr></table></figure></li>\n</ol>\n<p><strong>Done!</strong></p>\n<p>PS: add <code>alias graham='ssh -y USER@graham.comoputecanada.ca'</code> into <code>~./bash_profile</code> for convenience</p>\n<h3 id=\"userful-links\">Userful links</h3>\n<ul>\n<li><a href=\"https://www.ssh.com/ssh/key/\" target=\"_blank\" rel=\"noopener\">SSH Key</a></li>\n<li><a href=\"https://www.msri.org/realvideo/ln/msri/usered/ssh/bernstein/1/7.html\" target=\"_blank\" rel=\"noopener\">SSH Files</a></li>\n<li><a href=\"https://help.github.com/articles/connecting-to-github-with-ssh/\" target=\"_blank\" rel=\"noopener\">Github Help</a></li>\n<li><a href=\"https://docs.computecanada.ca/wiki/SSH\" target=\"_blank\" rel=\"noopener\">Compute Canada Wiki</a></li>\n</ul>"},{"title":"On the Art of Singing I-3 Covering in the Singing Voice","date":"2018-06-24T19:56:48.000Z","toc":true,"_content":"\nIn this chapter, the author talks about the \"covering (遮盖)\" which is another important and widely used term in most vocal pedagogies while the word itself is confusing and misleading. I used to confuse the \"cover\" and the \"mask\" because a \"mask\" might always \"cover\" the face. However, the expression \"vowel modification\" in English or \"元音修正\" in Chinese might be the preferable translation of *copertura*, the italian origin of \"covering (遮盖)\".\n\n<!--more-->\n\n### Copertura\nFirstly, it should be known that the well-balanced resonance or a *chiaroscuro* (light-dark) timbre should be \"maintained among harmonic partials in all parts of the spectrum regardless of the vowel or the pitch being sung.\" and ***copertura*** is the way to achieve it. \"*Copertura* is best described as the process of conscious equalization of the ascending scale through vowel modification so as to diminish register demarcations, not to exaggerate them.\" It is a technique of subtle adjustment (*aggiustamento*) of vocal timbre that produces the equalized scale in mounting pitch.\" *Copertura* serves in upper-middle and upper ranges of the singing voice. It gradually processes the voice in the *zona di passaggio* (passage zone or 换声点) to avoid the sudden registration shifts in upper-middle voice, and additional vowel modification takes place in the upper range (*voce di testa*). In the modern international school, moderate vowel modification is initiated at the *primo passaggio* near the termination of the speech range, and additional but gradual modification of the vowel takes place as the scale approaches the *secondo passaggio*.\n\n*Voce chiusa* (closed voice) and *voce aperta* (open voice) are a pair of comparable timbres while the former one is desirable. *Voce coperta* (covered voice) can only be present with *copertura* using *aggiustamento*. The *copertura* helps maintain the *voce chiusa* as pitch mounts, especially is important in the *zona di passaggio*. With *copertura*, the vowel should still be recognizable and maintains its own integrity while at the same time involves *unconscious* laryngeal and supraglottic alteration.  When a singer processes a series of vowels, he may perceive the resonance changes. For example, many young singers might feel \"[a] falls back\". \"In contrast to such a proprioceptive response, the singer's formant (spectral energy in the area of 2500 Hz to 3200 Hz in the male voice) and strong acoustic energy in the upper spectrum of female voices should always be present in both lateral and rounded vowels. This can happen only if the resonators are in tune with the vibrator. This balanced relationship among the fundamental pitch, the appropriate vowel formants and the acoustic energy in the region of the singer's formant, produces the *chiaroscuro* timbre of the historic Italianate model. In order, then, to keep the desired acoustic equilibrium as pitch ascends, modification of the vowel must occur.\" \n\nThe supraglottic region alters in ascending pitch and the alteration includes subconscious activity in pharyngeal wall movement, at the base of the tongue as well as in the body of the tongue, in the shape of the pyriform sinuses, and the in epiglottic movement. Epiglottic movement unconsciously occurs in response to tongue action. In general, the epiglottis is more erect in  the vowel [i] than in any other and the lowering process of epiglottis, playing a kind of filtering role within the vocal tract,  is a certain physiologic basis for traditional pedagogical terms that mean to \"cover\", though the phenomenon's implication for vocal technique is still unsure.\n\nIt should be noticed that different singer have the vowel modified at slightly different pitches. In both female and male instruments, most vowel modification in ascending pitch is in the direction of lateral to rounded vowel. In the process of modifying the vowel, it should be kept in mind that lateral vowels tend to augment high formants and that rounded vowels strengthen low formants.\n\n### The difference between *heavy cover* and *cover*. \n - \"Techniques of 'heavy cover' generally are associated with breath management maneuvers that involve muscular antagonism in the hypogastric region of the abdominal wall,\" which is characterized by the drastic change of laryngeal position. \n - However, *copertura* is based on *appoggio* model (to lean on something) during which, the inspiratory position of the abdominal wall is less quickly altered than is the case in several other \"support\" techniques, while axial posture remains unaltered.\n- \"In the union of the *appoggio* and the *aggiustamento (copertura)* maneuvers, radical changes do not occur at register demarcation points either in the anterolateral abdominal wall or in sternal positioning, nor in the resonator tract, as is the case in some other systems. As a result, the larynx remains in a stable position throughout the *copertura* process, maintaining its relatively low, poised position regardless of register events.\"\n\n### The differences between \"Covering\" in different areas\n*Copertura* is equated by *Deckung* in German and *couverture* in French. So in different areas, *copertura* means different things:\n - Traditional Germanic school (as well as its Nordic and Middle European derivatives and the influenced Asian adherents and the American vocal pedagogy): *Deckung* (cover) demands sudden mechanical registration actions while there has always existed a reaction against \"heavy covering\".\n - Current French School: \n  - historic French School: *couverture* = *copertura*.\n  - Since World War II: influenced by *Deckung*.\n - Great Britain: Great diversity of tonal ideals exist and the two extremes are\n  - \"Cathedral tone\": \"'covering' is not a concern because high levels of breath mixture in the tone have already reduced the upper partials in the singing voice.\"\n  - British-trained opera and concert singers: similar to the international operatic stage.\n\n\n\n\n","source":"_posts/On-the-Art-of-Singing-I-3-Covering-in-the-Singing-Voice.md","raw":"---\ntitle: On the Art of Singing I-3 Covering in the Singing Voice\ndate: 2018-06-24 15:56:48\ntags: [On the Art of Singing, Voice]\ncategories: Voice\ntoc: true\n---\n\nIn this chapter, the author talks about the \"covering (遮盖)\" which is another important and widely used term in most vocal pedagogies while the word itself is confusing and misleading. I used to confuse the \"cover\" and the \"mask\" because a \"mask\" might always \"cover\" the face. However, the expression \"vowel modification\" in English or \"元音修正\" in Chinese might be the preferable translation of *copertura*, the italian origin of \"covering (遮盖)\".\n\n<!--more-->\n\n### Copertura\nFirstly, it should be known that the well-balanced resonance or a *chiaroscuro* (light-dark) timbre should be \"maintained among harmonic partials in all parts of the spectrum regardless of the vowel or the pitch being sung.\" and ***copertura*** is the way to achieve it. \"*Copertura* is best described as the process of conscious equalization of the ascending scale through vowel modification so as to diminish register demarcations, not to exaggerate them.\" It is a technique of subtle adjustment (*aggiustamento*) of vocal timbre that produces the equalized scale in mounting pitch.\" *Copertura* serves in upper-middle and upper ranges of the singing voice. It gradually processes the voice in the *zona di passaggio* (passage zone or 换声点) to avoid the sudden registration shifts in upper-middle voice, and additional vowel modification takes place in the upper range (*voce di testa*). In the modern international school, moderate vowel modification is initiated at the *primo passaggio* near the termination of the speech range, and additional but gradual modification of the vowel takes place as the scale approaches the *secondo passaggio*.\n\n*Voce chiusa* (closed voice) and *voce aperta* (open voice) are a pair of comparable timbres while the former one is desirable. *Voce coperta* (covered voice) can only be present with *copertura* using *aggiustamento*. The *copertura* helps maintain the *voce chiusa* as pitch mounts, especially is important in the *zona di passaggio*. With *copertura*, the vowel should still be recognizable and maintains its own integrity while at the same time involves *unconscious* laryngeal and supraglottic alteration.  When a singer processes a series of vowels, he may perceive the resonance changes. For example, many young singers might feel \"[a] falls back\". \"In contrast to such a proprioceptive response, the singer's formant (spectral energy in the area of 2500 Hz to 3200 Hz in the male voice) and strong acoustic energy in the upper spectrum of female voices should always be present in both lateral and rounded vowels. This can happen only if the resonators are in tune with the vibrator. This balanced relationship among the fundamental pitch, the appropriate vowel formants and the acoustic energy in the region of the singer's formant, produces the *chiaroscuro* timbre of the historic Italianate model. In order, then, to keep the desired acoustic equilibrium as pitch ascends, modification of the vowel must occur.\" \n\nThe supraglottic region alters in ascending pitch and the alteration includes subconscious activity in pharyngeal wall movement, at the base of the tongue as well as in the body of the tongue, in the shape of the pyriform sinuses, and the in epiglottic movement. Epiglottic movement unconsciously occurs in response to tongue action. In general, the epiglottis is more erect in  the vowel [i] than in any other and the lowering process of epiglottis, playing a kind of filtering role within the vocal tract,  is a certain physiologic basis for traditional pedagogical terms that mean to \"cover\", though the phenomenon's implication for vocal technique is still unsure.\n\nIt should be noticed that different singer have the vowel modified at slightly different pitches. In both female and male instruments, most vowel modification in ascending pitch is in the direction of lateral to rounded vowel. In the process of modifying the vowel, it should be kept in mind that lateral vowels tend to augment high formants and that rounded vowels strengthen low formants.\n\n### The difference between *heavy cover* and *cover*. \n - \"Techniques of 'heavy cover' generally are associated with breath management maneuvers that involve muscular antagonism in the hypogastric region of the abdominal wall,\" which is characterized by the drastic change of laryngeal position. \n - However, *copertura* is based on *appoggio* model (to lean on something) during which, the inspiratory position of the abdominal wall is less quickly altered than is the case in several other \"support\" techniques, while axial posture remains unaltered.\n- \"In the union of the *appoggio* and the *aggiustamento (copertura)* maneuvers, radical changes do not occur at register demarcation points either in the anterolateral abdominal wall or in sternal positioning, nor in the resonator tract, as is the case in some other systems. As a result, the larynx remains in a stable position throughout the *copertura* process, maintaining its relatively low, poised position regardless of register events.\"\n\n### The differences between \"Covering\" in different areas\n*Copertura* is equated by *Deckung* in German and *couverture* in French. So in different areas, *copertura* means different things:\n - Traditional Germanic school (as well as its Nordic and Middle European derivatives and the influenced Asian adherents and the American vocal pedagogy): *Deckung* (cover) demands sudden mechanical registration actions while there has always existed a reaction against \"heavy covering\".\n - Current French School: \n  - historic French School: *couverture* = *copertura*.\n  - Since World War II: influenced by *Deckung*.\n - Great Britain: Great diversity of tonal ideals exist and the two extremes are\n  - \"Cathedral tone\": \"'covering' is not a concern because high levels of breath mixture in the tone have already reduced the upper partials in the singing voice.\"\n  - British-trained opera and concert singers: similar to the international operatic stage.\n\n\n\n\n","slug":"On-the-Art-of-Singing-I-3-Covering-in-the-Singing-Voice","published":1,"updated":"2018-09-17T21:06:35.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjqb6na6d00117pphsdwpyha8","content":"<p>In this chapter, the author talks about the &quot;covering (遮盖)&quot; which is another important and widely used term in most vocal pedagogies while the word itself is confusing and misleading. I used to confuse the &quot;cover&quot; and the &quot;mask&quot; because a &quot;mask&quot; might always &quot;cover&quot; the face. However, the expression &quot;vowel modification&quot; in English or &quot;元音修正&quot; in Chinese might be the preferable translation of <em>copertura</em>, the italian origin of &quot;covering (遮盖)&quot;.</p>\n<a id=\"more\"></a>\n<h3 id=\"copertura\">Copertura</h3>\n<p>Firstly, it should be known that the well-balanced resonance or a <em>chiaroscuro</em> (light-dark) timbre should be &quot;maintained among harmonic partials in all parts of the spectrum regardless of the vowel or the pitch being sung.&quot; and <strong><em>copertura</em></strong> is the way to achieve it. &quot;<em>Copertura</em> is best described as the process of conscious equalization of the ascending scale through vowel modification so as to diminish register demarcations, not to exaggerate them.&quot; It is a technique of subtle adjustment (<em>aggiustamento</em>) of vocal timbre that produces the equalized scale in mounting pitch.&quot; <em>Copertura</em> serves in upper-middle and upper ranges of the singing voice. It gradually processes the voice in the <em>zona di passaggio</em> (passage zone or 换声点) to avoid the sudden registration shifts in upper-middle voice, and additional vowel modification takes place in the upper range (<em>voce di testa</em>). In the modern international school, moderate vowel modification is initiated at the <em>primo passaggio</em> near the termination of the speech range, and additional but gradual modification of the vowel takes place as the scale approaches the <em>secondo passaggio</em>.</p>\n<p><em>Voce chiusa</em> (closed voice) and <em>voce aperta</em> (open voice) are a pair of comparable timbres while the former one is desirable. <em>Voce coperta</em> (covered voice) can only be present with <em>copertura</em> using <em>aggiustamento</em>. The <em>copertura</em> helps maintain the <em>voce chiusa</em> as pitch mounts, especially is important in the <em>zona di passaggio</em>. With <em>copertura</em>, the vowel should still be recognizable and maintains its own integrity while at the same time involves <em>unconscious</em> laryngeal and supraglottic alteration. When a singer processes a series of vowels, he may perceive the resonance changes. For example, many young singers might feel &quot;[a] falls back&quot;. &quot;In contrast to such a proprioceptive response, the singer's formant (spectral energy in the area of 2500 Hz to 3200 Hz in the male voice) and strong acoustic energy in the upper spectrum of female voices should always be present in both lateral and rounded vowels. This can happen only if the resonators are in tune with the vibrator. This balanced relationship among the fundamental pitch, the appropriate vowel formants and the acoustic energy in the region of the singer's formant, produces the <em>chiaroscuro</em> timbre of the historic Italianate model. In order, then, to keep the desired acoustic equilibrium as pitch ascends, modification of the vowel must occur.&quot;</p>\n<p>The supraglottic region alters in ascending pitch and the alteration includes subconscious activity in pharyngeal wall movement, at the base of the tongue as well as in the body of the tongue, in the shape of the pyriform sinuses, and the in epiglottic movement. Epiglottic movement unconsciously occurs in response to tongue action. In general, the epiglottis is more erect in the vowel [i] than in any other and the lowering process of epiglottis, playing a kind of filtering role within the vocal tract, is a certain physiologic basis for traditional pedagogical terms that mean to &quot;cover&quot;, though the phenomenon's implication for vocal technique is still unsure.</p>\n<p>It should be noticed that different singer have the vowel modified at slightly different pitches. In both female and male instruments, most vowel modification in ascending pitch is in the direction of lateral to rounded vowel. In the process of modifying the vowel, it should be kept in mind that lateral vowels tend to augment high formants and that rounded vowels strengthen low formants.</p>\n<h3 id=\"the-difference-between-heavy-cover-and-cover.\">The difference between <em>heavy cover</em> and <em>cover</em>.</h3>\n<ul>\n<li>&quot;Techniques of 'heavy cover' generally are associated with breath management maneuvers that involve muscular antagonism in the hypogastric region of the abdominal wall,&quot; which is characterized by the drastic change of laryngeal position.</li>\n<li>However, <em>copertura</em> is based on <em>appoggio</em> model (to lean on something) during which, the inspiratory position of the abdominal wall is less quickly altered than is the case in several other &quot;support&quot; techniques, while axial posture remains unaltered.</li>\n<li>&quot;In the union of the <em>appoggio</em> and the <em>aggiustamento (copertura)</em> maneuvers, radical changes do not occur at register demarcation points either in the anterolateral abdominal wall or in sternal positioning, nor in the resonator tract, as is the case in some other systems. As a result, the larynx remains in a stable position throughout the <em>copertura</em> process, maintaining its relatively low, poised position regardless of register events.&quot;</li>\n</ul>\n<h3 id=\"the-differences-between-covering-in-different-areas\">The differences between &quot;Covering&quot; in different areas</h3>\n<p><em>Copertura</em> is equated by <em>Deckung</em> in German and <em>couverture</em> in French. So in different areas, <em>copertura</em> means different things: - Traditional Germanic school (as well as its Nordic and Middle European derivatives and the influenced Asian adherents and the American vocal pedagogy): <em>Deckung</em> (cover) demands sudden mechanical registration actions while there has always existed a reaction against &quot;heavy covering&quot;. - Current French School: - historic French School: <em>couverture</em> = <em>copertura</em>. - Since World War II: influenced by <em>Deckung</em>. - Great Britain: Great diversity of tonal ideals exist and the two extremes are - &quot;Cathedral tone&quot;: &quot;'covering' is not a concern because high levels of breath mixture in the tone have already reduced the upper partials in the singing voice.&quot; - British-trained opera and concert singers: similar to the international operatic stage.</p>\n","site":{"data":{}},"excerpt":"<p>In this chapter, the author talks about the &quot;covering (遮盖)&quot; which is another important and widely used term in most vocal pedagogies while the word itself is confusing and misleading. I used to confuse the &quot;cover&quot; and the &quot;mask&quot; because a &quot;mask&quot; might always &quot;cover&quot; the face. However, the expression &quot;vowel modification&quot; in English or &quot;元音修正&quot; in Chinese might be the preferable translation of <em>copertura</em>, the italian origin of &quot;covering (遮盖)&quot;.</p>","more":"<h3 id=\"copertura\">Copertura</h3>\n<p>Firstly, it should be known that the well-balanced resonance or a <em>chiaroscuro</em> (light-dark) timbre should be &quot;maintained among harmonic partials in all parts of the spectrum regardless of the vowel or the pitch being sung.&quot; and <strong><em>copertura</em></strong> is the way to achieve it. &quot;<em>Copertura</em> is best described as the process of conscious equalization of the ascending scale through vowel modification so as to diminish register demarcations, not to exaggerate them.&quot; It is a technique of subtle adjustment (<em>aggiustamento</em>) of vocal timbre that produces the equalized scale in mounting pitch.&quot; <em>Copertura</em> serves in upper-middle and upper ranges of the singing voice. It gradually processes the voice in the <em>zona di passaggio</em> (passage zone or 换声点) to avoid the sudden registration shifts in upper-middle voice, and additional vowel modification takes place in the upper range (<em>voce di testa</em>). In the modern international school, moderate vowel modification is initiated at the <em>primo passaggio</em> near the termination of the speech range, and additional but gradual modification of the vowel takes place as the scale approaches the <em>secondo passaggio</em>.</p>\n<p><em>Voce chiusa</em> (closed voice) and <em>voce aperta</em> (open voice) are a pair of comparable timbres while the former one is desirable. <em>Voce coperta</em> (covered voice) can only be present with <em>copertura</em> using <em>aggiustamento</em>. The <em>copertura</em> helps maintain the <em>voce chiusa</em> as pitch mounts, especially is important in the <em>zona di passaggio</em>. With <em>copertura</em>, the vowel should still be recognizable and maintains its own integrity while at the same time involves <em>unconscious</em> laryngeal and supraglottic alteration. When a singer processes a series of vowels, he may perceive the resonance changes. For example, many young singers might feel &quot;[a] falls back&quot;. &quot;In contrast to such a proprioceptive response, the singer's formant (spectral energy in the area of 2500 Hz to 3200 Hz in the male voice) and strong acoustic energy in the upper spectrum of female voices should always be present in both lateral and rounded vowels. This can happen only if the resonators are in tune with the vibrator. This balanced relationship among the fundamental pitch, the appropriate vowel formants and the acoustic energy in the region of the singer's formant, produces the <em>chiaroscuro</em> timbre of the historic Italianate model. In order, then, to keep the desired acoustic equilibrium as pitch ascends, modification of the vowel must occur.&quot;</p>\n<p>The supraglottic region alters in ascending pitch and the alteration includes subconscious activity in pharyngeal wall movement, at the base of the tongue as well as in the body of the tongue, in the shape of the pyriform sinuses, and the in epiglottic movement. Epiglottic movement unconsciously occurs in response to tongue action. In general, the epiglottis is more erect in the vowel [i] than in any other and the lowering process of epiglottis, playing a kind of filtering role within the vocal tract, is a certain physiologic basis for traditional pedagogical terms that mean to &quot;cover&quot;, though the phenomenon's implication for vocal technique is still unsure.</p>\n<p>It should be noticed that different singer have the vowel modified at slightly different pitches. In both female and male instruments, most vowel modification in ascending pitch is in the direction of lateral to rounded vowel. In the process of modifying the vowel, it should be kept in mind that lateral vowels tend to augment high formants and that rounded vowels strengthen low formants.</p>\n<h3 id=\"the-difference-between-heavy-cover-and-cover.\">The difference between <em>heavy cover</em> and <em>cover</em>.</h3>\n<ul>\n<li>&quot;Techniques of 'heavy cover' generally are associated with breath management maneuvers that involve muscular antagonism in the hypogastric region of the abdominal wall,&quot; which is characterized by the drastic change of laryngeal position.</li>\n<li>However, <em>copertura</em> is based on <em>appoggio</em> model (to lean on something) during which, the inspiratory position of the abdominal wall is less quickly altered than is the case in several other &quot;support&quot; techniques, while axial posture remains unaltered.</li>\n<li>&quot;In the union of the <em>appoggio</em> and the <em>aggiustamento (copertura)</em> maneuvers, radical changes do not occur at register demarcation points either in the anterolateral abdominal wall or in sternal positioning, nor in the resonator tract, as is the case in some other systems. As a result, the larynx remains in a stable position throughout the <em>copertura</em> process, maintaining its relatively low, poised position regardless of register events.&quot;</li>\n</ul>\n<h3 id=\"the-differences-between-covering-in-different-areas\">The differences between &quot;Covering&quot; in different areas</h3>\n<p><em>Copertura</em> is equated by <em>Deckung</em> in German and <em>couverture</em> in French. So in different areas, <em>copertura</em> means different things: - Traditional Germanic school (as well as its Nordic and Middle European derivatives and the influenced Asian adherents and the American vocal pedagogy): <em>Deckung</em> (cover) demands sudden mechanical registration actions while there has always existed a reaction against &quot;heavy covering&quot;. - Current French School: - historic French School: <em>couverture</em> = <em>copertura</em>. - Since World War II: influenced by <em>Deckung</em>. - Great Britain: Great diversity of tonal ideals exist and the two extremes are - &quot;Cathedral tone&quot;: &quot;'covering' is not a concern because high levels of breath mixture in the tone have already reduced the upper partials in the singing voice.&quot; - British-trained opera and concert singers: similar to the international operatic stage.</p>"},{"title":"Descriptor and External Field of Palabos","date":"2018-10-15T19:29:31.000Z","mathjax":true,"toc":true,"_content":"\n\nFor the lattice Boltzmann method, the descriptor has to be defined in advance. Here we briefly discuss the descriptor structure in Palabos. \n\n<!--more--> \n\n## Descriptor\nIn palabos, the descriptors are stored in `/src/latticeBoltzmann/nearestNeighborLatticesXD.h`, where $X=2,3$.\n\nEach descriptor is a **combination** of the lattice schema and the external field, so that must inherit from at least two *`DescriptorBase`* including the basic  *`DdQqDescriptorBase`* defining the lattice-related variables, and a *`EXTERNALVARLISTDescriptorBase`* with external variables or `NoExternalFieldBase` if the problem involves no external variables. (*`DdQqDescriptorBase`* could be `D2Q9DescriptorBase`, and *`EXTERNALVARLISTDescriptorBase`* could be `RhoBarVelocityPiNeqOmegaDescriptorBase2D`).\n\n- In *`DdQqDescriptorBase`*, it defines the `d`, the `q`, the lattice velocity `c[q][d]`, lattice weight `t[q]`, square speed of sound `cs2` and so on by means of `DdQqConstants`. \n\n- The *`EXTERNALVARLISTDescriptorBaseXD`* is written in `/src/latticeBoltzmann/externalFields.h`. In *`EXTERNALVARLISTDescriptorBaseXD`*, it defines the problem-specific `ExternalField` as `EXTERNALVARLISTDescriptorXD`. Here the `DdQq` of `EXTERNALVARLISTDdQqDescriptor` must correspond to the one in `DdQqDescriptorBase`. Here above `EXTERNALVARLIST-` represents the name list of the external variables, e.g., `EXTERNALVARLIST=RhoBarVelocityPiNeqOmega` and `EXTERNALVARLIST=ForcedRhoBarJ` for `RhoBarVelocityPiNeqOmegaD2Q9Descriptor` and `ForcedRhoBarJD2Q9Descriptor`, respectively.\n\n## Example\n- Take the `RhoBarVelocityPiNeqOmegaD2Q9Descriptor` as an example to illustrate the structure, it inherits from `D2Q9DescriptorBase` and `RhoBarVelocityPiNeqOmegaDescriptorBase2D`. \n```\ntemplate <typename T> struct RhoBarVelocityPiNeqOmegaD2Q9Descriptor\n   : public D2Q9DescriptorBase<T>, \n     public RhoBarVelocityPiNeqOmegaDescriptorBase2D\n{\n    static const char name[];\n};\n```\n### DdQqDescriptorBase\n- The `D2Q9DescriptorBase` is defined as \n```\ntemplate <typename T> struct D2Q9DescriptorBase\n    : public D2Q9Constants<T>, public DefaultRoundOffPolicy<T>\n{\n    typedef D2Q9DescriptorBase<T> BaseDescriptor;\n    enum { numPop=D2Q9Constants<T>::q };\n};\n```\n- where the lattce-related variables are defined in \n```\ntemplate <typename T> struct D2Q9Constants\n{\n    enum { d = 2, q = 9 };        ///< number of dimensions/distr. functions\n    static const T invD;          ///< 1 / (number of dimensions)\n    static const int vicinity;    ///< size of neighborhood\n    static const int c[q][d];     ///< lattice directions\n    static const int cNormSqr[q]; ///< norm-square of the vector c\n    static const T t[q];          ///< lattice weights\n    static const T cs2;           ///< lattice constant cs2 (in BGK, this is the square-speed-of-sound)\n    static const T invCs2;        ///< 1 / cs2\n    };\n\t```\n### EXTERNALVARLISTDescriptorBaseXD\n- The `RhoBarVelocityPiNeqOmegaDescriptorBase2D` has a component `ExternalField`\n```\nstruct RhoBarVelocityPiNeqOmegaDescriptorBase2D {\n    typedef RhoBarVelocityPiNeqOmegaDescriptor2D ExternalField;\n};\n```\n- and the `RhoBarVelocityPiNeqOmegaDescriptor2D` would store\n - the number of scalars,\n - the number of the species,\n - the index each variable starts,\n - the size of each variable (2 for 2d and 3 for 3d tensors),\n```\nstruct RhoBarVelocityPiNeqOmegaDescriptor2D {\n    static const int numScalars       = 7;\n    static const int numSpecies       = 4;\n    static const int rhoBarBeginsAt   = 0;\n    static const int sizeOfRhoBar     = 1;\n    static const int velocityBeginsAt = 1; \n    static const int sizeOfVelocity   = 2;\n    static const int piNeqBeginsAt    = 3;\n    static const int sizeOfPiNeq      = 3;\n    static const int omegaBeginsAt    = 6;\n    static const int sizeOfOmega      = 1;\n    static const int sizeOfForce      = 0;\n};\n```\n\n- meaning `ForcedRhoBarJdescriptor3DRhoBarVelocityPiNeqOmegaDescriptor2D` have 4 species including `rhoBar`, `velocity`, `piNeq` and `omega`, with 1, 2, 3 and 1 as the sizes, respectively. So the scalar number would be $1+2+3+1=7$ in total.\n\n## Setting up the external field\nOnce the descriptor with an external field is defined, the memory of `external` inside the `cell` is allocated (see `src/core/cell.h`). For initializing or simply setting values to the external field, one would use the data processor, i.e., `setExternalVector` or `setExternalScalar` with the variable start index like `DESCRIPTOR<T>::ExternalField::rhoBarBeginsAt`.\n\n- An example of external force flow would be found in the project `/examples/showCases/womersley/`. Where the external forces is set by an array, i.e., the force is uniformally deployed in the domain.\n```\nArray<T,NSDESCRIPTOR<T>::d> force(womersleyForce((T)0, amplitude, frequency, parameters),0.);\nsetExternalVector(lattice,lattice.getBoundingBox(),NSDESCRIPTOR<T>::ExternalField::forceBeginsAt,force); \n```\n\n- For position-dependent external variables, one could use a `MultiScalarFieldXD` or `MultiTensorFieldXD`, initialized from a functional, as the input of `setExternalVector` or `setExternalScalar` and use a functional to initialize the `MultiXXXXFieldXD`. For the setup of the absorbing layers, I use\n```\nMultiScalarField2D<T> sigma(lattice);\nWaveAbsorptionSigmaFunction2D<T> sigmaFunction2D(lattice.getBoundingBox(), numSpongeCells ,bulkValue);\nsetToFunction(sigma, lattice.getBoundingBox(), sigmaFunction2D);\nsetExternalScalar(lattice, lattice.getBoundingBox(),\n                      DESCRIPTOR<T>::ExternalField::sigmaBeginsAt, sigma );\n\t\t\t\t\t  ```\n","source":"_posts/Palabos-Descriptor-External-Field.md","raw":"---\ntitle: Descriptor and External Field of Palabos\ndate: 2018-10-15 15:29:31\ntags: [Palabos, LBM, CFD]\ncategories: Palabos\nmathjax: true\ntoc: true\n---\n\n\nFor the lattice Boltzmann method, the descriptor has to be defined in advance. Here we briefly discuss the descriptor structure in Palabos. \n\n<!--more--> \n\n## Descriptor\nIn palabos, the descriptors are stored in `/src/latticeBoltzmann/nearestNeighborLatticesXD.h`, where $X=2,3$.\n\nEach descriptor is a **combination** of the lattice schema and the external field, so that must inherit from at least two *`DescriptorBase`* including the basic  *`DdQqDescriptorBase`* defining the lattice-related variables, and a *`EXTERNALVARLISTDescriptorBase`* with external variables or `NoExternalFieldBase` if the problem involves no external variables. (*`DdQqDescriptorBase`* could be `D2Q9DescriptorBase`, and *`EXTERNALVARLISTDescriptorBase`* could be `RhoBarVelocityPiNeqOmegaDescriptorBase2D`).\n\n- In *`DdQqDescriptorBase`*, it defines the `d`, the `q`, the lattice velocity `c[q][d]`, lattice weight `t[q]`, square speed of sound `cs2` and so on by means of `DdQqConstants`. \n\n- The *`EXTERNALVARLISTDescriptorBaseXD`* is written in `/src/latticeBoltzmann/externalFields.h`. In *`EXTERNALVARLISTDescriptorBaseXD`*, it defines the problem-specific `ExternalField` as `EXTERNALVARLISTDescriptorXD`. Here the `DdQq` of `EXTERNALVARLISTDdQqDescriptor` must correspond to the one in `DdQqDescriptorBase`. Here above `EXTERNALVARLIST-` represents the name list of the external variables, e.g., `EXTERNALVARLIST=RhoBarVelocityPiNeqOmega` and `EXTERNALVARLIST=ForcedRhoBarJ` for `RhoBarVelocityPiNeqOmegaD2Q9Descriptor` and `ForcedRhoBarJD2Q9Descriptor`, respectively.\n\n## Example\n- Take the `RhoBarVelocityPiNeqOmegaD2Q9Descriptor` as an example to illustrate the structure, it inherits from `D2Q9DescriptorBase` and `RhoBarVelocityPiNeqOmegaDescriptorBase2D`. \n```\ntemplate <typename T> struct RhoBarVelocityPiNeqOmegaD2Q9Descriptor\n   : public D2Q9DescriptorBase<T>, \n     public RhoBarVelocityPiNeqOmegaDescriptorBase2D\n{\n    static const char name[];\n};\n```\n### DdQqDescriptorBase\n- The `D2Q9DescriptorBase` is defined as \n```\ntemplate <typename T> struct D2Q9DescriptorBase\n    : public D2Q9Constants<T>, public DefaultRoundOffPolicy<T>\n{\n    typedef D2Q9DescriptorBase<T> BaseDescriptor;\n    enum { numPop=D2Q9Constants<T>::q };\n};\n```\n- where the lattce-related variables are defined in \n```\ntemplate <typename T> struct D2Q9Constants\n{\n    enum { d = 2, q = 9 };        ///< number of dimensions/distr. functions\n    static const T invD;          ///< 1 / (number of dimensions)\n    static const int vicinity;    ///< size of neighborhood\n    static const int c[q][d];     ///< lattice directions\n    static const int cNormSqr[q]; ///< norm-square of the vector c\n    static const T t[q];          ///< lattice weights\n    static const T cs2;           ///< lattice constant cs2 (in BGK, this is the square-speed-of-sound)\n    static const T invCs2;        ///< 1 / cs2\n    };\n\t```\n### EXTERNALVARLISTDescriptorBaseXD\n- The `RhoBarVelocityPiNeqOmegaDescriptorBase2D` has a component `ExternalField`\n```\nstruct RhoBarVelocityPiNeqOmegaDescriptorBase2D {\n    typedef RhoBarVelocityPiNeqOmegaDescriptor2D ExternalField;\n};\n```\n- and the `RhoBarVelocityPiNeqOmegaDescriptor2D` would store\n - the number of scalars,\n - the number of the species,\n - the index each variable starts,\n - the size of each variable (2 for 2d and 3 for 3d tensors),\n```\nstruct RhoBarVelocityPiNeqOmegaDescriptor2D {\n    static const int numScalars       = 7;\n    static const int numSpecies       = 4;\n    static const int rhoBarBeginsAt   = 0;\n    static const int sizeOfRhoBar     = 1;\n    static const int velocityBeginsAt = 1; \n    static const int sizeOfVelocity   = 2;\n    static const int piNeqBeginsAt    = 3;\n    static const int sizeOfPiNeq      = 3;\n    static const int omegaBeginsAt    = 6;\n    static const int sizeOfOmega      = 1;\n    static const int sizeOfForce      = 0;\n};\n```\n\n- meaning `ForcedRhoBarJdescriptor3DRhoBarVelocityPiNeqOmegaDescriptor2D` have 4 species including `rhoBar`, `velocity`, `piNeq` and `omega`, with 1, 2, 3 and 1 as the sizes, respectively. So the scalar number would be $1+2+3+1=7$ in total.\n\n## Setting up the external field\nOnce the descriptor with an external field is defined, the memory of `external` inside the `cell` is allocated (see `src/core/cell.h`). For initializing or simply setting values to the external field, one would use the data processor, i.e., `setExternalVector` or `setExternalScalar` with the variable start index like `DESCRIPTOR<T>::ExternalField::rhoBarBeginsAt`.\n\n- An example of external force flow would be found in the project `/examples/showCases/womersley/`. Where the external forces is set by an array, i.e., the force is uniformally deployed in the domain.\n```\nArray<T,NSDESCRIPTOR<T>::d> force(womersleyForce((T)0, amplitude, frequency, parameters),0.);\nsetExternalVector(lattice,lattice.getBoundingBox(),NSDESCRIPTOR<T>::ExternalField::forceBeginsAt,force); \n```\n\n- For position-dependent external variables, one could use a `MultiScalarFieldXD` or `MultiTensorFieldXD`, initialized from a functional, as the input of `setExternalVector` or `setExternalScalar` and use a functional to initialize the `MultiXXXXFieldXD`. For the setup of the absorbing layers, I use\n```\nMultiScalarField2D<T> sigma(lattice);\nWaveAbsorptionSigmaFunction2D<T> sigmaFunction2D(lattice.getBoundingBox(), numSpongeCells ,bulkValue);\nsetToFunction(sigma, lattice.getBoundingBox(), sigmaFunction2D);\nsetExternalScalar(lattice, lattice.getBoundingBox(),\n                      DESCRIPTOR<T>::ExternalField::sigmaBeginsAt, sigma );\n\t\t\t\t\t  ```\n","slug":"Palabos-Descriptor-External-Field","published":1,"updated":"2018-10-15T21:03:07.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjqb6na6f00157pphygeculvv","content":"<p>For the lattice Boltzmann method, the descriptor has to be defined in advance. Here we briefly discuss the descriptor structure in Palabos.</p>\n<a id=\"more\"></a>\n<h2 id=\"descriptor\">Descriptor</h2>\n<p>In palabos, the descriptors are stored in <code>/src/latticeBoltzmann/nearestNeighborLatticesXD.h</code>, where <span class=\"math inline\">\\(X=2,3\\)</span>.</p>\n<p>Each descriptor is a <strong>combination</strong> of the lattice schema and the external field, so that must inherit from at least two <em><code>DescriptorBase</code></em> including the basic <em><code>DdQqDescriptorBase</code></em> defining the lattice-related variables, and a <em><code>EXTERNALVARLISTDescriptorBase</code></em> with external variables or <code>NoExternalFieldBase</code> if the problem involves no external variables. (<em><code>DdQqDescriptorBase</code></em> could be <code>D2Q9DescriptorBase</code>, and <em><code>EXTERNALVARLISTDescriptorBase</code></em> could be <code>RhoBarVelocityPiNeqOmegaDescriptorBase2D</code>).</p>\n<ul>\n<li><p>In <em><code>DdQqDescriptorBase</code></em>, it defines the <code>d</code>, the <code>q</code>, the lattice velocity <code>c[q][d]</code>, lattice weight <code>t[q]</code>, square speed of sound <code>cs2</code> and so on by means of <code>DdQqConstants</code>.</p></li>\n<li><p>The <em><code>EXTERNALVARLISTDescriptorBaseXD</code></em> is written in <code>/src/latticeBoltzmann/externalFields.h</code>. In <em><code>EXTERNALVARLISTDescriptorBaseXD</code></em>, it defines the problem-specific <code>ExternalField</code> as <code>EXTERNALVARLISTDescriptorXD</code>. Here the <code>DdQq</code> of <code>EXTERNALVARLISTDdQqDescriptor</code> must correspond to the one in <code>DdQqDescriptorBase</code>. Here above <code>EXTERNALVARLIST-</code> represents the name list of the external variables, e.g., <code>EXTERNALVARLIST=RhoBarVelocityPiNeqOmega</code> and <code>EXTERNALVARLIST=ForcedRhoBarJ</code> for <code>RhoBarVelocityPiNeqOmegaD2Q9Descriptor</code> and <code>ForcedRhoBarJD2Q9Descriptor</code>, respectively.</p></li>\n</ul>\n<h2 id=\"example\">Example</h2>\n<ul>\n<li>Take the <code>RhoBarVelocityPiNeqOmegaD2Q9Descriptor</code> as an example to illustrate the structure, it inherits from <code>D2Q9DescriptorBase</code> and <code>RhoBarVelocityPiNeqOmegaDescriptorBase2D</code>. <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">template &lt;typename T&gt; struct RhoBarVelocityPiNeqOmegaD2Q9Descriptor</span><br><span class=\"line\">   : public D2Q9DescriptorBase&lt;T&gt;, </span><br><span class=\"line\">     public RhoBarVelocityPiNeqOmegaDescriptorBase2D</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    static const char name[];</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"ddqqdescriptorbase\">DdQqDescriptorBase</h3>\n<ul>\n<li><p>The <code>D2Q9DescriptorBase</code> is defined as <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">template &lt;typename T&gt; struct D2Q9DescriptorBase</span><br><span class=\"line\">    : public D2Q9Constants&lt;T&gt;, public DefaultRoundOffPolicy&lt;T&gt;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    typedef D2Q9DescriptorBase&lt;T&gt; BaseDescriptor;</span><br><span class=\"line\">    enum &#123; numPop=D2Q9Constants&lt;T&gt;::q &#125;;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p></li>\n<li><p>where the lattce-related variables are defined in <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">template &lt;typename T&gt; struct D2Q9Constants</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    enum &#123; d = 2, q = 9 &#125;;        ///&lt; number of dimensions/distr. functions</span><br><span class=\"line\">    static const T invD;          ///&lt; 1 / (number of dimensions)</span><br><span class=\"line\">    static const int vicinity;    ///&lt; size of neighborhood</span><br><span class=\"line\">    static const int c[q][d];     ///&lt; lattice directions</span><br><span class=\"line\">    static const int cNormSqr[q]; ///&lt; norm-square of the vector c</span><br><span class=\"line\">    static const T t[q];          ///&lt; lattice weights</span><br><span class=\"line\">    static const T cs2;           ///&lt; lattice constant cs2 (in BGK, this is the square-speed-of-sound)</span><br><span class=\"line\">    static const T invCs2;        ///&lt; 1 / cs2</span><br><span class=\"line\">    &#125;;</span><br></pre></td></tr></table></figure></p></li>\n</ul>\n<h3 id=\"externalvarlistdescriptorbasexd\">EXTERNALVARLISTDescriptorBaseXD</h3>\n<ul>\n<li><p>The <code>RhoBarVelocityPiNeqOmegaDescriptorBase2D</code> has a component <code>ExternalField</code> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">struct RhoBarVelocityPiNeqOmegaDescriptorBase2D &#123;</span><br><span class=\"line\">    typedef RhoBarVelocityPiNeqOmegaDescriptor2D ExternalField;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p></li>\n<li>and the <code>RhoBarVelocityPiNeqOmegaDescriptor2D</code> would store</li>\n<li>the number of scalars,</li>\n<li>the number of the species,</li>\n<li>the index each variable starts,</li>\n<li><p>the size of each variable (2 for 2d and 3 for 3d tensors), <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">struct RhoBarVelocityPiNeqOmegaDescriptor2D &#123;</span><br><span class=\"line\">    static const int numScalars       = 7;</span><br><span class=\"line\">    static const int numSpecies       = 4;</span><br><span class=\"line\">    static const int rhoBarBeginsAt   = 0;</span><br><span class=\"line\">    static const int sizeOfRhoBar     = 1;</span><br><span class=\"line\">    static const int velocityBeginsAt = 1; </span><br><span class=\"line\">    static const int sizeOfVelocity   = 2;</span><br><span class=\"line\">    static const int piNeqBeginsAt    = 3;</span><br><span class=\"line\">    static const int sizeOfPiNeq      = 3;</span><br><span class=\"line\">    static const int omegaBeginsAt    = 6;</span><br><span class=\"line\">    static const int sizeOfOmega      = 1;</span><br><span class=\"line\">    static const int sizeOfForce      = 0;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p></li>\n<li><p>meaning <code>ForcedRhoBarJdescriptor3DRhoBarVelocityPiNeqOmegaDescriptor2D</code> have 4 species including <code>rhoBar</code>, <code>velocity</code>, <code>piNeq</code> and <code>omega</code>, with 1, 2, 3 and 1 as the sizes, respectively. So the scalar number would be <span class=\"math inline\">\\(1+2+3+1=7\\)</span> in total.</p></li>\n</ul>\n<h2 id=\"setting-up-the-external-field\">Setting up the external field</h2>\n<p>Once the descriptor with an external field is defined, the memory of <code>external</code> inside the <code>cell</code> is allocated (see <code>src/core/cell.h</code>). For initializing or simply setting values to the external field, one would use the data processor, i.e., <code>setExternalVector</code> or <code>setExternalScalar</code> with the variable start index like <code>DESCRIPTOR&lt;T&gt;::ExternalField::rhoBarBeginsAt</code>.</p>\n<ul>\n<li><p>An example of external force flow would be found in the project <code>/examples/showCases/womersley/</code>. Where the external forces is set by an array, i.e., the force is uniformally deployed in the domain. <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Array&lt;T,NSDESCRIPTOR&lt;T&gt;::d&gt; force(womersleyForce((T)0, amplitude, frequency, parameters),0.);</span><br><span class=\"line\">setExternalVector(lattice,lattice.getBoundingBox(),NSDESCRIPTOR&lt;T&gt;::ExternalField::forceBeginsAt,force);</span><br></pre></td></tr></table></figure></p></li>\n<li><p>For position-dependent external variables, one could use a <code>MultiScalarFieldXD</code> or <code>MultiTensorFieldXD</code>, initialized from a functional, as the input of <code>setExternalVector</code> or <code>setExternalScalar</code> and use a functional to initialize the <code>MultiXXXXFieldXD</code>. For the setup of the absorbing layers, I use <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MultiScalarField2D&lt;T&gt; sigma(lattice);</span><br><span class=\"line\">WaveAbsorptionSigmaFunction2D&lt;T&gt; sigmaFunction2D(lattice.getBoundingBox(), numSpongeCells ,bulkValue);</span><br><span class=\"line\">setToFunction(sigma, lattice.getBoundingBox(), sigmaFunction2D);</span><br><span class=\"line\">setExternalScalar(lattice, lattice.getBoundingBox(),</span><br><span class=\"line\">                      DESCRIPTOR&lt;T&gt;::ExternalField::sigmaBeginsAt, sigma );</span><br></pre></td></tr></table></figure></p></li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>For the lattice Boltzmann method, the descriptor has to be defined in advance. Here we briefly discuss the descriptor structure in Palabos.</p>","more":"<h2 id=\"descriptor\">Descriptor</h2>\n<p>In palabos, the descriptors are stored in <code>/src/latticeBoltzmann/nearestNeighborLatticesXD.h</code>, where <span class=\"math inline\">\\(X=2,3\\)</span>.</p>\n<p>Each descriptor is a <strong>combination</strong> of the lattice schema and the external field, so that must inherit from at least two <em><code>DescriptorBase</code></em> including the basic <em><code>DdQqDescriptorBase</code></em> defining the lattice-related variables, and a <em><code>EXTERNALVARLISTDescriptorBase</code></em> with external variables or <code>NoExternalFieldBase</code> if the problem involves no external variables. (<em><code>DdQqDescriptorBase</code></em> could be <code>D2Q9DescriptorBase</code>, and <em><code>EXTERNALVARLISTDescriptorBase</code></em> could be <code>RhoBarVelocityPiNeqOmegaDescriptorBase2D</code>).</p>\n<ul>\n<li><p>In <em><code>DdQqDescriptorBase</code></em>, it defines the <code>d</code>, the <code>q</code>, the lattice velocity <code>c[q][d]</code>, lattice weight <code>t[q]</code>, square speed of sound <code>cs2</code> and so on by means of <code>DdQqConstants</code>.</p></li>\n<li><p>The <em><code>EXTERNALVARLISTDescriptorBaseXD</code></em> is written in <code>/src/latticeBoltzmann/externalFields.h</code>. In <em><code>EXTERNALVARLISTDescriptorBaseXD</code></em>, it defines the problem-specific <code>ExternalField</code> as <code>EXTERNALVARLISTDescriptorXD</code>. Here the <code>DdQq</code> of <code>EXTERNALVARLISTDdQqDescriptor</code> must correspond to the one in <code>DdQqDescriptorBase</code>. Here above <code>EXTERNALVARLIST-</code> represents the name list of the external variables, e.g., <code>EXTERNALVARLIST=RhoBarVelocityPiNeqOmega</code> and <code>EXTERNALVARLIST=ForcedRhoBarJ</code> for <code>RhoBarVelocityPiNeqOmegaD2Q9Descriptor</code> and <code>ForcedRhoBarJD2Q9Descriptor</code>, respectively.</p></li>\n</ul>\n<h2 id=\"example\">Example</h2>\n<ul>\n<li>Take the <code>RhoBarVelocityPiNeqOmegaD2Q9Descriptor</code> as an example to illustrate the structure, it inherits from <code>D2Q9DescriptorBase</code> and <code>RhoBarVelocityPiNeqOmegaDescriptorBase2D</code>. <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">template &lt;typename T&gt; struct RhoBarVelocityPiNeqOmegaD2Q9Descriptor</span><br><span class=\"line\">   : public D2Q9DescriptorBase&lt;T&gt;, </span><br><span class=\"line\">     public RhoBarVelocityPiNeqOmegaDescriptorBase2D</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    static const char name[];</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"ddqqdescriptorbase\">DdQqDescriptorBase</h3>\n<ul>\n<li><p>The <code>D2Q9DescriptorBase</code> is defined as <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">template &lt;typename T&gt; struct D2Q9DescriptorBase</span><br><span class=\"line\">    : public D2Q9Constants&lt;T&gt;, public DefaultRoundOffPolicy&lt;T&gt;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    typedef D2Q9DescriptorBase&lt;T&gt; BaseDescriptor;</span><br><span class=\"line\">    enum &#123; numPop=D2Q9Constants&lt;T&gt;::q &#125;;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p></li>\n<li><p>where the lattce-related variables are defined in <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">template &lt;typename T&gt; struct D2Q9Constants</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    enum &#123; d = 2, q = 9 &#125;;        ///&lt; number of dimensions/distr. functions</span><br><span class=\"line\">    static const T invD;          ///&lt; 1 / (number of dimensions)</span><br><span class=\"line\">    static const int vicinity;    ///&lt; size of neighborhood</span><br><span class=\"line\">    static const int c[q][d];     ///&lt; lattice directions</span><br><span class=\"line\">    static const int cNormSqr[q]; ///&lt; norm-square of the vector c</span><br><span class=\"line\">    static const T t[q];          ///&lt; lattice weights</span><br><span class=\"line\">    static const T cs2;           ///&lt; lattice constant cs2 (in BGK, this is the square-speed-of-sound)</span><br><span class=\"line\">    static const T invCs2;        ///&lt; 1 / cs2</span><br><span class=\"line\">    &#125;;</span><br></pre></td></tr></table></figure></p></li>\n</ul>\n<h3 id=\"externalvarlistdescriptorbasexd\">EXTERNALVARLISTDescriptorBaseXD</h3>\n<ul>\n<li><p>The <code>RhoBarVelocityPiNeqOmegaDescriptorBase2D</code> has a component <code>ExternalField</code> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">struct RhoBarVelocityPiNeqOmegaDescriptorBase2D &#123;</span><br><span class=\"line\">    typedef RhoBarVelocityPiNeqOmegaDescriptor2D ExternalField;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p></li>\n<li>and the <code>RhoBarVelocityPiNeqOmegaDescriptor2D</code> would store</li>\n<li>the number of scalars,</li>\n<li>the number of the species,</li>\n<li>the index each variable starts,</li>\n<li><p>the size of each variable (2 for 2d and 3 for 3d tensors), <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">struct RhoBarVelocityPiNeqOmegaDescriptor2D &#123;</span><br><span class=\"line\">    static const int numScalars       = 7;</span><br><span class=\"line\">    static const int numSpecies       = 4;</span><br><span class=\"line\">    static const int rhoBarBeginsAt   = 0;</span><br><span class=\"line\">    static const int sizeOfRhoBar     = 1;</span><br><span class=\"line\">    static const int velocityBeginsAt = 1; </span><br><span class=\"line\">    static const int sizeOfVelocity   = 2;</span><br><span class=\"line\">    static const int piNeqBeginsAt    = 3;</span><br><span class=\"line\">    static const int sizeOfPiNeq      = 3;</span><br><span class=\"line\">    static const int omegaBeginsAt    = 6;</span><br><span class=\"line\">    static const int sizeOfOmega      = 1;</span><br><span class=\"line\">    static const int sizeOfForce      = 0;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p></li>\n<li><p>meaning <code>ForcedRhoBarJdescriptor3DRhoBarVelocityPiNeqOmegaDescriptor2D</code> have 4 species including <code>rhoBar</code>, <code>velocity</code>, <code>piNeq</code> and <code>omega</code>, with 1, 2, 3 and 1 as the sizes, respectively. So the scalar number would be <span class=\"math inline\">\\(1+2+3+1=7\\)</span> in total.</p></li>\n</ul>\n<h2 id=\"setting-up-the-external-field\">Setting up the external field</h2>\n<p>Once the descriptor with an external field is defined, the memory of <code>external</code> inside the <code>cell</code> is allocated (see <code>src/core/cell.h</code>). For initializing or simply setting values to the external field, one would use the data processor, i.e., <code>setExternalVector</code> or <code>setExternalScalar</code> with the variable start index like <code>DESCRIPTOR&lt;T&gt;::ExternalField::rhoBarBeginsAt</code>.</p>\n<ul>\n<li><p>An example of external force flow would be found in the project <code>/examples/showCases/womersley/</code>. Where the external forces is set by an array, i.e., the force is uniformally deployed in the domain. <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Array&lt;T,NSDESCRIPTOR&lt;T&gt;::d&gt; force(womersleyForce((T)0, amplitude, frequency, parameters),0.);</span><br><span class=\"line\">setExternalVector(lattice,lattice.getBoundingBox(),NSDESCRIPTOR&lt;T&gt;::ExternalField::forceBeginsAt,force);</span><br></pre></td></tr></table></figure></p></li>\n<li><p>For position-dependent external variables, one could use a <code>MultiScalarFieldXD</code> or <code>MultiTensorFieldXD</code>, initialized from a functional, as the input of <code>setExternalVector</code> or <code>setExternalScalar</code> and use a functional to initialize the <code>MultiXXXXFieldXD</code>. For the setup of the absorbing layers, I use <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MultiScalarField2D&lt;T&gt; sigma(lattice);</span><br><span class=\"line\">WaveAbsorptionSigmaFunction2D&lt;T&gt; sigmaFunction2D(lattice.getBoundingBox(), numSpongeCells ,bulkValue);</span><br><span class=\"line\">setToFunction(sigma, lattice.getBoundingBox(), sigmaFunction2D);</span><br><span class=\"line\">setExternalScalar(lattice, lattice.getBoundingBox(),</span><br><span class=\"line\">                      DESCRIPTOR&lt;T&gt;::ExternalField::sigmaBeginsAt, sigma );</span><br></pre></td></tr></table></figure></p></li>\n</ul>"},{"title":"Palabos Dynamics Calling Relationships","date":"2018-09-10T19:59:43.000Z","toc":"ture","_content":"\nIn this article, the calling relationship of dynamics would be shown which helps write your own dynamic classes. The dynamics classes are mainly written in */src/basicDynamics/* and */src/complexDynamics/*. Here we will take `BGKdynamics` and `MRTdynamics` as examples for illustration.\n\n### BGKdynamics\n- The calling graph: `BGKdynamics::collide()` <-- `dynamicsTemplates::bgk_ma2_collision()` <-- `dynamicsTemplatesImpl::bgk_ma2_collision()`.\n- The declaration and implementation of functions in class `BGKdynamics` are in *src/basicDynamics/isoThermalDynamics.h* and *../isoThermalDynamics.hh*, respectively.\n- The structs `dynamicsTemplates` and `dynamicsTemplatesImpl` and the two member functions with the same name `bgk_ma2_collision()` are written in *src/latticeBoltzmann/dynamicsTemplates.h*\n\n### MRTdynamics\n- The calling graph: `MRTdynamics::collide()` <-- `mrtTemplates::mrtCollision()` <-- `mrtTemplatesImpl::mrtCollision()`.\n- The declaration and implementation of functions in class `MRTdynamics` are in *src/complexDynamics/mrtDynamics.h* and *../mrtDynamics.hh*, respectively.\n- The structs `mrtTemplates` and `mrtTemplatesImpl` and the two member functions with the same name `mrtCollision()` are written in *src/latticeBoltzmann/mrtTemplates.h*\n\n### Conclusion\n- The kernal function is the `XXXdynamics::collide()` which implements the collision step.\n- The `collide()` would call different computations from different `Templates` like `dynamicsTemplates`, `mrtTemplates`, `momentTemplates` and so on.\n- The `collide()` is implemented on `cell` level. So for non-local dynamics, a superclass `class NonLocalDynamics2D : public CompositeDynamics<T,Descriptor>` might be used.\n\nTo better understand the calling relations, one could use [Doxygen+GraphViz](https://romanegloo.wordpress.com/2012/03/29/generating-a-callgraph-by-using-doxygen-and-graphviz-13/) to plot the call graph or get use of the structure or call graph/hierachy function within IDE.\n","source":"_posts/Palabos-Dynamics-Calling-Relationships.md","raw":"---\ntitle: Palabos Dynamics Calling Relationships\ndate: 2018-09-10 15:59:43\ntags: [Palabos, LBM, CFD]\ncategories: Palabos\ntoc: ture\n---\n\nIn this article, the calling relationship of dynamics would be shown which helps write your own dynamic classes. The dynamics classes are mainly written in */src/basicDynamics/* and */src/complexDynamics/*. Here we will take `BGKdynamics` and `MRTdynamics` as examples for illustration.\n\n### BGKdynamics\n- The calling graph: `BGKdynamics::collide()` <-- `dynamicsTemplates::bgk_ma2_collision()` <-- `dynamicsTemplatesImpl::bgk_ma2_collision()`.\n- The declaration and implementation of functions in class `BGKdynamics` are in *src/basicDynamics/isoThermalDynamics.h* and *../isoThermalDynamics.hh*, respectively.\n- The structs `dynamicsTemplates` and `dynamicsTemplatesImpl` and the two member functions with the same name `bgk_ma2_collision()` are written in *src/latticeBoltzmann/dynamicsTemplates.h*\n\n### MRTdynamics\n- The calling graph: `MRTdynamics::collide()` <-- `mrtTemplates::mrtCollision()` <-- `mrtTemplatesImpl::mrtCollision()`.\n- The declaration and implementation of functions in class `MRTdynamics` are in *src/complexDynamics/mrtDynamics.h* and *../mrtDynamics.hh*, respectively.\n- The structs `mrtTemplates` and `mrtTemplatesImpl` and the two member functions with the same name `mrtCollision()` are written in *src/latticeBoltzmann/mrtTemplates.h*\n\n### Conclusion\n- The kernal function is the `XXXdynamics::collide()` which implements the collision step.\n- The `collide()` would call different computations from different `Templates` like `dynamicsTemplates`, `mrtTemplates`, `momentTemplates` and so on.\n- The `collide()` is implemented on `cell` level. So for non-local dynamics, a superclass `class NonLocalDynamics2D : public CompositeDynamics<T,Descriptor>` might be used.\n\nTo better understand the calling relations, one could use [Doxygen+GraphViz](https://romanegloo.wordpress.com/2012/03/29/generating-a-callgraph-by-using-doxygen-and-graphviz-13/) to plot the call graph or get use of the structure or call graph/hierachy function within IDE.\n","slug":"Palabos-Dynamics-Calling-Relationships","published":1,"updated":"2018-09-10T20:30:26.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjqb6na6f00177pphy85lykoe","content":"<p>In this article, the calling relationship of dynamics would be shown which helps write your own dynamic classes. The dynamics classes are mainly written in <em>/src/basicDynamics/</em> and <em>/src/complexDynamics/</em>. Here we will take <code>BGKdynamics</code> and <code>MRTdynamics</code> as examples for illustration.</p>\n<h3 id=\"bgkdynamics\">BGKdynamics</h3>\n<ul>\n<li>The calling graph: <code>BGKdynamics::collide()</code> &lt;-- <code>dynamicsTemplates::bgk_ma2_collision()</code> &lt;-- <code>dynamicsTemplatesImpl::bgk_ma2_collision()</code>.</li>\n<li>The declaration and implementation of functions in class <code>BGKdynamics</code> are in <em>src/basicDynamics/isoThermalDynamics.h</em> and <em>../isoThermalDynamics.hh</em>, respectively.</li>\n<li>The structs <code>dynamicsTemplates</code> and <code>dynamicsTemplatesImpl</code> and the two member functions with the same name <code>bgk_ma2_collision()</code> are written in <em>src/latticeBoltzmann/dynamicsTemplates.h</em></li>\n</ul>\n<h3 id=\"mrtdynamics\">MRTdynamics</h3>\n<ul>\n<li>The calling graph: <code>MRTdynamics::collide()</code> &lt;-- <code>mrtTemplates::mrtCollision()</code> &lt;-- <code>mrtTemplatesImpl::mrtCollision()</code>.</li>\n<li>The declaration and implementation of functions in class <code>MRTdynamics</code> are in <em>src/complexDynamics/mrtDynamics.h</em> and <em>../mrtDynamics.hh</em>, respectively.</li>\n<li>The structs <code>mrtTemplates</code> and <code>mrtTemplatesImpl</code> and the two member functions with the same name <code>mrtCollision()</code> are written in <em>src/latticeBoltzmann/mrtTemplates.h</em></li>\n</ul>\n<h3 id=\"conclusion\">Conclusion</h3>\n<ul>\n<li>The kernal function is the <code>XXXdynamics::collide()</code> which implements the collision step.</li>\n<li>The <code>collide()</code> would call different computations from different <code>Templates</code> like <code>dynamicsTemplates</code>, <code>mrtTemplates</code>, <code>momentTemplates</code> and so on.</li>\n<li>The <code>collide()</code> is implemented on <code>cell</code> level. So for non-local dynamics, a superclass <code>class NonLocalDynamics2D : public CompositeDynamics&lt;T,Descriptor&gt;</code> might be used.</li>\n</ul>\n<p>To better understand the calling relations, one could use <a href=\"https://romanegloo.wordpress.com/2012/03/29/generating-a-callgraph-by-using-doxygen-and-graphviz-13/\" target=\"_blank\" rel=\"noopener\">Doxygen+GraphViz</a> to plot the call graph or get use of the structure or call graph/hierachy function within IDE.</p>\n","site":{"data":{}},"excerpt":"","more":"<p>In this article, the calling relationship of dynamics would be shown which helps write your own dynamic classes. The dynamics classes are mainly written in <em>/src/basicDynamics/</em> and <em>/src/complexDynamics/</em>. Here we will take <code>BGKdynamics</code> and <code>MRTdynamics</code> as examples for illustration.</p>\n<h3 id=\"bgkdynamics\">BGKdynamics</h3>\n<ul>\n<li>The calling graph: <code>BGKdynamics::collide()</code> &lt;-- <code>dynamicsTemplates::bgk_ma2_collision()</code> &lt;-- <code>dynamicsTemplatesImpl::bgk_ma2_collision()</code>.</li>\n<li>The declaration and implementation of functions in class <code>BGKdynamics</code> are in <em>src/basicDynamics/isoThermalDynamics.h</em> and <em>../isoThermalDynamics.hh</em>, respectively.</li>\n<li>The structs <code>dynamicsTemplates</code> and <code>dynamicsTemplatesImpl</code> and the two member functions with the same name <code>bgk_ma2_collision()</code> are written in <em>src/latticeBoltzmann/dynamicsTemplates.h</em></li>\n</ul>\n<h3 id=\"mrtdynamics\">MRTdynamics</h3>\n<ul>\n<li>The calling graph: <code>MRTdynamics::collide()</code> &lt;-- <code>mrtTemplates::mrtCollision()</code> &lt;-- <code>mrtTemplatesImpl::mrtCollision()</code>.</li>\n<li>The declaration and implementation of functions in class <code>MRTdynamics</code> are in <em>src/complexDynamics/mrtDynamics.h</em> and <em>../mrtDynamics.hh</em>, respectively.</li>\n<li>The structs <code>mrtTemplates</code> and <code>mrtTemplatesImpl</code> and the two member functions with the same name <code>mrtCollision()</code> are written in <em>src/latticeBoltzmann/mrtTemplates.h</em></li>\n</ul>\n<h3 id=\"conclusion\">Conclusion</h3>\n<ul>\n<li>The kernal function is the <code>XXXdynamics::collide()</code> which implements the collision step.</li>\n<li>The <code>collide()</code> would call different computations from different <code>Templates</code> like <code>dynamicsTemplates</code>, <code>mrtTemplates</code>, <code>momentTemplates</code> and so on.</li>\n<li>The <code>collide()</code> is implemented on <code>cell</code> level. So for non-local dynamics, a superclass <code>class NonLocalDynamics2D : public CompositeDynamics&lt;T,Descriptor&gt;</code> might be used.</li>\n</ul>\n<p>To better understand the calling relations, one could use <a href=\"https://romanegloo.wordpress.com/2012/03/29/generating-a-callgraph-by-using-doxygen-and-graphviz-13/\" target=\"_blank\" rel=\"noopener\">Doxygen+GraphViz</a> to plot the call graph or get use of the structure or call graph/hierachy function within IDE.</p>\n"},{"title":"Practical Vocal Acoustics Ch1-Modes and Registers","date":"2018-08-12T03:25:34.000Z","_content":"\n\nThe **mode of phonation** relates to three factors: breath pressure, airflow, and glottal resistance. The modes could be decided by the glottal resistance which equals the breath pressure by the airflow. The mode could be:\n- **pressed phonation**: high resistance; stronger high harmonics; \"metallic\", \"overly bright\",\n- **breathy phonation**: low resistance; weaker high harmonics; \"airy\", \"fluty\",\n- **flow phonation**: moderate resistance.\n\nDifferent from the modes of [CVT (Complete Vocal Technique)](https://completevocal.institute/), which is about the register and sound production mechanisms, including neutral, curbing, overdrive, and edge. The modes here is about phonation. It is more related to the sound, which is the results of different mechanisms, instead of the mechanisms itself.\n\nThe **laryngeal register** refers to the muscular adjustment of the vocal folds for pitch regulation, which is primarily controlled by:\n- **the thyroarytenoids** (TA): vocal fold shortening, thickening vocal fold muscles.\n- **the cricothyroids** (CT): vocal fold stretching, thinning muscles that lie partly outside the larynx.\n\nTwo laryngeal registers list here are:\n- **chestier** (shorter, thicker vocal folds), more and stronger high harmonics <-- the more complex pressure form <-- vertical phase difference <-- thicker vocal folds <-- TA,\n- **headier** (longer, thinner vocal folds), fewer and weaker high harmonics <-- more sinusoidal pressure wave <-- little to no vertical phase difference <-- thinner vocal folds <-- CT.\n\nThe chestier and headier register might correspond to the modal voice and falsetto voice register, respectively, in the four-register system together with the vocal fry register and the whistle register.\n\nHere the word **register** should be carefully used, which is determined by three key elements: \n1. A register is composed of contiguous pitches;\n2. Pitches within any given register are produced in the same physiological manner;\n3. Pitches within any given register share the same basic timbre.\n\n> By the word register we mean a series of consecutive and homogeneous tones going from low to high, produced by the development of the same mechanical principle, and whose nature differs essentially from another series of tones, equally consecutive and homogeneous, produced by another mechanical principle (Garcia, 1847)\n","source":"_posts/Practical-Vocal-Acoustics-Ch1-p5-Mode-of-Phonation.md","raw":"---\ntitle: Practical Vocal Acoustics Ch1-Modes and Registers\ndate: 2018-08-11 23:25:34\ntags: [Practical Vocal Acoustics, Voice]\ncategories: Voice\n---\n\n\nThe **mode of phonation** relates to three factors: breath pressure, airflow, and glottal resistance. The modes could be decided by the glottal resistance which equals the breath pressure by the airflow. The mode could be:\n- **pressed phonation**: high resistance; stronger high harmonics; \"metallic\", \"overly bright\",\n- **breathy phonation**: low resistance; weaker high harmonics; \"airy\", \"fluty\",\n- **flow phonation**: moderate resistance.\n\nDifferent from the modes of [CVT (Complete Vocal Technique)](https://completevocal.institute/), which is about the register and sound production mechanisms, including neutral, curbing, overdrive, and edge. The modes here is about phonation. It is more related to the sound, which is the results of different mechanisms, instead of the mechanisms itself.\n\nThe **laryngeal register** refers to the muscular adjustment of the vocal folds for pitch regulation, which is primarily controlled by:\n- **the thyroarytenoids** (TA): vocal fold shortening, thickening vocal fold muscles.\n- **the cricothyroids** (CT): vocal fold stretching, thinning muscles that lie partly outside the larynx.\n\nTwo laryngeal registers list here are:\n- **chestier** (shorter, thicker vocal folds), more and stronger high harmonics <-- the more complex pressure form <-- vertical phase difference <-- thicker vocal folds <-- TA,\n- **headier** (longer, thinner vocal folds), fewer and weaker high harmonics <-- more sinusoidal pressure wave <-- little to no vertical phase difference <-- thinner vocal folds <-- CT.\n\nThe chestier and headier register might correspond to the modal voice and falsetto voice register, respectively, in the four-register system together with the vocal fry register and the whistle register.\n\nHere the word **register** should be carefully used, which is determined by three key elements: \n1. A register is composed of contiguous pitches;\n2. Pitches within any given register are produced in the same physiological manner;\n3. Pitches within any given register share the same basic timbre.\n\n> By the word register we mean a series of consecutive and homogeneous tones going from low to high, produced by the development of the same mechanical principle, and whose nature differs essentially from another series of tones, equally consecutive and homogeneous, produced by another mechanical principle (Garcia, 1847)\n","slug":"Practical-Vocal-Acoustics-Ch1-p5-Mode-of-Phonation","published":1,"updated":"2018-08-12T04:21:12.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjqb6na6g00197pph1x0rp2kd","content":"<p>The <strong>mode of phonation</strong> relates to three factors: breath pressure, airflow, and glottal resistance. The modes could be decided by the glottal resistance which equals the breath pressure by the airflow. The mode could be: - <strong>pressed phonation</strong>: high resistance; stronger high harmonics; &quot;metallic&quot;, &quot;overly bright&quot;, - <strong>breathy phonation</strong>: low resistance; weaker high harmonics; &quot;airy&quot;, &quot;fluty&quot;, - <strong>flow phonation</strong>: moderate resistance.</p>\n<p>Different from the modes of <a href=\"https://completevocal.institute/\" target=\"_blank\" rel=\"noopener\">CVT (Complete Vocal Technique)</a>, which is about the register and sound production mechanisms, including neutral, curbing, overdrive, and edge. The modes here is about phonation. It is more related to the sound, which is the results of different mechanisms, instead of the mechanisms itself.</p>\n<p>The <strong>laryngeal register</strong> refers to the muscular adjustment of the vocal folds for pitch regulation, which is primarily controlled by: - <strong>the thyroarytenoids</strong> (TA): vocal fold shortening, thickening vocal fold muscles. - <strong>the cricothyroids</strong> (CT): vocal fold stretching, thinning muscles that lie partly outside the larynx.</p>\n<p>Two laryngeal registers list here are: - <strong>chestier</strong> (shorter, thicker vocal folds), more and stronger high harmonics &lt;-- the more complex pressure form &lt;-- vertical phase difference &lt;-- thicker vocal folds &lt;-- TA, - <strong>headier</strong> (longer, thinner vocal folds), fewer and weaker high harmonics &lt;-- more sinusoidal pressure wave &lt;-- little to no vertical phase difference &lt;-- thinner vocal folds &lt;-- CT.</p>\n<p>The chestier and headier register might correspond to the modal voice and falsetto voice register, respectively, in the four-register system together with the vocal fry register and the whistle register.</p>\n<p>Here the word <strong>register</strong> should be carefully used, which is determined by three key elements: 1. A register is composed of contiguous pitches; 2. Pitches within any given register are produced in the same physiological manner; 3. Pitches within any given register share the same basic timbre.</p>\n<blockquote>\n<p>By the word register we mean a series of consecutive and homogeneous tones going from low to high, produced by the development of the same mechanical principle, and whose nature differs essentially from another series of tones, equally consecutive and homogeneous, produced by another mechanical principle (Garcia, 1847)</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<p>The <strong>mode of phonation</strong> relates to three factors: breath pressure, airflow, and glottal resistance. The modes could be decided by the glottal resistance which equals the breath pressure by the airflow. The mode could be: - <strong>pressed phonation</strong>: high resistance; stronger high harmonics; &quot;metallic&quot;, &quot;overly bright&quot;, - <strong>breathy phonation</strong>: low resistance; weaker high harmonics; &quot;airy&quot;, &quot;fluty&quot;, - <strong>flow phonation</strong>: moderate resistance.</p>\n<p>Different from the modes of <a href=\"https://completevocal.institute/\" target=\"_blank\" rel=\"noopener\">CVT (Complete Vocal Technique)</a>, which is about the register and sound production mechanisms, including neutral, curbing, overdrive, and edge. The modes here is about phonation. It is more related to the sound, which is the results of different mechanisms, instead of the mechanisms itself.</p>\n<p>The <strong>laryngeal register</strong> refers to the muscular adjustment of the vocal folds for pitch regulation, which is primarily controlled by: - <strong>the thyroarytenoids</strong> (TA): vocal fold shortening, thickening vocal fold muscles. - <strong>the cricothyroids</strong> (CT): vocal fold stretching, thinning muscles that lie partly outside the larynx.</p>\n<p>Two laryngeal registers list here are: - <strong>chestier</strong> (shorter, thicker vocal folds), more and stronger high harmonics &lt;-- the more complex pressure form &lt;-- vertical phase difference &lt;-- thicker vocal folds &lt;-- TA, - <strong>headier</strong> (longer, thinner vocal folds), fewer and weaker high harmonics &lt;-- more sinusoidal pressure wave &lt;-- little to no vertical phase difference &lt;-- thinner vocal folds &lt;-- CT.</p>\n<p>The chestier and headier register might correspond to the modal voice and falsetto voice register, respectively, in the four-register system together with the vocal fry register and the whistle register.</p>\n<p>Here the word <strong>register</strong> should be carefully used, which is determined by three key elements: 1. A register is composed of contiguous pitches; 2. Pitches within any given register are produced in the same physiological manner; 3. Pitches within any given register share the same basic timbre.</p>\n<blockquote>\n<p>By the word register we mean a series of consecutive and homogeneous tones going from low to high, produced by the development of the same mechanical principle, and whose nature differs essentially from another series of tones, equally consecutive and homogeneous, produced by another mechanical principle (Garcia, 1847)</p>\n</blockquote>\n"},{"title":"Practical Vocal Acoustics Ch3 Vocal Resonance","date":"2018-08-12T13:36:38.000Z","_content":"\n","source":"_posts/Practical-Vocal-Acoustics-Ch3-Vocal-Resonance.md","raw":"---\ntitle: Practical Vocal Acoustics Ch3 Vocal Resonance\ndate: 2018-08-12 09:36:38\ntags: [Practical Vocal Acoustics, Voice]\ncategories: Voice\n---\n\n","slug":"Practical-Vocal-Acoustics-Ch3-Vocal-Resonance","published":1,"updated":"2018-08-12T13:37:34.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjqb6na6h001e7pphg9sz57k9","content":"\n","site":{"data":{}},"excerpt":"","more":"\n"},{"title":"Reflection at Discontinuities","date":"2018-10-22T03:58:25.000Z","mathjax":true,"mathjax2":true,"_content":"I got suddenly confused about how the reflection coefficient is computed, and it took me a whole night to figure out my mistake.\n\n<!--more-->\n\nConsider such a case, when a wave is propagating, there is an abrupt discontinuity, which separates two different medium $M1$ and $M2$ to the left and right of the discontinuity point, respectively. The two medium has two different characteristic impedance $Z_1$ and $Z_2$. (It could also be the same media with different cross-section areas in a tube).\n\nThe pressure in $M1$ is decomposed into a right-going wave $p_1^+$ and a left-going wave $p_1^-$, which correspond to incident and reflection, respectively. So the right- and left-going volume flow rate are $\\dfrac{p_1^+}{Z_1}$ and $-\\dfrac{p_1^-}{Z_1}$. (the \"$-$\" sign means the left-going traveling direction) \n\nAssuming the continuity of the pressure and the conservation of the volume flow at the boundary, we have:\n$$p_1^+ + p_1^- = p_2^+ + p_2^-  \\quad\\quad (1)$$\nand \n$$\\dfrac{p_1^+ - p_1^-}{Z_1} = \\dfrac{p_2^+ - p_2^-}{Z_2}\\quad\\quad (2)$$\n\n**From here the problem comes.** I try to compute the reflection coefficient from the above two equations, but of course, I can't get anything. **This is because** the reflection coefficient is not related to $Z\\_2$. Instead, it relates to the load impedance $Z\\_{load}$, e.g., the input impedance of the system to the right of the discontinuity point. So we will replace the eq. (1) and (2) by \n$$p\\_1^+ + p\\_1^- = p\\_2   \\quad\\quad (3)$$\nand\n$$\\dfrac{p_1^+ - p\\_1^-}{Z_1} = \\dfrac{p\\_2}{Z\\_{load}} \\quad\\quad (4)$$.\nThis way, we get the reflection coefficient\n$$R = \\dfrac{Z_{load}-Z\\_1}{Z\\_{load}+Z\\_1} \\quad\\quad(5)$$\n\n**Wait!** But why I always see the reflection coefficient with two different characteristic impedances? \n**The answer is,** to calculate the reflection coefficient based on characteristic impedance, it is assumed that $p_2^-=0$, indicating an infinite length of $M2$ with no reflection or right-going wave. This way the input impedance of $M2$ is simply its characteristic impedance $Z\\_2$. Then we get\n$$R = \\dfrac{Z\\_2-Z\\_1}{Z\\_2+Z\\_1} \\quad\\quad(6)$$\n","source":"_posts/Reflection-at-Discontinuities.md","raw":"---\ntitle: Reflection at Discontinuities\ndate: 2018-10-21 23:58:25\ntags: [Acoustics]\ncategories: Acoustics\nmathjax: true\nmathjax2: true\n---\nI got suddenly confused about how the reflection coefficient is computed, and it took me a whole night to figure out my mistake.\n\n<!--more-->\n\nConsider such a case, when a wave is propagating, there is an abrupt discontinuity, which separates two different medium $M1$ and $M2$ to the left and right of the discontinuity point, respectively. The two medium has two different characteristic impedance $Z_1$ and $Z_2$. (It could also be the same media with different cross-section areas in a tube).\n\nThe pressure in $M1$ is decomposed into a right-going wave $p_1^+$ and a left-going wave $p_1^-$, which correspond to incident and reflection, respectively. So the right- and left-going volume flow rate are $\\dfrac{p_1^+}{Z_1}$ and $-\\dfrac{p_1^-}{Z_1}$. (the \"$-$\" sign means the left-going traveling direction) \n\nAssuming the continuity of the pressure and the conservation of the volume flow at the boundary, we have:\n$$p_1^+ + p_1^- = p_2^+ + p_2^-  \\quad\\quad (1)$$\nand \n$$\\dfrac{p_1^+ - p_1^-}{Z_1} = \\dfrac{p_2^+ - p_2^-}{Z_2}\\quad\\quad (2)$$\n\n**From here the problem comes.** I try to compute the reflection coefficient from the above two equations, but of course, I can't get anything. **This is because** the reflection coefficient is not related to $Z\\_2$. Instead, it relates to the load impedance $Z\\_{load}$, e.g., the input impedance of the system to the right of the discontinuity point. So we will replace the eq. (1) and (2) by \n$$p\\_1^+ + p\\_1^- = p\\_2   \\quad\\quad (3)$$\nand\n$$\\dfrac{p_1^+ - p\\_1^-}{Z_1} = \\dfrac{p\\_2}{Z\\_{load}} \\quad\\quad (4)$$.\nThis way, we get the reflection coefficient\n$$R = \\dfrac{Z_{load}-Z\\_1}{Z\\_{load}+Z\\_1} \\quad\\quad(5)$$\n\n**Wait!** But why I always see the reflection coefficient with two different characteristic impedances? \n**The answer is,** to calculate the reflection coefficient based on characteristic impedance, it is assumed that $p_2^-=0$, indicating an infinite length of $M2$ with no reflection or right-going wave. This way the input impedance of $M2$ is simply its characteristic impedance $Z\\_2$. Then we get\n$$R = \\dfrac{Z\\_2-Z\\_1}{Z\\_2+Z\\_1} \\quad\\quad(6)$$\n","slug":"Reflection-at-Discontinuities","published":1,"updated":"2018-10-22T19:28:02.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjqb6na6j001f7pphd12gqsfv","content":"<p>I got suddenly confused about how the reflection coefficient is computed, and it took me a whole night to figure out my mistake.</p>\n<a id=\"more\"></a>\n<p>Consider such a case, when a wave is propagating, there is an abrupt discontinuity, which separates two different medium <span class=\"math inline\">\\(M1\\)</span> and <span class=\"math inline\">\\(M2\\)</span> to the left and right of the discontinuity point, respectively. The two medium has two different characteristic impedance <span class=\"math inline\">\\(Z_1\\)</span> and <span class=\"math inline\">\\(Z_2\\)</span>. (It could also be the same media with different cross-section areas in a tube).</p>\n<p>The pressure in <span class=\"math inline\">\\(M1\\)</span> is decomposed into a right-going wave <span class=\"math inline\">\\(p_1^+\\)</span> and a left-going wave <span class=\"math inline\">\\(p_1^-\\)</span>, which correspond to incident and reflection, respectively. So the right- and left-going volume flow rate are <span class=\"math inline\">\\(\\dfrac{p_1^+}{Z_1}\\)</span> and <span class=\"math inline\">\\(-\\dfrac{p_1^-}{Z_1}\\)</span>. (the &quot;<span class=\"math inline\">\\(-\\)</span>&quot; sign means the left-going traveling direction)</p>\n<p>Assuming the continuity of the pressure and the conservation of the volume flow at the boundary, we have: <span class=\"math display\">\\[p_1^+ + p_1^- = p_2^+ + p_2^-  \\quad\\quad (1)\\]</span> and <span class=\"math display\">\\[\\dfrac{p_1^+ - p_1^-}{Z_1} = \\dfrac{p_2^+ - p_2^-}{Z_2}\\quad\\quad (2)\\]</span></p>\n<p><strong>From here the problem comes.</strong> I try to compute the reflection coefficient from the above two equations, but of course, I can't get anything. <strong>This is because</strong> the reflection coefficient is not related to <span class=\"math inline\">\\(Z\\_2\\)</span>. Instead, it relates to the load impedance <span class=\"math inline\">\\(Z\\_{load}\\)</span>, e.g., the input impedance of the system to the right of the discontinuity point. So we will replace the eq. (1) and (2) by <span class=\"math display\">\\[p\\_1^+ + p\\_1^- = p\\_2   \\quad\\quad (3)\\]</span> and <span class=\"math display\">\\[\\dfrac{p_1^+ - p\\_1^-}{Z_1} = \\dfrac{p\\_2}{Z\\_{load}} \\quad\\quad (4)\\]</span>. This way, we get the reflection coefficient <span class=\"math display\">\\[R = \\dfrac{Z_{load}-Z\\_1}{Z\\_{load}+Z\\_1} \\quad\\quad(5)\\]</span></p>\n<p><strong>Wait!</strong> But why I always see the reflection coefficient with two different characteristic impedances? <strong>The answer is,</strong> to calculate the reflection coefficient based on characteristic impedance, it is assumed that <span class=\"math inline\">\\(p_2^-=0\\)</span>, indicating an infinite length of <span class=\"math inline\">\\(M2\\)</span> with no reflection or right-going wave. This way the input impedance of <span class=\"math inline\">\\(M2\\)</span> is simply its characteristic impedance <span class=\"math inline\">\\(Z\\_2\\)</span>. Then we get <span class=\"math display\">\\[R = \\dfrac{Z\\_2-Z\\_1}{Z\\_2+Z\\_1} \\quad\\quad(6)\\]</span></p>\n","site":{"data":{}},"excerpt":"<p>I got suddenly confused about how the reflection coefficient is computed, and it took me a whole night to figure out my mistake.</p>","more":"<p>Consider such a case, when a wave is propagating, there is an abrupt discontinuity, which separates two different medium <span class=\"math inline\">\\(M1\\)</span> and <span class=\"math inline\">\\(M2\\)</span> to the left and right of the discontinuity point, respectively. The two medium has two different characteristic impedance <span class=\"math inline\">\\(Z_1\\)</span> and <span class=\"math inline\">\\(Z_2\\)</span>. (It could also be the same media with different cross-section areas in a tube).</p>\n<p>The pressure in <span class=\"math inline\">\\(M1\\)</span> is decomposed into a right-going wave <span class=\"math inline\">\\(p_1^+\\)</span> and a left-going wave <span class=\"math inline\">\\(p_1^-\\)</span>, which correspond to incident and reflection, respectively. So the right- and left-going volume flow rate are <span class=\"math inline\">\\(\\dfrac{p_1^+}{Z_1}\\)</span> and <span class=\"math inline\">\\(-\\dfrac{p_1^-}{Z_1}\\)</span>. (the &quot;<span class=\"math inline\">\\(-\\)</span>&quot; sign means the left-going traveling direction)</p>\n<p>Assuming the continuity of the pressure and the conservation of the volume flow at the boundary, we have: <span class=\"math display\">\\[p_1^+ + p_1^- = p_2^+ + p_2^-  \\quad\\quad (1)\\]</span> and <span class=\"math display\">\\[\\dfrac{p_1^+ - p_1^-}{Z_1} = \\dfrac{p_2^+ - p_2^-}{Z_2}\\quad\\quad (2)\\]</span></p>\n<p><strong>From here the problem comes.</strong> I try to compute the reflection coefficient from the above two equations, but of course, I can't get anything. <strong>This is because</strong> the reflection coefficient is not related to <span class=\"math inline\">\\(Z\\_2\\)</span>. Instead, it relates to the load impedance <span class=\"math inline\">\\(Z\\_{load}\\)</span>, e.g., the input impedance of the system to the right of the discontinuity point. So we will replace the eq. (1) and (2) by <span class=\"math display\">\\[p\\_1^+ + p\\_1^- = p\\_2   \\quad\\quad (3)\\]</span> and <span class=\"math display\">\\[\\dfrac{p_1^+ - p\\_1^-}{Z_1} = \\dfrac{p\\_2}{Z\\_{load}} \\quad\\quad (4)\\]</span>. This way, we get the reflection coefficient <span class=\"math display\">\\[R = \\dfrac{Z_{load}-Z\\_1}{Z\\_{load}+Z\\_1} \\quad\\quad(5)\\]</span></p>\n<p><strong>Wait!</strong> But why I always see the reflection coefficient with two different characteristic impedances? <strong>The answer is,</strong> to calculate the reflection coefficient based on characteristic impedance, it is assumed that <span class=\"math inline\">\\(p_2^-=0\\)</span>, indicating an infinite length of <span class=\"math inline\">\\(M2\\)</span> with no reflection or right-going wave. This way the input impedance of <span class=\"math inline\">\\(M2\\)</span> is simply its characteristic impedance <span class=\"math inline\">\\(Z\\_2\\)</span>. Then we get <span class=\"math display\">\\[R = \\dfrac{Z\\_2-Z\\_1}{Z\\_2+Z\\_1} \\quad\\quad(6)\\]</span></p>"},{"title":"Selective Filter 2D - Palabos","date":"2018-09-16T03:36:17.000Z","mathjax":true,"mathjax2":true,"_content":"\nI just implemented the 2D selective filter<sup>1</sup> in Palabos. Because of the non-local calculation when filtering the collision operator, it takes Miguel and me some time to think about a way to implement it in Palabos. \n\n- We first thought about the `integrateProcessingFunctional` but it might only do the post-collision operation (though we could apply a -1 `level` and call `executeInternalProcessors(-1)` manually). \n\n- Then Miguel found the *DynamicProcessor* could be a candidate,something in *src/basicDynamics/dynamicsProcessorXD.hh* where there is `ExternalRhoJcollideAndStream2D` for external macroscopic variable cases (*examples/codesByTopic/externalMacroscopicVariables*). \n\n- I then found the `nonLocalDynamicsXD` written in *src/core/nonLocalDynamicsXD.h/hh*. This doesn't seems to be complete and neither is there a show case. However, you can find something related in `ExecuteNonLocalDynamics3D`, a functional inherited from `BoxProcessingFunctional3D_L` in *src/boundaryCondition/NLD_boundaries3D.h/hh*. \n\nI finally decide to go to the last direction because I consider `nonLocalDynamicsXD` as a good interface to start with. So, the basic idea here is to keep every variables and function of the dynamics in the `dynamics` class and create each member function a functional for data processor. Likely, I write `SelectiveFilterBGKDynamics2D.nonLocalAction()` and `SelectiveFilterBGKDynamics2D.prepareFNeq()` and two functional inherited from `BoxProcessingFunctional2D_L`. In addition, the dynamics class has two private members for the original and the filtered $f_{neq}$. `applyProcessingFunctional` would be used in the main function.\n\nOne important thing I found when writing a new dynamics is about the `serialize` and `unserialize`. I do need write `serializer.addValues()` and `unserializer.readValues()` for each member variables or there would be a problem. I don't get it totally understand it but hopefully, [this article](https://isocpp.org/wiki/faq/serialization) would help, and I will be back with the answer soon.\n\n\n\n\n\n\n\n1. Ricot, Denis, Simon Marié, Pierre Sagaut, and Christophe Bailly. 2009. “Lattice Boltzmann Method with Selective Viscosity Filter.” Journal of Computational Physics 228 (12): 4478–4490.\n\n","source":"_posts/Selective-Filter-2D-Palabos.md","raw":"---\ntitle: Selective Filter 2D - Palabos\ndate: 2018-09-15 23:36:17\ntags: [Palabos, LBM, CFD]\ncategories: Palabos\nmathjax: true\nmathjax2: true\n---\n\nI just implemented the 2D selective filter<sup>1</sup> in Palabos. Because of the non-local calculation when filtering the collision operator, it takes Miguel and me some time to think about a way to implement it in Palabos. \n\n- We first thought about the `integrateProcessingFunctional` but it might only do the post-collision operation (though we could apply a -1 `level` and call `executeInternalProcessors(-1)` manually). \n\n- Then Miguel found the *DynamicProcessor* could be a candidate,something in *src/basicDynamics/dynamicsProcessorXD.hh* where there is `ExternalRhoJcollideAndStream2D` for external macroscopic variable cases (*examples/codesByTopic/externalMacroscopicVariables*). \n\n- I then found the `nonLocalDynamicsXD` written in *src/core/nonLocalDynamicsXD.h/hh*. This doesn't seems to be complete and neither is there a show case. However, you can find something related in `ExecuteNonLocalDynamics3D`, a functional inherited from `BoxProcessingFunctional3D_L` in *src/boundaryCondition/NLD_boundaries3D.h/hh*. \n\nI finally decide to go to the last direction because I consider `nonLocalDynamicsXD` as a good interface to start with. So, the basic idea here is to keep every variables and function of the dynamics in the `dynamics` class and create each member function a functional for data processor. Likely, I write `SelectiveFilterBGKDynamics2D.nonLocalAction()` and `SelectiveFilterBGKDynamics2D.prepareFNeq()` and two functional inherited from `BoxProcessingFunctional2D_L`. In addition, the dynamics class has two private members for the original and the filtered $f_{neq}$. `applyProcessingFunctional` would be used in the main function.\n\nOne important thing I found when writing a new dynamics is about the `serialize` and `unserialize`. I do need write `serializer.addValues()` and `unserializer.readValues()` for each member variables or there would be a problem. I don't get it totally understand it but hopefully, [this article](https://isocpp.org/wiki/faq/serialization) would help, and I will be back with the answer soon.\n\n\n\n\n\n\n\n1. Ricot, Denis, Simon Marié, Pierre Sagaut, and Christophe Bailly. 2009. “Lattice Boltzmann Method with Selective Viscosity Filter.” Journal of Computational Physics 228 (12): 4478–4490.\n\n","slug":"Selective-Filter-2D-Palabos","published":1,"updated":"2018-09-16T04:52:37.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjqb6na6k001j7pphbd5p1dnw","content":"<p>I just implemented the 2D selective filter<sup>1</sup> in Palabos. Because of the non-local calculation when filtering the collision operator, it takes Miguel and me some time to think about a way to implement it in Palabos.</p>\n<ul>\n<li><p>We first thought about the <code>integrateProcessingFunctional</code> but it might only do the post-collision operation (though we could apply a -1 <code>level</code> and call <code>executeInternalProcessors(-1)</code> manually).</p></li>\n<li><p>Then Miguel found the <em>DynamicProcessor</em> could be a candidate,something in <em>src/basicDynamics/dynamicsProcessorXD.hh</em> where there is <code>ExternalRhoJcollideAndStream2D</code> for external macroscopic variable cases (<em>examples/codesByTopic/externalMacroscopicVariables</em>).</p></li>\n<li><p>I then found the <code>nonLocalDynamicsXD</code> written in <em>src/core/nonLocalDynamicsXD.h/hh</em>. This doesn't seems to be complete and neither is there a show case. However, you can find something related in <code>ExecuteNonLocalDynamics3D</code>, a functional inherited from <code>BoxProcessingFunctional3D_L</code> in <em>src/boundaryCondition/NLD_boundaries3D.h/hh</em>.</p></li>\n</ul>\n<p>I finally decide to go to the last direction because I consider <code>nonLocalDynamicsXD</code> as a good interface to start with. So, the basic idea here is to keep every variables and function of the dynamics in the <code>dynamics</code> class and create each member function a functional for data processor. Likely, I write <code>SelectiveFilterBGKDynamics2D.nonLocalAction()</code> and <code>SelectiveFilterBGKDynamics2D.prepareFNeq()</code> and two functional inherited from <code>BoxProcessingFunctional2D_L</code>. In addition, the dynamics class has two private members for the original and the filtered <span class=\"math inline\">\\(f_{neq}\\)</span>. <code>applyProcessingFunctional</code> would be used in the main function.</p>\n<p>One important thing I found when writing a new dynamics is about the <code>serialize</code> and <code>unserialize</code>. I do need write <code>serializer.addValues()</code> and <code>unserializer.readValues()</code> for each member variables or there would be a problem. I don't get it totally understand it but hopefully, <a href=\"https://isocpp.org/wiki/faq/serialization\" target=\"_blank\" rel=\"noopener\">this article</a> would help, and I will be back with the answer soon.</p>\n<ol type=\"1\">\n<li>Ricot, Denis, Simon Marié, Pierre Sagaut, and Christophe Bailly. 2009. “Lattice Boltzmann Method with Selective Viscosity Filter.” Journal of Computational Physics 228 (12): 4478–4490.</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>I just implemented the 2D selective filter<sup>1</sup> in Palabos. Because of the non-local calculation when filtering the collision operator, it takes Miguel and me some time to think about a way to implement it in Palabos.</p>\n<ul>\n<li><p>We first thought about the <code>integrateProcessingFunctional</code> but it might only do the post-collision operation (though we could apply a -1 <code>level</code> and call <code>executeInternalProcessors(-1)</code> manually).</p></li>\n<li><p>Then Miguel found the <em>DynamicProcessor</em> could be a candidate,something in <em>src/basicDynamics/dynamicsProcessorXD.hh</em> where there is <code>ExternalRhoJcollideAndStream2D</code> for external macroscopic variable cases (<em>examples/codesByTopic/externalMacroscopicVariables</em>).</p></li>\n<li><p>I then found the <code>nonLocalDynamicsXD</code> written in <em>src/core/nonLocalDynamicsXD.h/hh</em>. This doesn't seems to be complete and neither is there a show case. However, you can find something related in <code>ExecuteNonLocalDynamics3D</code>, a functional inherited from <code>BoxProcessingFunctional3D_L</code> in <em>src/boundaryCondition/NLD_boundaries3D.h/hh</em>.</p></li>\n</ul>\n<p>I finally decide to go to the last direction because I consider <code>nonLocalDynamicsXD</code> as a good interface to start with. So, the basic idea here is to keep every variables and function of the dynamics in the <code>dynamics</code> class and create each member function a functional for data processor. Likely, I write <code>SelectiveFilterBGKDynamics2D.nonLocalAction()</code> and <code>SelectiveFilterBGKDynamics2D.prepareFNeq()</code> and two functional inherited from <code>BoxProcessingFunctional2D_L</code>. In addition, the dynamics class has two private members for the original and the filtered <span class=\"math inline\">\\(f_{neq}\\)</span>. <code>applyProcessingFunctional</code> would be used in the main function.</p>\n<p>One important thing I found when writing a new dynamics is about the <code>serialize</code> and <code>unserialize</code>. I do need write <code>serializer.addValues()</code> and <code>unserializer.readValues()</code> for each member variables or there would be a problem. I don't get it totally understand it but hopefully, <a href=\"https://isocpp.org/wiki/faq/serialization\" target=\"_blank\" rel=\"noopener\">this article</a> would help, and I will be back with the answer soon.</p>\n<ol type=\"1\">\n<li>Ricot, Denis, Simon Marié, Pierre Sagaut, and Christophe Bailly. 2009. “Lattice Boltzmann Method with Selective Viscosity Filter.” Journal of Computational Physics 228 (12): 4478–4490.</li>\n</ol>\n"},{"title":"first-post","date":"2017-11-18T18:03:55.000Z","mathjax":true,"_content":"This is the first post, a test post.\n\nThe 1D Laplace equation:\n$\\dfrac{\\partial^2 \\phi}{\\partial x^2}=0$\n","source":"_posts/first-post.md","raw":"---\ntitle: first-post\ndate: 2017-11-18 13:03:55\ntags: test\ncategories: test\nmathjax: true\n---\nThis is the first post, a test post.\n\nThe 1D Laplace equation:\n$\\dfrac{\\partial^2 \\phi}{\\partial x^2}=0$\n","slug":"first-post","published":1,"updated":"2018-06-22T21:54:45.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjqb6na6l001l7pphqv0h6v5c","content":"<p>This is the first post, a test post.</p>\n<p>The 1D Laplace equation: <span class=\"math inline\">\\(\\dfrac{\\partial^2 \\phi}{\\partial x^2}=0\\)</span></p>\n","site":{"data":{}},"excerpt":"","more":"<p>This is the first post, a test post.</p>\n<p>The 1D Laplace equation: <span class=\"math inline\">\\(\\dfrac{\\partial^2 \\phi}{\\partial x^2}=0\\)</span></p>\n"},{"title":"The guide for the Data Processor structure of Palabos","date":"2018-08-29T03:49:02.000Z","toc":"ture","_content":"\nIn this article, the running and calling sequences of the data processors related functions is briefly summarized, based on the [official documentation](http://www.palabos.org/documentation/userguide/data-processors.html). Mainly six 'layers' are mentioned here.\n\n### First, two kinds of data processors are used:\n   - **applyProcessingFunctional**, the wrapper for `excuteDataProcessor`: is executed just once, on one or more blocks\n   - **integrateProcessingFunctional**, the wrapper for `addInternalProcessor`:  is added to a block and is part of the block and can be executed as many times as wished, blabla. The added processors are implicitly (to the users) called by the function *executeInternalProcessors*\n\n\n### Second\n   - The function `integrateProcessingFunctional` and `applyProcessingFunctional` are defined and implemented in */src/multiBlock/multiDataProcessorWrapper2D.h/hh*.\n   - The */src/atomicBlock/dataProcessorWrapperXD.h/hh* stores the atomic Block version.\n   - The function `applyProcessingFunctional` has three main parameters: 1) `BoxProcessingFunctionalXD_LSTN functional`, 2) `BoxXD domain` and, 3) `MultiBlockLatticeXD lattice`;\n   - The function `integrateProcessingFunctional` has an additional parameter: `plint level`;\n\n### Third\n   - `applyProcessingFunctional` calls `excuteDataProcessor(BoxProcessorGeneratorXD(functional, domain), lattice);`\n   - `integrateProcessingFunctional` calls `addInternalProcessor(BoxProcessorGeneratorXD(functional, domain), lattice, level);`\n   - So the `BoxProcessorGeneratorXD` has no difference for the two wrapper functions.\n   \n### Fourth\n   - the `excuteDataProcessor` and `addInternalProcessor` are defined and implemented in */src/multiBlock/multiBlockOperationsXD.h/.cpp*\n   - Both functions has the parameter `DataProcessorGeneratorXD const& generator`\n   - one of the overriden of the functions is the kernel one.\n   - The kernel  `excuteDataProcessor`  and `addInternalProcessor` finally calls the corresponding atomicBlock versions which is defined and implemented in */src/atomicBlock/atomicBlockOperationsXD.h/.cpp*\n\n### Fifth, in the atomicBlock versions\n   - */src/atomicBlock/atomicBlockOperationsXD.h/.cpp*\n   - the kernel `excuteDataProcessor` calls the `processor -> process()` where `processor` is a `DataProcessorXD` defined in */src/atomicBlock/dataProcessingFunctionalXD.h/.cpp*\n   - the kernel `addInternalProcessor` calls the `actor.integrateDataProcessor`, where the `actor` is an `AtomicBlockXD` written in */src/atomicBlock/atomicBlockXD.h/.cpp*, inside which the `integrateDataProcessor` runs `processors[level].push_back(processor)`;\n\n### Sixth\n   - `DataProcessorXD`  <== `BoxProcessorXD` who overrides the function `process()` runing `functional -> processGenericBlock(domain, atomicBlocks)` where `BoxProcessingFunctionalXD* functional` is written in the file */src/atomicBlock/dataProcessingFunctionalXD.cpp*\n   - **BoxProcessingFunctionalXD** is a base class defined in the same file which **has many subclasses for different purposes**.\n   - The `processGenericBlock` calls the `process` function in the tons of subclasses functionals of the class `BoxProcessingFunctionalXD`, like `NTensorFieldBoxProcessingFunctional3D` or `BoxProcessingFunctionalXD_LL`\n   - The `process()` would be finally overriden by the subclasses of `BoxProcessingFunctionalXD_LL` or so, and implemented. likely in `class TurbulentLatticeToPassiveAdvDiff3X : public BoxProcessingFunctionalXD_LL` in */src/multiPhysics/advectionDiffusion3D.h/.hh*\n   - `SpecialFunctional` ==> `BoxProcessingFunctionalXD_LL` etc.  ==> `BoxProcessingFunctionalXD`\n\n### In addition, about `excuteInternalProcessors()`\n   - It is called in 1) `MultiBlockLatticeXD::stream()`, 2) `MultiBlockLatticeXD::collideAndStream()` and 3) `MultiBlockXD::initialize()`\n   - The `MultiBlockXD::executeInternalProcessors(level)` calls the `getComponent(blockId).excuteInternalProcessors(leve)` which is at the atomicBlocks unit. (line511@*/arc/multiBlock/multiBlock3D.cpp*)\n   - The `AtomicBlockXD::executeInternalProcessors(level, processors)` finally calls the processors -> process(); in (line254@*/src/atomicBlock/atomicBlock3D.cpp*)\n   \n\n### An example\n*/examples/showCases/boussinesqThermal2d/rayleighBenard2D.cpp*\n\n- line 171:\n\n```\napplyProcessingFunctional (\n            new IniTemperatureRayleighBenardProcessor2D<T,NSDESCRIPTOR,ADESCRIPTOR>(parameters), \n            adLattice.getBoundingBox(),  adLattice );\n```\n\nwhere the `Struct IniTemperatureRayleighBenardProcessor2D : public BoxProcessingFunctional2D_L<T,adDescriptor>` is a functional\n\n- line 293: \n\n```\nintegrateProcessingFunctional (new BoussinesqThermalProcessor2D<>(), nslattice.getBoundingBox(), nslattice, adLattice, processorlevel );\n```\nwhere the `class BoussinesqThermalProcessor2D : BoxProcessingFunctional2D_LL` is a functional defined and implemented in */src/multiPhysics/boussinesqThermalProcessor2D.h/.hh*.\n\n\n\n**NOTA:** the code used here is Palabos version 2.0\n\n\n\n\n\n\n","source":"_posts/The-guide-for-the-Data-Processor-structure-of-Palabos.md","raw":"---\ntitle: The guide for the Data Processor structure of Palabos\ndate: 2018-08-28 23:49:02\ntags: [Palabos, LBM, CFD]\ncategories: Palabos\ntoc: ture\n---\n\nIn this article, the running and calling sequences of the data processors related functions is briefly summarized, based on the [official documentation](http://www.palabos.org/documentation/userguide/data-processors.html). Mainly six 'layers' are mentioned here.\n\n### First, two kinds of data processors are used:\n   - **applyProcessingFunctional**, the wrapper for `excuteDataProcessor`: is executed just once, on one or more blocks\n   - **integrateProcessingFunctional**, the wrapper for `addInternalProcessor`:  is added to a block and is part of the block and can be executed as many times as wished, blabla. The added processors are implicitly (to the users) called by the function *executeInternalProcessors*\n\n\n### Second\n   - The function `integrateProcessingFunctional` and `applyProcessingFunctional` are defined and implemented in */src/multiBlock/multiDataProcessorWrapper2D.h/hh*.\n   - The */src/atomicBlock/dataProcessorWrapperXD.h/hh* stores the atomic Block version.\n   - The function `applyProcessingFunctional` has three main parameters: 1) `BoxProcessingFunctionalXD_LSTN functional`, 2) `BoxXD domain` and, 3) `MultiBlockLatticeXD lattice`;\n   - The function `integrateProcessingFunctional` has an additional parameter: `plint level`;\n\n### Third\n   - `applyProcessingFunctional` calls `excuteDataProcessor(BoxProcessorGeneratorXD(functional, domain), lattice);`\n   - `integrateProcessingFunctional` calls `addInternalProcessor(BoxProcessorGeneratorXD(functional, domain), lattice, level);`\n   - So the `BoxProcessorGeneratorXD` has no difference for the two wrapper functions.\n   \n### Fourth\n   - the `excuteDataProcessor` and `addInternalProcessor` are defined and implemented in */src/multiBlock/multiBlockOperationsXD.h/.cpp*\n   - Both functions has the parameter `DataProcessorGeneratorXD const& generator`\n   - one of the overriden of the functions is the kernel one.\n   - The kernel  `excuteDataProcessor`  and `addInternalProcessor` finally calls the corresponding atomicBlock versions which is defined and implemented in */src/atomicBlock/atomicBlockOperationsXD.h/.cpp*\n\n### Fifth, in the atomicBlock versions\n   - */src/atomicBlock/atomicBlockOperationsXD.h/.cpp*\n   - the kernel `excuteDataProcessor` calls the `processor -> process()` where `processor` is a `DataProcessorXD` defined in */src/atomicBlock/dataProcessingFunctionalXD.h/.cpp*\n   - the kernel `addInternalProcessor` calls the `actor.integrateDataProcessor`, where the `actor` is an `AtomicBlockXD` written in */src/atomicBlock/atomicBlockXD.h/.cpp*, inside which the `integrateDataProcessor` runs `processors[level].push_back(processor)`;\n\n### Sixth\n   - `DataProcessorXD`  <== `BoxProcessorXD` who overrides the function `process()` runing `functional -> processGenericBlock(domain, atomicBlocks)` where `BoxProcessingFunctionalXD* functional` is written in the file */src/atomicBlock/dataProcessingFunctionalXD.cpp*\n   - **BoxProcessingFunctionalXD** is a base class defined in the same file which **has many subclasses for different purposes**.\n   - The `processGenericBlock` calls the `process` function in the tons of subclasses functionals of the class `BoxProcessingFunctionalXD`, like `NTensorFieldBoxProcessingFunctional3D` or `BoxProcessingFunctionalXD_LL`\n   - The `process()` would be finally overriden by the subclasses of `BoxProcessingFunctionalXD_LL` or so, and implemented. likely in `class TurbulentLatticeToPassiveAdvDiff3X : public BoxProcessingFunctionalXD_LL` in */src/multiPhysics/advectionDiffusion3D.h/.hh*\n   - `SpecialFunctional` ==> `BoxProcessingFunctionalXD_LL` etc.  ==> `BoxProcessingFunctionalXD`\n\n### In addition, about `excuteInternalProcessors()`\n   - It is called in 1) `MultiBlockLatticeXD::stream()`, 2) `MultiBlockLatticeXD::collideAndStream()` and 3) `MultiBlockXD::initialize()`\n   - The `MultiBlockXD::executeInternalProcessors(level)` calls the `getComponent(blockId).excuteInternalProcessors(leve)` which is at the atomicBlocks unit. (line511@*/arc/multiBlock/multiBlock3D.cpp*)\n   - The `AtomicBlockXD::executeInternalProcessors(level, processors)` finally calls the processors -> process(); in (line254@*/src/atomicBlock/atomicBlock3D.cpp*)\n   \n\n### An example\n*/examples/showCases/boussinesqThermal2d/rayleighBenard2D.cpp*\n\n- line 171:\n\n```\napplyProcessingFunctional (\n            new IniTemperatureRayleighBenardProcessor2D<T,NSDESCRIPTOR,ADESCRIPTOR>(parameters), \n            adLattice.getBoundingBox(),  adLattice );\n```\n\nwhere the `Struct IniTemperatureRayleighBenardProcessor2D : public BoxProcessingFunctional2D_L<T,adDescriptor>` is a functional\n\n- line 293: \n\n```\nintegrateProcessingFunctional (new BoussinesqThermalProcessor2D<>(), nslattice.getBoundingBox(), nslattice, adLattice, processorlevel );\n```\nwhere the `class BoussinesqThermalProcessor2D : BoxProcessingFunctional2D_LL` is a functional defined and implemented in */src/multiPhysics/boussinesqThermalProcessor2D.h/.hh*.\n\n\n\n**NOTA:** the code used here is Palabos version 2.0\n\n\n\n\n\n\n","slug":"The-guide-for-the-Data-Processor-structure-of-Palabos","published":1,"updated":"2018-08-29T04:20:39.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjqb6na6n001p7pphdw0tyyde","content":"<p>In this article, the running and calling sequences of the data processors related functions is briefly summarized, based on the <a href=\"http://www.palabos.org/documentation/userguide/data-processors.html\" target=\"_blank\" rel=\"noopener\">official documentation</a>. Mainly six 'layers' are mentioned here.</p>\n<h3 id=\"first-two-kinds-of-data-processors-are-used\">First, two kinds of data processors are used:</h3>\n<ul>\n<li><strong>applyProcessingFunctional</strong>, the wrapper for <code>excuteDataProcessor</code>: is executed just once, on one or more blocks</li>\n<li><strong>integrateProcessingFunctional</strong>, the wrapper for <code>addInternalProcessor</code>: is added to a block and is part of the block and can be executed as many times as wished, blabla. The added processors are implicitly (to the users) called by the function <em>executeInternalProcessors</em></li>\n</ul>\n<h3 id=\"second\">Second</h3>\n<ul>\n<li>The function <code>integrateProcessingFunctional</code> and <code>applyProcessingFunctional</code> are defined and implemented in <em>/src/multiBlock/multiDataProcessorWrapper2D.h/hh</em>.</li>\n<li>The <em>/src/atomicBlock/dataProcessorWrapperXD.h/hh</em> stores the atomic Block version.</li>\n<li>The function <code>applyProcessingFunctional</code> has three main parameters: 1) <code>BoxProcessingFunctionalXD_LSTN functional</code>, 2) <code>BoxXD domain</code> and, 3) <code>MultiBlockLatticeXD lattice</code>;</li>\n<li>The function <code>integrateProcessingFunctional</code> has an additional parameter: <code>plint level</code>;</li>\n</ul>\n<h3 id=\"third\">Third</h3>\n<ul>\n<li><code>applyProcessingFunctional</code> calls <code>excuteDataProcessor(BoxProcessorGeneratorXD(functional, domain), lattice);</code></li>\n<li><code>integrateProcessingFunctional</code> calls <code>addInternalProcessor(BoxProcessorGeneratorXD(functional, domain), lattice, level);</code></li>\n<li>So the <code>BoxProcessorGeneratorXD</code> has no difference for the two wrapper functions.</li>\n</ul>\n<h3 id=\"fourth\">Fourth</h3>\n<ul>\n<li>the <code>excuteDataProcessor</code> and <code>addInternalProcessor</code> are defined and implemented in <em>/src/multiBlock/multiBlockOperationsXD.h/.cpp</em></li>\n<li>Both functions has the parameter <code>DataProcessorGeneratorXD const&amp; generator</code></li>\n<li>one of the overriden of the functions is the kernel one.</li>\n<li>The kernel <code>excuteDataProcessor</code> and <code>addInternalProcessor</code> finally calls the corresponding atomicBlock versions which is defined and implemented in <em>/src/atomicBlock/atomicBlockOperationsXD.h/.cpp</em></li>\n</ul>\n<h3 id=\"fifth-in-the-atomicblock-versions\">Fifth, in the atomicBlock versions</h3>\n<ul>\n<li><em>/src/atomicBlock/atomicBlockOperationsXD.h/.cpp</em></li>\n<li>the kernel <code>excuteDataProcessor</code> calls the <code>processor -&gt; process()</code> where <code>processor</code> is a <code>DataProcessorXD</code> defined in <em>/src/atomicBlock/dataProcessingFunctionalXD.h/.cpp</em></li>\n<li>the kernel <code>addInternalProcessor</code> calls the <code>actor.integrateDataProcessor</code>, where the <code>actor</code> is an <code>AtomicBlockXD</code> written in <em>/src/atomicBlock/atomicBlockXD.h/.cpp</em>, inside which the <code>integrateDataProcessor</code> runs <code>processors[level].push_back(processor)</code>;</li>\n</ul>\n<h3 id=\"sixth\">Sixth</h3>\n<ul>\n<li><code>DataProcessorXD</code> &lt;== <code>BoxProcessorXD</code> who overrides the function <code>process()</code> runing <code>functional -&gt; processGenericBlock(domain, atomicBlocks)</code> where <code>BoxProcessingFunctionalXD* functional</code> is written in the file <em>/src/atomicBlock/dataProcessingFunctionalXD.cpp</em></li>\n<li><strong>BoxProcessingFunctionalXD</strong> is a base class defined in the same file which <strong>has many subclasses for different purposes</strong>.</li>\n<li>The <code>processGenericBlock</code> calls the <code>process</code> function in the tons of subclasses functionals of the class <code>BoxProcessingFunctionalXD</code>, like <code>NTensorFieldBoxProcessingFunctional3D</code> or <code>BoxProcessingFunctionalXD_LL</code></li>\n<li>The <code>process()</code> would be finally overriden by the subclasses of <code>BoxProcessingFunctionalXD_LL</code> or so, and implemented. likely in <code>class TurbulentLatticeToPassiveAdvDiff3X : public BoxProcessingFunctionalXD_LL</code> in <em>/src/multiPhysics/advectionDiffusion3D.h/.hh</em></li>\n<li><code>SpecialFunctional</code> ==&gt; <code>BoxProcessingFunctionalXD_LL</code> etc. ==&gt; <code>BoxProcessingFunctionalXD</code></li>\n</ul>\n<h3 id=\"in-addition-about-excuteinternalprocessors\">In addition, about <code>excuteInternalProcessors()</code></h3>\n<ul>\n<li>It is called in 1) <code>MultiBlockLatticeXD::stream()</code>, 2) <code>MultiBlockLatticeXD::collideAndStream()</code> and 3) <code>MultiBlockXD::initialize()</code></li>\n<li>The <code>MultiBlockXD::executeInternalProcessors(level)</code> calls the <code>getComponent(blockId).excuteInternalProcessors(leve)</code> which is at the atomicBlocks unit. (line511@<em>/arc/multiBlock/multiBlock3D.cpp</em>)</li>\n<li>The <code>AtomicBlockXD::executeInternalProcessors(level, processors)</code> finally calls the processors -&gt; process(); in (line254@<em>/src/atomicBlock/atomicBlock3D.cpp</em>)</li>\n</ul>\n<h3 id=\"an-example\">An example</h3>\n<p><em>/examples/showCases/boussinesqThermal2d/rayleighBenard2D.cpp</em></p>\n<ul>\n<li>line 171:</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">applyProcessingFunctional (</span><br><span class=\"line\">            new IniTemperatureRayleighBenardProcessor2D&lt;T,NSDESCRIPTOR,ADESCRIPTOR&gt;(parameters), </span><br><span class=\"line\">            adLattice.getBoundingBox(),  adLattice );</span><br></pre></td></tr></table></figure>\n<p>where the <code>Struct IniTemperatureRayleighBenardProcessor2D : public BoxProcessingFunctional2D_L&lt;T,adDescriptor&gt;</code> is a functional</p>\n<ul>\n<li>line 293:</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">integrateProcessingFunctional (new BoussinesqThermalProcessor2D&lt;&gt;(), nslattice.getBoundingBox(), nslattice, adLattice, processorlevel );</span><br></pre></td></tr></table></figure>\n<p>where the <code>class BoussinesqThermalProcessor2D : BoxProcessingFunctional2D_LL</code> is a functional defined and implemented in <em>/src/multiPhysics/boussinesqThermalProcessor2D.h/.hh</em>.</p>\n<p><strong>NOTA:</strong> the code used here is Palabos version 2.0</p>\n","site":{"data":{}},"excerpt":"","more":"<p>In this article, the running and calling sequences of the data processors related functions is briefly summarized, based on the <a href=\"http://www.palabos.org/documentation/userguide/data-processors.html\" target=\"_blank\" rel=\"noopener\">official documentation</a>. Mainly six 'layers' are mentioned here.</p>\n<h3 id=\"first-two-kinds-of-data-processors-are-used\">First, two kinds of data processors are used:</h3>\n<ul>\n<li><strong>applyProcessingFunctional</strong>, the wrapper for <code>excuteDataProcessor</code>: is executed just once, on one or more blocks</li>\n<li><strong>integrateProcessingFunctional</strong>, the wrapper for <code>addInternalProcessor</code>: is added to a block and is part of the block and can be executed as many times as wished, blabla. The added processors are implicitly (to the users) called by the function <em>executeInternalProcessors</em></li>\n</ul>\n<h3 id=\"second\">Second</h3>\n<ul>\n<li>The function <code>integrateProcessingFunctional</code> and <code>applyProcessingFunctional</code> are defined and implemented in <em>/src/multiBlock/multiDataProcessorWrapper2D.h/hh</em>.</li>\n<li>The <em>/src/atomicBlock/dataProcessorWrapperXD.h/hh</em> stores the atomic Block version.</li>\n<li>The function <code>applyProcessingFunctional</code> has three main parameters: 1) <code>BoxProcessingFunctionalXD_LSTN functional</code>, 2) <code>BoxXD domain</code> and, 3) <code>MultiBlockLatticeXD lattice</code>;</li>\n<li>The function <code>integrateProcessingFunctional</code> has an additional parameter: <code>plint level</code>;</li>\n</ul>\n<h3 id=\"third\">Third</h3>\n<ul>\n<li><code>applyProcessingFunctional</code> calls <code>excuteDataProcessor(BoxProcessorGeneratorXD(functional, domain), lattice);</code></li>\n<li><code>integrateProcessingFunctional</code> calls <code>addInternalProcessor(BoxProcessorGeneratorXD(functional, domain), lattice, level);</code></li>\n<li>So the <code>BoxProcessorGeneratorXD</code> has no difference for the two wrapper functions.</li>\n</ul>\n<h3 id=\"fourth\">Fourth</h3>\n<ul>\n<li>the <code>excuteDataProcessor</code> and <code>addInternalProcessor</code> are defined and implemented in <em>/src/multiBlock/multiBlockOperationsXD.h/.cpp</em></li>\n<li>Both functions has the parameter <code>DataProcessorGeneratorXD const&amp; generator</code></li>\n<li>one of the overriden of the functions is the kernel one.</li>\n<li>The kernel <code>excuteDataProcessor</code> and <code>addInternalProcessor</code> finally calls the corresponding atomicBlock versions which is defined and implemented in <em>/src/atomicBlock/atomicBlockOperationsXD.h/.cpp</em></li>\n</ul>\n<h3 id=\"fifth-in-the-atomicblock-versions\">Fifth, in the atomicBlock versions</h3>\n<ul>\n<li><em>/src/atomicBlock/atomicBlockOperationsXD.h/.cpp</em></li>\n<li>the kernel <code>excuteDataProcessor</code> calls the <code>processor -&gt; process()</code> where <code>processor</code> is a <code>DataProcessorXD</code> defined in <em>/src/atomicBlock/dataProcessingFunctionalXD.h/.cpp</em></li>\n<li>the kernel <code>addInternalProcessor</code> calls the <code>actor.integrateDataProcessor</code>, where the <code>actor</code> is an <code>AtomicBlockXD</code> written in <em>/src/atomicBlock/atomicBlockXD.h/.cpp</em>, inside which the <code>integrateDataProcessor</code> runs <code>processors[level].push_back(processor)</code>;</li>\n</ul>\n<h3 id=\"sixth\">Sixth</h3>\n<ul>\n<li><code>DataProcessorXD</code> &lt;== <code>BoxProcessorXD</code> who overrides the function <code>process()</code> runing <code>functional -&gt; processGenericBlock(domain, atomicBlocks)</code> where <code>BoxProcessingFunctionalXD* functional</code> is written in the file <em>/src/atomicBlock/dataProcessingFunctionalXD.cpp</em></li>\n<li><strong>BoxProcessingFunctionalXD</strong> is a base class defined in the same file which <strong>has many subclasses for different purposes</strong>.</li>\n<li>The <code>processGenericBlock</code> calls the <code>process</code> function in the tons of subclasses functionals of the class <code>BoxProcessingFunctionalXD</code>, like <code>NTensorFieldBoxProcessingFunctional3D</code> or <code>BoxProcessingFunctionalXD_LL</code></li>\n<li>The <code>process()</code> would be finally overriden by the subclasses of <code>BoxProcessingFunctionalXD_LL</code> or so, and implemented. likely in <code>class TurbulentLatticeToPassiveAdvDiff3X : public BoxProcessingFunctionalXD_LL</code> in <em>/src/multiPhysics/advectionDiffusion3D.h/.hh</em></li>\n<li><code>SpecialFunctional</code> ==&gt; <code>BoxProcessingFunctionalXD_LL</code> etc. ==&gt; <code>BoxProcessingFunctionalXD</code></li>\n</ul>\n<h3 id=\"in-addition-about-excuteinternalprocessors\">In addition, about <code>excuteInternalProcessors()</code></h3>\n<ul>\n<li>It is called in 1) <code>MultiBlockLatticeXD::stream()</code>, 2) <code>MultiBlockLatticeXD::collideAndStream()</code> and 3) <code>MultiBlockXD::initialize()</code></li>\n<li>The <code>MultiBlockXD::executeInternalProcessors(level)</code> calls the <code>getComponent(blockId).excuteInternalProcessors(leve)</code> which is at the atomicBlocks unit. (line511@<em>/arc/multiBlock/multiBlock3D.cpp</em>)</li>\n<li>The <code>AtomicBlockXD::executeInternalProcessors(level, processors)</code> finally calls the processors -&gt; process(); in (line254@<em>/src/atomicBlock/atomicBlock3D.cpp</em>)</li>\n</ul>\n<h3 id=\"an-example\">An example</h3>\n<p><em>/examples/showCases/boussinesqThermal2d/rayleighBenard2D.cpp</em></p>\n<ul>\n<li>line 171:</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">applyProcessingFunctional (</span><br><span class=\"line\">            new IniTemperatureRayleighBenardProcessor2D&lt;T,NSDESCRIPTOR,ADESCRIPTOR&gt;(parameters), </span><br><span class=\"line\">            adLattice.getBoundingBox(),  adLattice );</span><br></pre></td></tr></table></figure>\n<p>where the <code>Struct IniTemperatureRayleighBenardProcessor2D : public BoxProcessingFunctional2D_L&lt;T,adDescriptor&gt;</code> is a functional</p>\n<ul>\n<li>line 293:</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">integrateProcessingFunctional (new BoussinesqThermalProcessor2D&lt;&gt;(), nslattice.getBoundingBox(), nslattice, adLattice, processorlevel );</span><br></pre></td></tr></table></figure>\n<p>where the <code>class BoussinesqThermalProcessor2D : BoxProcessingFunctional2D_LL</code> is a functional defined and implemented in <em>/src/multiPhysics/boussinesqThermalProcessor2D.h/.hh</em>.</p>\n<p><strong>NOTA:</strong> the code used here is Palabos version 2.0</p>\n"},{"title":"Setup tips for NI hardware + DAQ Toolbox on Matlab + Windows XP (SP3)","date":"2018-09-12T02:19:12.000Z","_content":"\nWorking on old version software and hardware is not as easy and direct as it seems to be. I am recently trying to set up the Dantec Dynamics CTA hot-wire anemometer. Because the software could only run on Windows XP or other versions in the same era, I have to install Windows XP on the PC of our lab. \n\nThis blog writes about the setup on Windows XP (SP3) 32-bit for the NI PCI-4472 data acquisition board and DaqPlot, a program for data acquisition and analysis written by Gary P. Scavone and is a simplified version of DataLogger by James Woodhouse.\n\n- The latest release of Matlab for Windows XP (SP3) 32-bit is R2015b ([details here](https://www.mathworks.com/support/sysreq/previous_releases.html));\n- The earliest release of Matlab (or Data Acquisition Toolbox) supporting NI PCI-4472 is R2014a ([details here](https://www.mathworks.com/hardware-support/nidaqmx.html));\n- The latest release of NI-DAQmx supporting Windows XP (SP3) 32-bit is NI-DAQmx 15.5.1;\n- The earliest release of NI-DAQmx for NI PCI-4472 required by Data Acquisition Toolbox on Matlab is NI-DAQmx 9.0 (or 9.1);\n- Check [troubleshooting tips](https://www.mathworks.com/help/daq/troubleshooting-tips.html) for Data Acquisition Toolbox when needed, e.g. the comments recommended `daq.getVendors` and `daq.getDevices`.\n\nIn addition,\n- The latest StreamWare for Dantec Dynamics CTA system supporting NI-DAQmx driver is StreamWare v3.40 SP4.\n","source":"_posts/daqplot-windowsxp-caml.md","raw":"---\ntitle: Setup tips for NI hardware + DAQ Toolbox on Matlab + Windows XP (SP3)\ndate: 2018-09-11 22:19:12\ntags: [Research Daily, CAML]\ncategories: Research Daily\n---\n\nWorking on old version software and hardware is not as easy and direct as it seems to be. I am recently trying to set up the Dantec Dynamics CTA hot-wire anemometer. Because the software could only run on Windows XP or other versions in the same era, I have to install Windows XP on the PC of our lab. \n\nThis blog writes about the setup on Windows XP (SP3) 32-bit for the NI PCI-4472 data acquisition board and DaqPlot, a program for data acquisition and analysis written by Gary P. Scavone and is a simplified version of DataLogger by James Woodhouse.\n\n- The latest release of Matlab for Windows XP (SP3) 32-bit is R2015b ([details here](https://www.mathworks.com/support/sysreq/previous_releases.html));\n- The earliest release of Matlab (or Data Acquisition Toolbox) supporting NI PCI-4472 is R2014a ([details here](https://www.mathworks.com/hardware-support/nidaqmx.html));\n- The latest release of NI-DAQmx supporting Windows XP (SP3) 32-bit is NI-DAQmx 15.5.1;\n- The earliest release of NI-DAQmx for NI PCI-4472 required by Data Acquisition Toolbox on Matlab is NI-DAQmx 9.0 (or 9.1);\n- Check [troubleshooting tips](https://www.mathworks.com/help/daq/troubleshooting-tips.html) for Data Acquisition Toolbox when needed, e.g. the comments recommended `daq.getVendors` and `daq.getDevices`.\n\nIn addition,\n- The latest StreamWare for Dantec Dynamics CTA system supporting NI-DAQmx driver is StreamWare v3.40 SP4.\n","slug":"daqplot-windowsxp-caml","published":1,"updated":"2018-09-14T20:05:34.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjqb6na6o001q7pph9jhuv0rh","content":"<p>Working on old version software and hardware is not as easy and direct as it seems to be. I am recently trying to set up the Dantec Dynamics CTA hot-wire anemometer. Because the software could only run on Windows XP or other versions in the same era, I have to install Windows XP on the PC of our lab.</p>\n<p>This blog writes about the setup on Windows XP (SP3) 32-bit for the NI PCI-4472 data acquisition board and DaqPlot, a program for data acquisition and analysis written by Gary P. Scavone and is a simplified version of DataLogger by James Woodhouse.</p>\n<ul>\n<li>The latest release of Matlab for Windows XP (SP3) 32-bit is R2015b (<a href=\"https://www.mathworks.com/support/sysreq/previous_releases.html\" target=\"_blank\" rel=\"noopener\">details here</a>);</li>\n<li>The earliest release of Matlab (or Data Acquisition Toolbox) supporting NI PCI-4472 is R2014a (<a href=\"https://www.mathworks.com/hardware-support/nidaqmx.html\" target=\"_blank\" rel=\"noopener\">details here</a>);</li>\n<li>The latest release of NI-DAQmx supporting Windows XP (SP3) 32-bit is NI-DAQmx 15.5.1;</li>\n<li>The earliest release of NI-DAQmx for NI PCI-4472 required by Data Acquisition Toolbox on Matlab is NI-DAQmx 9.0 (or 9.1);</li>\n<li>Check <a href=\"https://www.mathworks.com/help/daq/troubleshooting-tips.html\" target=\"_blank\" rel=\"noopener\">troubleshooting tips</a> for Data Acquisition Toolbox when needed, e.g. the comments recommended <code>daq.getVendors</code> and <code>daq.getDevices</code>.</li>\n</ul>\n<p>In addition, - The latest StreamWare for Dantec Dynamics CTA system supporting NI-DAQmx driver is StreamWare v3.40 SP4.</p>\n","site":{"data":{}},"excerpt":"","more":"<p>Working on old version software and hardware is not as easy and direct as it seems to be. I am recently trying to set up the Dantec Dynamics CTA hot-wire anemometer. Because the software could only run on Windows XP or other versions in the same era, I have to install Windows XP on the PC of our lab.</p>\n<p>This blog writes about the setup on Windows XP (SP3) 32-bit for the NI PCI-4472 data acquisition board and DaqPlot, a program for data acquisition and analysis written by Gary P. Scavone and is a simplified version of DataLogger by James Woodhouse.</p>\n<ul>\n<li>The latest release of Matlab for Windows XP (SP3) 32-bit is R2015b (<a href=\"https://www.mathworks.com/support/sysreq/previous_releases.html\" target=\"_blank\" rel=\"noopener\">details here</a>);</li>\n<li>The earliest release of Matlab (or Data Acquisition Toolbox) supporting NI PCI-4472 is R2014a (<a href=\"https://www.mathworks.com/hardware-support/nidaqmx.html\" target=\"_blank\" rel=\"noopener\">details here</a>);</li>\n<li>The latest release of NI-DAQmx supporting Windows XP (SP3) 32-bit is NI-DAQmx 15.5.1;</li>\n<li>The earliest release of NI-DAQmx for NI PCI-4472 required by Data Acquisition Toolbox on Matlab is NI-DAQmx 9.0 (or 9.1);</li>\n<li>Check <a href=\"https://www.mathworks.com/help/daq/troubleshooting-tips.html\" target=\"_blank\" rel=\"noopener\">troubleshooting tips</a> for Data Acquisition Toolbox when needed, e.g. the comments recommended <code>daq.getVendors</code> and <code>daq.getDevices</code>.</li>\n</ul>\n<p>In addition, - The latest StreamWare for Dantec Dynamics CTA system supporting NI-DAQmx driver is StreamWare v3.40 SP4.</p>\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2018-06-22T21:54:45.000Z","updated":"2018-06-22T21:54:45.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjqb6na6p001u7pphsyih7n1o","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"quick-start\">Quick Start</h2>\n<h3 id=\"create-a-new-post\">Create a new post</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"run-server\">Run server</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"generate-static-files\">Generate static files</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"deploy-to-remote-sites\">Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"quick-start\">Quick Start</h2>\n<h3 id=\"create-a-new-post\">Create a new post</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"run-server\">Run server</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"generate-static-files\">Generate static files</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"deploy-to-remote-sites\">Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cjqb6na5s00007ppheyvriict","category_id":"cjqb6na5y00047pphq4awo7cz","_id":"cjqb6na64000d7pphxezc9bij"},{"post_id":"cjqb6na5w00027pphz5gz30rh","category_id":"cjqb6na6200097pphho8i113g","_id":"cjqb6na66000k7pphjsmklumu"},{"post_id":"cjqb6na6000067pphvnu596r0","category_id":"cjqb6na64000e7pph4xnclf3j","_id":"cjqb6na6a000r7pphucfalzji"},{"post_id":"cjqb6na6000077pph3m3647bx","category_id":"cjqb6na64000e7pph4xnclf3j","_id":"cjqb6na6c000x7pph43n818w3"},{"post_id":"cjqb6na6100087pph4nr4nrf4","category_id":"cjqb6na64000e7pph4xnclf3j","_id":"cjqb6na6e00127pph5b5rxptr"},{"post_id":"cjqb6na6c000z7pphaeac493m","category_id":"cjqb6na5y00047pphq4awo7cz","_id":"cjqb6na6g00187pph7x04b232"},{"post_id":"cjqb6na62000b7pphhlf2zfnn","category_id":"cjqb6na6c000w7pph9oox5a5p","_id":"cjqb6na6h001a7pphgstn2qm1"},{"post_id":"cjqb6na63000c7pphyc6r5y9h","category_id":"cjqb6na6e00137pph3tu8jw7a","_id":"cjqb6na6j001g7pphsievttoe"},{"post_id":"cjqb6na64000g7pph7rzxhdit","category_id":"cjqb6na6h001b7pphebcuo2mm","_id":"cjqb6na6m001m7pphzghutt1q"},{"post_id":"cjqb6na6k001j7pphbd5p1dnw","category_id":"cjqb6na6h001b7pphebcuo2mm","_id":"cjqb6na6o001r7pphe1axeqv9"},{"post_id":"cjqb6na66000i7pphras8e20e","category_id":"cjqb6na6k001h7pph1ceqy2c4","_id":"cjqb6na6q001v7pph2do7zs2a"},{"post_id":"cjqb6na6n001p7pphdw0tyyde","category_id":"cjqb6na6h001b7pphebcuo2mm","_id":"cjqb6na6r001x7pph2khzj2cr"},{"post_id":"cjqb6na68000n7pphnuttxfqy","category_id":"cjqb6na6k001h7pph1ceqy2c4","_id":"cjqb6na6r00207pphuvtibkx3"},{"post_id":"cjqb6na6o001q7pph9jhuv0rh","category_id":"cjqb6na5y00047pphq4awo7cz","_id":"cjqb6na6s00227pphzbt7vq9j"},{"post_id":"cjqb6na69000p7pph1aijanh4","category_id":"cjqb6na6k001h7pph1ceqy2c4","_id":"cjqb6na6s00247pphgqs010tt"},{"post_id":"cjqb6na6a000t7ppht6u843j1","category_id":"cjqb6na6k001h7pph1ceqy2c4","_id":"cjqb6na6t00277pphuhp45lf6"},{"post_id":"cjqb6na6b000v7pphiqsadjc3","category_id":"cjqb6na6k001h7pph1ceqy2c4","_id":"cjqb6na6t002a7pph9i54cl1k"},{"post_id":"cjqb6na6d00117pphsdwpyha8","category_id":"cjqb6na6k001h7pph1ceqy2c4","_id":"cjqb6na6u002d7pphtwiuhqmn"},{"post_id":"cjqb6na6f00157pphygeculvv","category_id":"cjqb6na6h001b7pphebcuo2mm","_id":"cjqb6na6v002g7pphkuk9bg8l"},{"post_id":"cjqb6na6f00177pphy85lykoe","category_id":"cjqb6na6h001b7pphebcuo2mm","_id":"cjqb6na6v002l7pph9ear08wy"},{"post_id":"cjqb6na6g00197pph1x0rp2kd","category_id":"cjqb6na6k001h7pph1ceqy2c4","_id":"cjqb6na6w002p7pphvtjzqp0q"},{"post_id":"cjqb6na6h001e7pphg9sz57k9","category_id":"cjqb6na6k001h7pph1ceqy2c4","_id":"cjqb6na6x002t7pphazjwrp9u"},{"post_id":"cjqb6na6j001f7pphd12gqsfv","category_id":"cjqb6na6w002o7pphu71nibtw","_id":"cjqb6na6z002z7pphic1loqlc"},{"post_id":"cjqb6na6l001l7pphqv0h6v5c","category_id":"cjqb6na6x002v7pphso89fkk3","_id":"cjqb6na7000347pphe8bze8hs"}],"PostTag":[{"post_id":"cjqb6na5s00007ppheyvriict","tag_id":"cjqb6na5z00057pphbeuj54b7","_id":"cjqb6na65000h7pphhu7per7a"},{"post_id":"cjqb6na5s00007ppheyvriict","tag_id":"cjqb6na62000a7pphzr2hh2fs","_id":"cjqb6na66000j7pphyufs63fp"},{"post_id":"cjqb6na5w00027pphz5gz30rh","tag_id":"cjqb6na64000f7pphq60bslk9","_id":"cjqb6na69000o7pphnr7q3t94"},{"post_id":"cjqb6na6000067pphvnu596r0","tag_id":"cjqb6na67000m7pphihg4zs91","_id":"cjqb6na6b000u7pphshbypoco"},{"post_id":"cjqb6na6000077pph3m3647bx","tag_id":"cjqb6na67000m7pphihg4zs91","_id":"cjqb6na6d00107pphl3psuprt"},{"post_id":"cjqb6na6100087pph4nr4nrf4","tag_id":"cjqb6na67000m7pphihg4zs91","_id":"cjqb6na6f00167pphwh3ymoc0"},{"post_id":"cjqb6na62000b7pphhlf2zfnn","tag_id":"cjqb6na6e00147pphyum4v09t","_id":"cjqb6na6h001d7pphsvd9ms5n"},{"post_id":"cjqb6na63000c7pphyc6r5y9h","tag_id":"cjqb6na6h001c7pphhdf5u5kz","_id":"cjqb6na6l001k7pphyxzlgsoa"},{"post_id":"cjqb6na6o001q7pph9jhuv0rh","tag_id":"cjqb6na5z00057pphbeuj54b7","_id":"cjqb6na6q001w7pphlusmvv47"},{"post_id":"cjqb6na6o001q7pph9jhuv0rh","tag_id":"cjqb6na62000a7pphzr2hh2fs","_id":"cjqb6na6r001z7pphlc7sjffb"},{"post_id":"cjqb6na64000g7pph7rzxhdit","tag_id":"cjqb6na6k001i7pphqx99wlxh","_id":"cjqb6na6v002h7ppht6jffl3i"},{"post_id":"cjqb6na64000g7pph7rzxhdit","tag_id":"cjqb6na6n001o7pphzxcnvxlx","_id":"cjqb6na6v002i7pphoqfdie0j"},{"post_id":"cjqb6na64000g7pph7rzxhdit","tag_id":"cjqb6na6p001t7pphfc5ebhq8","_id":"cjqb6na6w002m7pphuijqh929"},{"post_id":"cjqb6na64000g7pph7rzxhdit","tag_id":"cjqb6na6r00217pph8ww2reww","_id":"cjqb6na6w002n7pphw4q0084w"},{"post_id":"cjqb6na64000g7pph7rzxhdit","tag_id":"cjqb6na6s00257pph1k2fj8bd","_id":"cjqb6na6w002r7pph85w049u1"},{"post_id":"cjqb6na64000g7pph7rzxhdit","tag_id":"cjqb6na6t00287pph8jw48i7j","_id":"cjqb6na6x002s7pphuqljip76"},{"post_id":"cjqb6na64000g7pph7rzxhdit","tag_id":"cjqb6na6u002b7pphb301qrnv","_id":"cjqb6na6x002w7pphb79esyu6"},{"post_id":"cjqb6na66000i7pphras8e20e","tag_id":"cjqb6na6u002e7pph76qhauze","_id":"cjqb6na6y002x7pph11bv20ve"},{"post_id":"cjqb6na66000i7pphras8e20e","tag_id":"cjqb6na6v002j7pphiyfjho94","_id":"cjqb6na6z00307pph5aoynolx"},{"post_id":"cjqb6na68000n7pphnuttxfqy","tag_id":"cjqb6na6u002e7pph76qhauze","_id":"cjqb6na6z00317pph67zhwli8"},{"post_id":"cjqb6na68000n7pphnuttxfqy","tag_id":"cjqb6na6v002j7pphiyfjho94","_id":"cjqb6na7000337pphkmpsqo3t"},{"post_id":"cjqb6na69000p7pph1aijanh4","tag_id":"cjqb6na6u002e7pph76qhauze","_id":"cjqb6na7000367pphjhhzycuc"},{"post_id":"cjqb6na69000p7pph1aijanh4","tag_id":"cjqb6na6v002j7pphiyfjho94","_id":"cjqb6na7000377pphrjf92jvl"},{"post_id":"cjqb6na6a000t7ppht6u843j1","tag_id":"cjqb6na6u002e7pph76qhauze","_id":"cjqb6na71003a7pphagapcpdh"},{"post_id":"cjqb6na6a000t7ppht6u843j1","tag_id":"cjqb6na6v002j7pphiyfjho94","_id":"cjqb6na71003b7pphcwxv49lj"},{"post_id":"cjqb6na6b000v7pphiqsadjc3","tag_id":"cjqb6na6u002e7pph76qhauze","_id":"cjqb6na72003e7pphiw78sa80"},{"post_id":"cjqb6na6b000v7pphiqsadjc3","tag_id":"cjqb6na6v002j7pphiyfjho94","_id":"cjqb6na72003f7pph6z1touwo"},{"post_id":"cjqb6na6c000z7pphaeac493m","tag_id":"cjqb6na5z00057pphbeuj54b7","_id":"cjqb6na73003h7pphr00it06o"},{"post_id":"cjqb6na6c000z7pphaeac493m","tag_id":"cjqb6na62000a7pphzr2hh2fs","_id":"cjqb6na73003i7ppho3a0978e"},{"post_id":"cjqb6na6c000z7pphaeac493m","tag_id":"cjqb6na72003d7pph1g2548ge","_id":"cjqb6na74003k7pphe73yxj3a"},{"post_id":"cjqb6na6d00117pphsdwpyha8","tag_id":"cjqb6na6u002e7pph76qhauze","_id":"cjqb6na74003m7pph3kk9f36w"},{"post_id":"cjqb6na6d00117pphsdwpyha8","tag_id":"cjqb6na6v002j7pphiyfjho94","_id":"cjqb6na75003n7pphhibps3vy"},{"post_id":"cjqb6na6f00157pphygeculvv","tag_id":"cjqb6na6p001t7pphfc5ebhq8","_id":"cjqb6na76003r7pphnf9s2g6k"},{"post_id":"cjqb6na6f00157pphygeculvv","tag_id":"cjqb6na6k001i7pphqx99wlxh","_id":"cjqb6na76003s7pphjmhcg0yc"},{"post_id":"cjqb6na6f00157pphygeculvv","tag_id":"cjqb6na6n001o7pphzxcnvxlx","_id":"cjqb6na76003u7pphair275gm"},{"post_id":"cjqb6na6f00177pphy85lykoe","tag_id":"cjqb6na6p001t7pphfc5ebhq8","_id":"cjqb6na77003x7pphr7hjyoja"},{"post_id":"cjqb6na6f00177pphy85lykoe","tag_id":"cjqb6na6k001i7pphqx99wlxh","_id":"cjqb6na77003y7pphruxvwvhl"},{"post_id":"cjqb6na6f00177pphy85lykoe","tag_id":"cjqb6na6n001o7pphzxcnvxlx","_id":"cjqb6na7800407pphfsv8k0nr"},{"post_id":"cjqb6na6g00197pph1x0rp2kd","tag_id":"cjqb6na77003w7pph2l57yw3t","_id":"cjqb6na7800427pph5p29w65k"},{"post_id":"cjqb6na6g00197pph1x0rp2kd","tag_id":"cjqb6na6v002j7pphiyfjho94","_id":"cjqb6na7800437pphzkico2cx"},{"post_id":"cjqb6na6h001e7pphg9sz57k9","tag_id":"cjqb6na77003w7pph2l57yw3t","_id":"cjqb6na7900467pphh5to0e24"},{"post_id":"cjqb6na6h001e7pphg9sz57k9","tag_id":"cjqb6na6v002j7pphiyfjho94","_id":"cjqb6na7900477pphzj0qfzik"},{"post_id":"cjqb6na6j001f7pphd12gqsfv","tag_id":"cjqb6na7900457pph4qkkw9di","_id":"cjqb6na7a00497pphi0dj1huu"},{"post_id":"cjqb6na6k001j7pphbd5p1dnw","tag_id":"cjqb6na6p001t7pphfc5ebhq8","_id":"cjqb6na7b004c7pph2ifb2exp"},{"post_id":"cjqb6na6k001j7pphbd5p1dnw","tag_id":"cjqb6na6k001i7pphqx99wlxh","_id":"cjqb6na7b004d7pphoh9q7gm0"},{"post_id":"cjqb6na6k001j7pphbd5p1dnw","tag_id":"cjqb6na6n001o7pphzxcnvxlx","_id":"cjqb6na7c004f7pphtx4o21wh"},{"post_id":"cjqb6na6l001l7pphqv0h6v5c","tag_id":"cjqb6na7b004b7pphtd8ce16q","_id":"cjqb6na7c004g7pphmhw35l78"},{"post_id":"cjqb6na6n001p7pphdw0tyyde","tag_id":"cjqb6na6p001t7pphfc5ebhq8","_id":"cjqb6na7d004h7pph2g0j2cnp"},{"post_id":"cjqb6na6n001p7pphdw0tyyde","tag_id":"cjqb6na6k001i7pphqx99wlxh","_id":"cjqb6na7d004i7pphtz65in6h"},{"post_id":"cjqb6na6n001p7pphdw0tyyde","tag_id":"cjqb6na6n001o7pphzxcnvxlx","_id":"cjqb6na7d004j7pphc7276tlu"}],"Tag":[{"name":"Research Daily","_id":"cjqb6na5z00057pphbeuj54b7"},{"name":"CAML","_id":"cjqb6na62000a7pphzr2hh2fs"},{"name":"Paraview","_id":"cjqb6na64000f7pphq60bslk9"},{"name":"DSP First","_id":"cjqb6na67000m7pphihg4zs91"},{"name":"MacOS","_id":"cjqb6na6e00147pphyum4v09t"},{"name":"Emacs","_id":"cjqb6na6h001c7pphhdf5u5kz"},{"name":"LBM","_id":"cjqb6na6k001i7pphqx99wlxh"},{"name":"CFD","_id":"cjqb6na6n001o7pphzxcnvxlx"},{"name":"Palabos","_id":"cjqb6na6p001t7pphfc5ebhq8"},{"name":"OpenLB","_id":"cjqb6na6r00217pph8ww2reww"},{"name":"XFlow","_id":"cjqb6na6s00257pph1k2fj8bd"},{"name":"PowerFlow","_id":"cjqb6na6t00287pph8jw48i7j"},{"name":"ProLB","_id":"cjqb6na6u002b7pphb301qrnv"},{"name":"On the Art of Singing","_id":"cjqb6na6u002e7pph76qhauze"},{"name":"Voice","_id":"cjqb6na6v002j7pphiyfjho94"},{"name":"HPC","_id":"cjqb6na72003d7pph1g2548ge"},{"name":"Practical Vocal Acoustics","_id":"cjqb6na77003w7pph2l57yw3t"},{"name":"Acoustics","_id":"cjqb6na7900457pph4qkkw9di"},{"name":"test","_id":"cjqb6na7b004b7pphtd8ce16q"}]}}